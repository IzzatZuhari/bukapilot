#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2508545050460247670) {
   out_2508545050460247670[0] = 0;
   out_2508545050460247670[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2508545050460247670[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2508545050460247670[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2508545050460247670[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2508545050460247670[5] = -sin(in_vec[1]);
   out_2508545050460247670[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2508545050460247670[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2508545050460247670[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2508545050460247670[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2508545050460247670[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2508545050460247670[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2508545050460247670[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2508545050460247670[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2508545050460247670[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2508545050460247670[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2508545050460247670[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2508545050460247670[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8922224738887600792) {
   out_8922224738887600792[0] = delta_x[0] + nom_x[0];
   out_8922224738887600792[1] = delta_x[1] + nom_x[1];
   out_8922224738887600792[2] = delta_x[2] + nom_x[2];
   out_8922224738887600792[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8922224738887600792[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8922224738887600792[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8922224738887600792[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8922224738887600792[7] = delta_x[6] + nom_x[7];
   out_8922224738887600792[8] = delta_x[7] + nom_x[8];
   out_8922224738887600792[9] = delta_x[8] + nom_x[9];
   out_8922224738887600792[10] = delta_x[9] + nom_x[10];
   out_8922224738887600792[11] = delta_x[10] + nom_x[11];
   out_8922224738887600792[12] = delta_x[11] + nom_x[12];
   out_8922224738887600792[13] = delta_x[12] + nom_x[13];
   out_8922224738887600792[14] = delta_x[13] + nom_x[14];
   out_8922224738887600792[15] = delta_x[14] + nom_x[15];
   out_8922224738887600792[16] = delta_x[15] + nom_x[16];
   out_8922224738887600792[17] = delta_x[16] + nom_x[17];
   out_8922224738887600792[18] = delta_x[17] + nom_x[18];
   out_8922224738887600792[19] = delta_x[18] + nom_x[19];
   out_8922224738887600792[20] = delta_x[19] + nom_x[20];
   out_8922224738887600792[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_9184353739647366519) {
   out_9184353739647366519[0] = -nom_x[0] + true_x[0];
   out_9184353739647366519[1] = -nom_x[1] + true_x[1];
   out_9184353739647366519[2] = -nom_x[2] + true_x[2];
   out_9184353739647366519[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_9184353739647366519[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_9184353739647366519[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_9184353739647366519[6] = -nom_x[7] + true_x[7];
   out_9184353739647366519[7] = -nom_x[8] + true_x[8];
   out_9184353739647366519[8] = -nom_x[9] + true_x[9];
   out_9184353739647366519[9] = -nom_x[10] + true_x[10];
   out_9184353739647366519[10] = -nom_x[11] + true_x[11];
   out_9184353739647366519[11] = -nom_x[12] + true_x[12];
   out_9184353739647366519[12] = -nom_x[13] + true_x[13];
   out_9184353739647366519[13] = -nom_x[14] + true_x[14];
   out_9184353739647366519[14] = -nom_x[15] + true_x[15];
   out_9184353739647366519[15] = -nom_x[16] + true_x[16];
   out_9184353739647366519[16] = -nom_x[17] + true_x[17];
   out_9184353739647366519[17] = -nom_x[18] + true_x[18];
   out_9184353739647366519[18] = -nom_x[19] + true_x[19];
   out_9184353739647366519[19] = -nom_x[20] + true_x[20];
   out_9184353739647366519[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8025929700250430649) {
   out_8025929700250430649[0] = 1.0;
   out_8025929700250430649[1] = 0;
   out_8025929700250430649[2] = 0;
   out_8025929700250430649[3] = 0;
   out_8025929700250430649[4] = 0;
   out_8025929700250430649[5] = 0;
   out_8025929700250430649[6] = 0;
   out_8025929700250430649[7] = 0;
   out_8025929700250430649[8] = 0;
   out_8025929700250430649[9] = 0;
   out_8025929700250430649[10] = 0;
   out_8025929700250430649[11] = 0;
   out_8025929700250430649[12] = 0;
   out_8025929700250430649[13] = 0;
   out_8025929700250430649[14] = 0;
   out_8025929700250430649[15] = 0;
   out_8025929700250430649[16] = 0;
   out_8025929700250430649[17] = 0;
   out_8025929700250430649[18] = 0;
   out_8025929700250430649[19] = 0;
   out_8025929700250430649[20] = 0;
   out_8025929700250430649[21] = 0;
   out_8025929700250430649[22] = 1.0;
   out_8025929700250430649[23] = 0;
   out_8025929700250430649[24] = 0;
   out_8025929700250430649[25] = 0;
   out_8025929700250430649[26] = 0;
   out_8025929700250430649[27] = 0;
   out_8025929700250430649[28] = 0;
   out_8025929700250430649[29] = 0;
   out_8025929700250430649[30] = 0;
   out_8025929700250430649[31] = 0;
   out_8025929700250430649[32] = 0;
   out_8025929700250430649[33] = 0;
   out_8025929700250430649[34] = 0;
   out_8025929700250430649[35] = 0;
   out_8025929700250430649[36] = 0;
   out_8025929700250430649[37] = 0;
   out_8025929700250430649[38] = 0;
   out_8025929700250430649[39] = 0;
   out_8025929700250430649[40] = 0;
   out_8025929700250430649[41] = 0;
   out_8025929700250430649[42] = 0;
   out_8025929700250430649[43] = 0;
   out_8025929700250430649[44] = 1.0;
   out_8025929700250430649[45] = 0;
   out_8025929700250430649[46] = 0;
   out_8025929700250430649[47] = 0;
   out_8025929700250430649[48] = 0;
   out_8025929700250430649[49] = 0;
   out_8025929700250430649[50] = 0;
   out_8025929700250430649[51] = 0;
   out_8025929700250430649[52] = 0;
   out_8025929700250430649[53] = 0;
   out_8025929700250430649[54] = 0;
   out_8025929700250430649[55] = 0;
   out_8025929700250430649[56] = 0;
   out_8025929700250430649[57] = 0;
   out_8025929700250430649[58] = 0;
   out_8025929700250430649[59] = 0;
   out_8025929700250430649[60] = 0;
   out_8025929700250430649[61] = 0;
   out_8025929700250430649[62] = 0;
   out_8025929700250430649[63] = 0;
   out_8025929700250430649[64] = 0;
   out_8025929700250430649[65] = 0;
   out_8025929700250430649[66] = -0.5*state[4];
   out_8025929700250430649[67] = -0.5*state[5];
   out_8025929700250430649[68] = -0.5*state[6];
   out_8025929700250430649[69] = 0;
   out_8025929700250430649[70] = 0;
   out_8025929700250430649[71] = 0;
   out_8025929700250430649[72] = 0;
   out_8025929700250430649[73] = 0;
   out_8025929700250430649[74] = 0;
   out_8025929700250430649[75] = 0;
   out_8025929700250430649[76] = 0;
   out_8025929700250430649[77] = 0;
   out_8025929700250430649[78] = 0;
   out_8025929700250430649[79] = 0;
   out_8025929700250430649[80] = 0;
   out_8025929700250430649[81] = 0;
   out_8025929700250430649[82] = 0;
   out_8025929700250430649[83] = 0;
   out_8025929700250430649[84] = 0;
   out_8025929700250430649[85] = 0;
   out_8025929700250430649[86] = 0;
   out_8025929700250430649[87] = 0.5*state[3];
   out_8025929700250430649[88] = 0.5*state[6];
   out_8025929700250430649[89] = -0.5*state[5];
   out_8025929700250430649[90] = 0;
   out_8025929700250430649[91] = 0;
   out_8025929700250430649[92] = 0;
   out_8025929700250430649[93] = 0;
   out_8025929700250430649[94] = 0;
   out_8025929700250430649[95] = 0;
   out_8025929700250430649[96] = 0;
   out_8025929700250430649[97] = 0;
   out_8025929700250430649[98] = 0;
   out_8025929700250430649[99] = 0;
   out_8025929700250430649[100] = 0;
   out_8025929700250430649[101] = 0;
   out_8025929700250430649[102] = 0;
   out_8025929700250430649[103] = 0;
   out_8025929700250430649[104] = 0;
   out_8025929700250430649[105] = 0;
   out_8025929700250430649[106] = 0;
   out_8025929700250430649[107] = 0;
   out_8025929700250430649[108] = -0.5*state[6];
   out_8025929700250430649[109] = 0.5*state[3];
   out_8025929700250430649[110] = 0.5*state[4];
   out_8025929700250430649[111] = 0;
   out_8025929700250430649[112] = 0;
   out_8025929700250430649[113] = 0;
   out_8025929700250430649[114] = 0;
   out_8025929700250430649[115] = 0;
   out_8025929700250430649[116] = 0;
   out_8025929700250430649[117] = 0;
   out_8025929700250430649[118] = 0;
   out_8025929700250430649[119] = 0;
   out_8025929700250430649[120] = 0;
   out_8025929700250430649[121] = 0;
   out_8025929700250430649[122] = 0;
   out_8025929700250430649[123] = 0;
   out_8025929700250430649[124] = 0;
   out_8025929700250430649[125] = 0;
   out_8025929700250430649[126] = 0;
   out_8025929700250430649[127] = 0;
   out_8025929700250430649[128] = 0;
   out_8025929700250430649[129] = 0.5*state[5];
   out_8025929700250430649[130] = -0.5*state[4];
   out_8025929700250430649[131] = 0.5*state[3];
   out_8025929700250430649[132] = 0;
   out_8025929700250430649[133] = 0;
   out_8025929700250430649[134] = 0;
   out_8025929700250430649[135] = 0;
   out_8025929700250430649[136] = 0;
   out_8025929700250430649[137] = 0;
   out_8025929700250430649[138] = 0;
   out_8025929700250430649[139] = 0;
   out_8025929700250430649[140] = 0;
   out_8025929700250430649[141] = 0;
   out_8025929700250430649[142] = 0;
   out_8025929700250430649[143] = 0;
   out_8025929700250430649[144] = 0;
   out_8025929700250430649[145] = 0;
   out_8025929700250430649[146] = 0;
   out_8025929700250430649[147] = 0;
   out_8025929700250430649[148] = 0;
   out_8025929700250430649[149] = 0;
   out_8025929700250430649[150] = 0;
   out_8025929700250430649[151] = 0;
   out_8025929700250430649[152] = 0;
   out_8025929700250430649[153] = 1.0;
   out_8025929700250430649[154] = 0;
   out_8025929700250430649[155] = 0;
   out_8025929700250430649[156] = 0;
   out_8025929700250430649[157] = 0;
   out_8025929700250430649[158] = 0;
   out_8025929700250430649[159] = 0;
   out_8025929700250430649[160] = 0;
   out_8025929700250430649[161] = 0;
   out_8025929700250430649[162] = 0;
   out_8025929700250430649[163] = 0;
   out_8025929700250430649[164] = 0;
   out_8025929700250430649[165] = 0;
   out_8025929700250430649[166] = 0;
   out_8025929700250430649[167] = 0;
   out_8025929700250430649[168] = 0;
   out_8025929700250430649[169] = 0;
   out_8025929700250430649[170] = 0;
   out_8025929700250430649[171] = 0;
   out_8025929700250430649[172] = 0;
   out_8025929700250430649[173] = 0;
   out_8025929700250430649[174] = 0;
   out_8025929700250430649[175] = 1.0;
   out_8025929700250430649[176] = 0;
   out_8025929700250430649[177] = 0;
   out_8025929700250430649[178] = 0;
   out_8025929700250430649[179] = 0;
   out_8025929700250430649[180] = 0;
   out_8025929700250430649[181] = 0;
   out_8025929700250430649[182] = 0;
   out_8025929700250430649[183] = 0;
   out_8025929700250430649[184] = 0;
   out_8025929700250430649[185] = 0;
   out_8025929700250430649[186] = 0;
   out_8025929700250430649[187] = 0;
   out_8025929700250430649[188] = 0;
   out_8025929700250430649[189] = 0;
   out_8025929700250430649[190] = 0;
   out_8025929700250430649[191] = 0;
   out_8025929700250430649[192] = 0;
   out_8025929700250430649[193] = 0;
   out_8025929700250430649[194] = 0;
   out_8025929700250430649[195] = 0;
   out_8025929700250430649[196] = 0;
   out_8025929700250430649[197] = 1.0;
   out_8025929700250430649[198] = 0;
   out_8025929700250430649[199] = 0;
   out_8025929700250430649[200] = 0;
   out_8025929700250430649[201] = 0;
   out_8025929700250430649[202] = 0;
   out_8025929700250430649[203] = 0;
   out_8025929700250430649[204] = 0;
   out_8025929700250430649[205] = 0;
   out_8025929700250430649[206] = 0;
   out_8025929700250430649[207] = 0;
   out_8025929700250430649[208] = 0;
   out_8025929700250430649[209] = 0;
   out_8025929700250430649[210] = 0;
   out_8025929700250430649[211] = 0;
   out_8025929700250430649[212] = 0;
   out_8025929700250430649[213] = 0;
   out_8025929700250430649[214] = 0;
   out_8025929700250430649[215] = 0;
   out_8025929700250430649[216] = 0;
   out_8025929700250430649[217] = 0;
   out_8025929700250430649[218] = 0;
   out_8025929700250430649[219] = 1.0;
   out_8025929700250430649[220] = 0;
   out_8025929700250430649[221] = 0;
   out_8025929700250430649[222] = 0;
   out_8025929700250430649[223] = 0;
   out_8025929700250430649[224] = 0;
   out_8025929700250430649[225] = 0;
   out_8025929700250430649[226] = 0;
   out_8025929700250430649[227] = 0;
   out_8025929700250430649[228] = 0;
   out_8025929700250430649[229] = 0;
   out_8025929700250430649[230] = 0;
   out_8025929700250430649[231] = 0;
   out_8025929700250430649[232] = 0;
   out_8025929700250430649[233] = 0;
   out_8025929700250430649[234] = 0;
   out_8025929700250430649[235] = 0;
   out_8025929700250430649[236] = 0;
   out_8025929700250430649[237] = 0;
   out_8025929700250430649[238] = 0;
   out_8025929700250430649[239] = 0;
   out_8025929700250430649[240] = 0;
   out_8025929700250430649[241] = 1.0;
   out_8025929700250430649[242] = 0;
   out_8025929700250430649[243] = 0;
   out_8025929700250430649[244] = 0;
   out_8025929700250430649[245] = 0;
   out_8025929700250430649[246] = 0;
   out_8025929700250430649[247] = 0;
   out_8025929700250430649[248] = 0;
   out_8025929700250430649[249] = 0;
   out_8025929700250430649[250] = 0;
   out_8025929700250430649[251] = 0;
   out_8025929700250430649[252] = 0;
   out_8025929700250430649[253] = 0;
   out_8025929700250430649[254] = 0;
   out_8025929700250430649[255] = 0;
   out_8025929700250430649[256] = 0;
   out_8025929700250430649[257] = 0;
   out_8025929700250430649[258] = 0;
   out_8025929700250430649[259] = 0;
   out_8025929700250430649[260] = 0;
   out_8025929700250430649[261] = 0;
   out_8025929700250430649[262] = 0;
   out_8025929700250430649[263] = 1.0;
   out_8025929700250430649[264] = 0;
   out_8025929700250430649[265] = 0;
   out_8025929700250430649[266] = 0;
   out_8025929700250430649[267] = 0;
   out_8025929700250430649[268] = 0;
   out_8025929700250430649[269] = 0;
   out_8025929700250430649[270] = 0;
   out_8025929700250430649[271] = 0;
   out_8025929700250430649[272] = 0;
   out_8025929700250430649[273] = 0;
   out_8025929700250430649[274] = 0;
   out_8025929700250430649[275] = 0;
   out_8025929700250430649[276] = 0;
   out_8025929700250430649[277] = 0;
   out_8025929700250430649[278] = 0;
   out_8025929700250430649[279] = 0;
   out_8025929700250430649[280] = 0;
   out_8025929700250430649[281] = 0;
   out_8025929700250430649[282] = 0;
   out_8025929700250430649[283] = 0;
   out_8025929700250430649[284] = 0;
   out_8025929700250430649[285] = 1.0;
   out_8025929700250430649[286] = 0;
   out_8025929700250430649[287] = 0;
   out_8025929700250430649[288] = 0;
   out_8025929700250430649[289] = 0;
   out_8025929700250430649[290] = 0;
   out_8025929700250430649[291] = 0;
   out_8025929700250430649[292] = 0;
   out_8025929700250430649[293] = 0;
   out_8025929700250430649[294] = 0;
   out_8025929700250430649[295] = 0;
   out_8025929700250430649[296] = 0;
   out_8025929700250430649[297] = 0;
   out_8025929700250430649[298] = 0;
   out_8025929700250430649[299] = 0;
   out_8025929700250430649[300] = 0;
   out_8025929700250430649[301] = 0;
   out_8025929700250430649[302] = 0;
   out_8025929700250430649[303] = 0;
   out_8025929700250430649[304] = 0;
   out_8025929700250430649[305] = 0;
   out_8025929700250430649[306] = 0;
   out_8025929700250430649[307] = 1.0;
   out_8025929700250430649[308] = 0;
   out_8025929700250430649[309] = 0;
   out_8025929700250430649[310] = 0;
   out_8025929700250430649[311] = 0;
   out_8025929700250430649[312] = 0;
   out_8025929700250430649[313] = 0;
   out_8025929700250430649[314] = 0;
   out_8025929700250430649[315] = 0;
   out_8025929700250430649[316] = 0;
   out_8025929700250430649[317] = 0;
   out_8025929700250430649[318] = 0;
   out_8025929700250430649[319] = 0;
   out_8025929700250430649[320] = 0;
   out_8025929700250430649[321] = 0;
   out_8025929700250430649[322] = 0;
   out_8025929700250430649[323] = 0;
   out_8025929700250430649[324] = 0;
   out_8025929700250430649[325] = 0;
   out_8025929700250430649[326] = 0;
   out_8025929700250430649[327] = 0;
   out_8025929700250430649[328] = 0;
   out_8025929700250430649[329] = 1.0;
   out_8025929700250430649[330] = 0;
   out_8025929700250430649[331] = 0;
   out_8025929700250430649[332] = 0;
   out_8025929700250430649[333] = 0;
   out_8025929700250430649[334] = 0;
   out_8025929700250430649[335] = 0;
   out_8025929700250430649[336] = 0;
   out_8025929700250430649[337] = 0;
   out_8025929700250430649[338] = 0;
   out_8025929700250430649[339] = 0;
   out_8025929700250430649[340] = 0;
   out_8025929700250430649[341] = 0;
   out_8025929700250430649[342] = 0;
   out_8025929700250430649[343] = 0;
   out_8025929700250430649[344] = 0;
   out_8025929700250430649[345] = 0;
   out_8025929700250430649[346] = 0;
   out_8025929700250430649[347] = 0;
   out_8025929700250430649[348] = 0;
   out_8025929700250430649[349] = 0;
   out_8025929700250430649[350] = 0;
   out_8025929700250430649[351] = 1.0;
   out_8025929700250430649[352] = 0;
   out_8025929700250430649[353] = 0;
   out_8025929700250430649[354] = 0;
   out_8025929700250430649[355] = 0;
   out_8025929700250430649[356] = 0;
   out_8025929700250430649[357] = 0;
   out_8025929700250430649[358] = 0;
   out_8025929700250430649[359] = 0;
   out_8025929700250430649[360] = 0;
   out_8025929700250430649[361] = 0;
   out_8025929700250430649[362] = 0;
   out_8025929700250430649[363] = 0;
   out_8025929700250430649[364] = 0;
   out_8025929700250430649[365] = 0;
   out_8025929700250430649[366] = 0;
   out_8025929700250430649[367] = 0;
   out_8025929700250430649[368] = 0;
   out_8025929700250430649[369] = 0;
   out_8025929700250430649[370] = 0;
   out_8025929700250430649[371] = 0;
   out_8025929700250430649[372] = 0;
   out_8025929700250430649[373] = 1.0;
   out_8025929700250430649[374] = 0;
   out_8025929700250430649[375] = 0;
   out_8025929700250430649[376] = 0;
   out_8025929700250430649[377] = 0;
   out_8025929700250430649[378] = 0;
   out_8025929700250430649[379] = 0;
   out_8025929700250430649[380] = 0;
   out_8025929700250430649[381] = 0;
   out_8025929700250430649[382] = 0;
   out_8025929700250430649[383] = 0;
   out_8025929700250430649[384] = 0;
   out_8025929700250430649[385] = 0;
   out_8025929700250430649[386] = 0;
   out_8025929700250430649[387] = 0;
   out_8025929700250430649[388] = 0;
   out_8025929700250430649[389] = 0;
   out_8025929700250430649[390] = 0;
   out_8025929700250430649[391] = 0;
   out_8025929700250430649[392] = 0;
   out_8025929700250430649[393] = 0;
   out_8025929700250430649[394] = 0;
   out_8025929700250430649[395] = 1.0;
   out_8025929700250430649[396] = 0;
   out_8025929700250430649[397] = 0;
   out_8025929700250430649[398] = 0;
   out_8025929700250430649[399] = 0;
   out_8025929700250430649[400] = 0;
   out_8025929700250430649[401] = 0;
   out_8025929700250430649[402] = 0;
   out_8025929700250430649[403] = 0;
   out_8025929700250430649[404] = 0;
   out_8025929700250430649[405] = 0;
   out_8025929700250430649[406] = 0;
   out_8025929700250430649[407] = 0;
   out_8025929700250430649[408] = 0;
   out_8025929700250430649[409] = 0;
   out_8025929700250430649[410] = 0;
   out_8025929700250430649[411] = 0;
   out_8025929700250430649[412] = 0;
   out_8025929700250430649[413] = 0;
   out_8025929700250430649[414] = 0;
   out_8025929700250430649[415] = 0;
   out_8025929700250430649[416] = 0;
   out_8025929700250430649[417] = 1.0;
   out_8025929700250430649[418] = 0;
   out_8025929700250430649[419] = 0;
   out_8025929700250430649[420] = 0;
   out_8025929700250430649[421] = 0;
   out_8025929700250430649[422] = 0;
   out_8025929700250430649[423] = 0;
   out_8025929700250430649[424] = 0;
   out_8025929700250430649[425] = 0;
   out_8025929700250430649[426] = 0;
   out_8025929700250430649[427] = 0;
   out_8025929700250430649[428] = 0;
   out_8025929700250430649[429] = 0;
   out_8025929700250430649[430] = 0;
   out_8025929700250430649[431] = 0;
   out_8025929700250430649[432] = 0;
   out_8025929700250430649[433] = 0;
   out_8025929700250430649[434] = 0;
   out_8025929700250430649[435] = 0;
   out_8025929700250430649[436] = 0;
   out_8025929700250430649[437] = 0;
   out_8025929700250430649[438] = 0;
   out_8025929700250430649[439] = 1.0;
   out_8025929700250430649[440] = 0;
   out_8025929700250430649[441] = 0;
   out_8025929700250430649[442] = 0;
   out_8025929700250430649[443] = 0;
   out_8025929700250430649[444] = 0;
   out_8025929700250430649[445] = 0;
   out_8025929700250430649[446] = 0;
   out_8025929700250430649[447] = 0;
   out_8025929700250430649[448] = 0;
   out_8025929700250430649[449] = 0;
   out_8025929700250430649[450] = 0;
   out_8025929700250430649[451] = 0;
   out_8025929700250430649[452] = 0;
   out_8025929700250430649[453] = 0;
   out_8025929700250430649[454] = 0;
   out_8025929700250430649[455] = 0;
   out_8025929700250430649[456] = 0;
   out_8025929700250430649[457] = 0;
   out_8025929700250430649[458] = 0;
   out_8025929700250430649[459] = 0;
   out_8025929700250430649[460] = 0;
   out_8025929700250430649[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6546748259078843739) {
   out_6546748259078843739[0] = dt*state[7] + state[0];
   out_6546748259078843739[1] = dt*state[8] + state[1];
   out_6546748259078843739[2] = dt*state[9] + state[2];
   out_6546748259078843739[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6546748259078843739[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6546748259078843739[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6546748259078843739[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6546748259078843739[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6546748259078843739[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6546748259078843739[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6546748259078843739[10] = state[10];
   out_6546748259078843739[11] = state[11];
   out_6546748259078843739[12] = state[12];
   out_6546748259078843739[13] = state[13];
   out_6546748259078843739[14] = state[14];
   out_6546748259078843739[15] = state[15];
   out_6546748259078843739[16] = state[16];
   out_6546748259078843739[17] = state[17];
   out_6546748259078843739[18] = state[18];
   out_6546748259078843739[19] = state[19];
   out_6546748259078843739[20] = state[20];
   out_6546748259078843739[21] = state[21];
}
void F_fun(double *state, double dt, double *out_820410862806496857) {
   out_820410862806496857[0] = 1;
   out_820410862806496857[1] = 0;
   out_820410862806496857[2] = 0;
   out_820410862806496857[3] = 0;
   out_820410862806496857[4] = 0;
   out_820410862806496857[5] = 0;
   out_820410862806496857[6] = dt;
   out_820410862806496857[7] = 0;
   out_820410862806496857[8] = 0;
   out_820410862806496857[9] = 0;
   out_820410862806496857[10] = 0;
   out_820410862806496857[11] = 0;
   out_820410862806496857[12] = 0;
   out_820410862806496857[13] = 0;
   out_820410862806496857[14] = 0;
   out_820410862806496857[15] = 0;
   out_820410862806496857[16] = 0;
   out_820410862806496857[17] = 0;
   out_820410862806496857[18] = 0;
   out_820410862806496857[19] = 0;
   out_820410862806496857[20] = 0;
   out_820410862806496857[21] = 0;
   out_820410862806496857[22] = 1;
   out_820410862806496857[23] = 0;
   out_820410862806496857[24] = 0;
   out_820410862806496857[25] = 0;
   out_820410862806496857[26] = 0;
   out_820410862806496857[27] = 0;
   out_820410862806496857[28] = dt;
   out_820410862806496857[29] = 0;
   out_820410862806496857[30] = 0;
   out_820410862806496857[31] = 0;
   out_820410862806496857[32] = 0;
   out_820410862806496857[33] = 0;
   out_820410862806496857[34] = 0;
   out_820410862806496857[35] = 0;
   out_820410862806496857[36] = 0;
   out_820410862806496857[37] = 0;
   out_820410862806496857[38] = 0;
   out_820410862806496857[39] = 0;
   out_820410862806496857[40] = 0;
   out_820410862806496857[41] = 0;
   out_820410862806496857[42] = 0;
   out_820410862806496857[43] = 0;
   out_820410862806496857[44] = 1;
   out_820410862806496857[45] = 0;
   out_820410862806496857[46] = 0;
   out_820410862806496857[47] = 0;
   out_820410862806496857[48] = 0;
   out_820410862806496857[49] = 0;
   out_820410862806496857[50] = dt;
   out_820410862806496857[51] = 0;
   out_820410862806496857[52] = 0;
   out_820410862806496857[53] = 0;
   out_820410862806496857[54] = 0;
   out_820410862806496857[55] = 0;
   out_820410862806496857[56] = 0;
   out_820410862806496857[57] = 0;
   out_820410862806496857[58] = 0;
   out_820410862806496857[59] = 0;
   out_820410862806496857[60] = 0;
   out_820410862806496857[61] = 0;
   out_820410862806496857[62] = 0;
   out_820410862806496857[63] = 0;
   out_820410862806496857[64] = 0;
   out_820410862806496857[65] = 0;
   out_820410862806496857[66] = 1;
   out_820410862806496857[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_820410862806496857[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_820410862806496857[69] = 0;
   out_820410862806496857[70] = 0;
   out_820410862806496857[71] = 0;
   out_820410862806496857[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_820410862806496857[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_820410862806496857[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_820410862806496857[75] = 0;
   out_820410862806496857[76] = 0;
   out_820410862806496857[77] = 0;
   out_820410862806496857[78] = 0;
   out_820410862806496857[79] = 0;
   out_820410862806496857[80] = 0;
   out_820410862806496857[81] = 0;
   out_820410862806496857[82] = 0;
   out_820410862806496857[83] = 0;
   out_820410862806496857[84] = 0;
   out_820410862806496857[85] = 0;
   out_820410862806496857[86] = 0;
   out_820410862806496857[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_820410862806496857[88] = 1;
   out_820410862806496857[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_820410862806496857[90] = 0;
   out_820410862806496857[91] = 0;
   out_820410862806496857[92] = 0;
   out_820410862806496857[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_820410862806496857[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_820410862806496857[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_820410862806496857[96] = 0;
   out_820410862806496857[97] = 0;
   out_820410862806496857[98] = 0;
   out_820410862806496857[99] = 0;
   out_820410862806496857[100] = 0;
   out_820410862806496857[101] = 0;
   out_820410862806496857[102] = 0;
   out_820410862806496857[103] = 0;
   out_820410862806496857[104] = 0;
   out_820410862806496857[105] = 0;
   out_820410862806496857[106] = 0;
   out_820410862806496857[107] = 0;
   out_820410862806496857[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_820410862806496857[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_820410862806496857[110] = 1;
   out_820410862806496857[111] = 0;
   out_820410862806496857[112] = 0;
   out_820410862806496857[113] = 0;
   out_820410862806496857[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_820410862806496857[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_820410862806496857[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_820410862806496857[117] = 0;
   out_820410862806496857[118] = 0;
   out_820410862806496857[119] = 0;
   out_820410862806496857[120] = 0;
   out_820410862806496857[121] = 0;
   out_820410862806496857[122] = 0;
   out_820410862806496857[123] = 0;
   out_820410862806496857[124] = 0;
   out_820410862806496857[125] = 0;
   out_820410862806496857[126] = 0;
   out_820410862806496857[127] = 0;
   out_820410862806496857[128] = 0;
   out_820410862806496857[129] = 0;
   out_820410862806496857[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_820410862806496857[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_820410862806496857[132] = 1;
   out_820410862806496857[133] = 0;
   out_820410862806496857[134] = 0;
   out_820410862806496857[135] = 0;
   out_820410862806496857[136] = 0;
   out_820410862806496857[137] = 0;
   out_820410862806496857[138] = 0;
   out_820410862806496857[139] = 0;
   out_820410862806496857[140] = 0;
   out_820410862806496857[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_820410862806496857[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_820410862806496857[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_820410862806496857[144] = 0;
   out_820410862806496857[145] = 0;
   out_820410862806496857[146] = 0;
   out_820410862806496857[147] = 0;
   out_820410862806496857[148] = 0;
   out_820410862806496857[149] = 0;
   out_820410862806496857[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_820410862806496857[151] = 0;
   out_820410862806496857[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_820410862806496857[153] = 0;
   out_820410862806496857[154] = 1;
   out_820410862806496857[155] = 0;
   out_820410862806496857[156] = 0;
   out_820410862806496857[157] = 0;
   out_820410862806496857[158] = 0;
   out_820410862806496857[159] = 0;
   out_820410862806496857[160] = 0;
   out_820410862806496857[161] = 0;
   out_820410862806496857[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_820410862806496857[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_820410862806496857[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_820410862806496857[165] = 0;
   out_820410862806496857[166] = 0;
   out_820410862806496857[167] = 0;
   out_820410862806496857[168] = 0;
   out_820410862806496857[169] = 0;
   out_820410862806496857[170] = 0;
   out_820410862806496857[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_820410862806496857[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_820410862806496857[173] = 0;
   out_820410862806496857[174] = 0;
   out_820410862806496857[175] = 0;
   out_820410862806496857[176] = 1;
   out_820410862806496857[177] = 0;
   out_820410862806496857[178] = 0;
   out_820410862806496857[179] = 0;
   out_820410862806496857[180] = 0;
   out_820410862806496857[181] = 0;
   out_820410862806496857[182] = 0;
   out_820410862806496857[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_820410862806496857[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_820410862806496857[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_820410862806496857[186] = 0;
   out_820410862806496857[187] = 0;
   out_820410862806496857[188] = 0;
   out_820410862806496857[189] = 0;
   out_820410862806496857[190] = 0;
   out_820410862806496857[191] = 0;
   out_820410862806496857[192] = 0;
   out_820410862806496857[193] = 0;
   out_820410862806496857[194] = 0;
   out_820410862806496857[195] = 0;
   out_820410862806496857[196] = 0;
   out_820410862806496857[197] = 0;
   out_820410862806496857[198] = 1;
   out_820410862806496857[199] = 0;
   out_820410862806496857[200] = 0;
   out_820410862806496857[201] = 0;
   out_820410862806496857[202] = 0;
   out_820410862806496857[203] = 0;
   out_820410862806496857[204] = 0;
   out_820410862806496857[205] = 0;
   out_820410862806496857[206] = 0;
   out_820410862806496857[207] = 0;
   out_820410862806496857[208] = 0;
   out_820410862806496857[209] = 0;
   out_820410862806496857[210] = 0;
   out_820410862806496857[211] = 0;
   out_820410862806496857[212] = 0;
   out_820410862806496857[213] = 0;
   out_820410862806496857[214] = 0;
   out_820410862806496857[215] = 0;
   out_820410862806496857[216] = 0;
   out_820410862806496857[217] = 0;
   out_820410862806496857[218] = 0;
   out_820410862806496857[219] = 0;
   out_820410862806496857[220] = 1;
   out_820410862806496857[221] = 0;
   out_820410862806496857[222] = 0;
   out_820410862806496857[223] = 0;
   out_820410862806496857[224] = 0;
   out_820410862806496857[225] = 0;
   out_820410862806496857[226] = 0;
   out_820410862806496857[227] = 0;
   out_820410862806496857[228] = 0;
   out_820410862806496857[229] = 0;
   out_820410862806496857[230] = 0;
   out_820410862806496857[231] = 0;
   out_820410862806496857[232] = 0;
   out_820410862806496857[233] = 0;
   out_820410862806496857[234] = 0;
   out_820410862806496857[235] = 0;
   out_820410862806496857[236] = 0;
   out_820410862806496857[237] = 0;
   out_820410862806496857[238] = 0;
   out_820410862806496857[239] = 0;
   out_820410862806496857[240] = 0;
   out_820410862806496857[241] = 0;
   out_820410862806496857[242] = 1;
   out_820410862806496857[243] = 0;
   out_820410862806496857[244] = 0;
   out_820410862806496857[245] = 0;
   out_820410862806496857[246] = 0;
   out_820410862806496857[247] = 0;
   out_820410862806496857[248] = 0;
   out_820410862806496857[249] = 0;
   out_820410862806496857[250] = 0;
   out_820410862806496857[251] = 0;
   out_820410862806496857[252] = 0;
   out_820410862806496857[253] = 0;
   out_820410862806496857[254] = 0;
   out_820410862806496857[255] = 0;
   out_820410862806496857[256] = 0;
   out_820410862806496857[257] = 0;
   out_820410862806496857[258] = 0;
   out_820410862806496857[259] = 0;
   out_820410862806496857[260] = 0;
   out_820410862806496857[261] = 0;
   out_820410862806496857[262] = 0;
   out_820410862806496857[263] = 0;
   out_820410862806496857[264] = 1;
   out_820410862806496857[265] = 0;
   out_820410862806496857[266] = 0;
   out_820410862806496857[267] = 0;
   out_820410862806496857[268] = 0;
   out_820410862806496857[269] = 0;
   out_820410862806496857[270] = 0;
   out_820410862806496857[271] = 0;
   out_820410862806496857[272] = 0;
   out_820410862806496857[273] = 0;
   out_820410862806496857[274] = 0;
   out_820410862806496857[275] = 0;
   out_820410862806496857[276] = 0;
   out_820410862806496857[277] = 0;
   out_820410862806496857[278] = 0;
   out_820410862806496857[279] = 0;
   out_820410862806496857[280] = 0;
   out_820410862806496857[281] = 0;
   out_820410862806496857[282] = 0;
   out_820410862806496857[283] = 0;
   out_820410862806496857[284] = 0;
   out_820410862806496857[285] = 0;
   out_820410862806496857[286] = 1;
   out_820410862806496857[287] = 0;
   out_820410862806496857[288] = 0;
   out_820410862806496857[289] = 0;
   out_820410862806496857[290] = 0;
   out_820410862806496857[291] = 0;
   out_820410862806496857[292] = 0;
   out_820410862806496857[293] = 0;
   out_820410862806496857[294] = 0;
   out_820410862806496857[295] = 0;
   out_820410862806496857[296] = 0;
   out_820410862806496857[297] = 0;
   out_820410862806496857[298] = 0;
   out_820410862806496857[299] = 0;
   out_820410862806496857[300] = 0;
   out_820410862806496857[301] = 0;
   out_820410862806496857[302] = 0;
   out_820410862806496857[303] = 0;
   out_820410862806496857[304] = 0;
   out_820410862806496857[305] = 0;
   out_820410862806496857[306] = 0;
   out_820410862806496857[307] = 0;
   out_820410862806496857[308] = 1;
   out_820410862806496857[309] = 0;
   out_820410862806496857[310] = 0;
   out_820410862806496857[311] = 0;
   out_820410862806496857[312] = 0;
   out_820410862806496857[313] = 0;
   out_820410862806496857[314] = 0;
   out_820410862806496857[315] = 0;
   out_820410862806496857[316] = 0;
   out_820410862806496857[317] = 0;
   out_820410862806496857[318] = 0;
   out_820410862806496857[319] = 0;
   out_820410862806496857[320] = 0;
   out_820410862806496857[321] = 0;
   out_820410862806496857[322] = 0;
   out_820410862806496857[323] = 0;
   out_820410862806496857[324] = 0;
   out_820410862806496857[325] = 0;
   out_820410862806496857[326] = 0;
   out_820410862806496857[327] = 0;
   out_820410862806496857[328] = 0;
   out_820410862806496857[329] = 0;
   out_820410862806496857[330] = 1;
   out_820410862806496857[331] = 0;
   out_820410862806496857[332] = 0;
   out_820410862806496857[333] = 0;
   out_820410862806496857[334] = 0;
   out_820410862806496857[335] = 0;
   out_820410862806496857[336] = 0;
   out_820410862806496857[337] = 0;
   out_820410862806496857[338] = 0;
   out_820410862806496857[339] = 0;
   out_820410862806496857[340] = 0;
   out_820410862806496857[341] = 0;
   out_820410862806496857[342] = 0;
   out_820410862806496857[343] = 0;
   out_820410862806496857[344] = 0;
   out_820410862806496857[345] = 0;
   out_820410862806496857[346] = 0;
   out_820410862806496857[347] = 0;
   out_820410862806496857[348] = 0;
   out_820410862806496857[349] = 0;
   out_820410862806496857[350] = 0;
   out_820410862806496857[351] = 0;
   out_820410862806496857[352] = 1;
   out_820410862806496857[353] = 0;
   out_820410862806496857[354] = 0;
   out_820410862806496857[355] = 0;
   out_820410862806496857[356] = 0;
   out_820410862806496857[357] = 0;
   out_820410862806496857[358] = 0;
   out_820410862806496857[359] = 0;
   out_820410862806496857[360] = 0;
   out_820410862806496857[361] = 0;
   out_820410862806496857[362] = 0;
   out_820410862806496857[363] = 0;
   out_820410862806496857[364] = 0;
   out_820410862806496857[365] = 0;
   out_820410862806496857[366] = 0;
   out_820410862806496857[367] = 0;
   out_820410862806496857[368] = 0;
   out_820410862806496857[369] = 0;
   out_820410862806496857[370] = 0;
   out_820410862806496857[371] = 0;
   out_820410862806496857[372] = 0;
   out_820410862806496857[373] = 0;
   out_820410862806496857[374] = 1;
   out_820410862806496857[375] = 0;
   out_820410862806496857[376] = 0;
   out_820410862806496857[377] = 0;
   out_820410862806496857[378] = 0;
   out_820410862806496857[379] = 0;
   out_820410862806496857[380] = 0;
   out_820410862806496857[381] = 0;
   out_820410862806496857[382] = 0;
   out_820410862806496857[383] = 0;
   out_820410862806496857[384] = 0;
   out_820410862806496857[385] = 0;
   out_820410862806496857[386] = 0;
   out_820410862806496857[387] = 0;
   out_820410862806496857[388] = 0;
   out_820410862806496857[389] = 0;
   out_820410862806496857[390] = 0;
   out_820410862806496857[391] = 0;
   out_820410862806496857[392] = 0;
   out_820410862806496857[393] = 0;
   out_820410862806496857[394] = 0;
   out_820410862806496857[395] = 0;
   out_820410862806496857[396] = 1;
   out_820410862806496857[397] = 0;
   out_820410862806496857[398] = 0;
   out_820410862806496857[399] = 0;
   out_820410862806496857[400] = 0;
   out_820410862806496857[401] = 0;
   out_820410862806496857[402] = 0;
   out_820410862806496857[403] = 0;
   out_820410862806496857[404] = 0;
   out_820410862806496857[405] = 0;
   out_820410862806496857[406] = 0;
   out_820410862806496857[407] = 0;
   out_820410862806496857[408] = 0;
   out_820410862806496857[409] = 0;
   out_820410862806496857[410] = 0;
   out_820410862806496857[411] = 0;
   out_820410862806496857[412] = 0;
   out_820410862806496857[413] = 0;
   out_820410862806496857[414] = 0;
   out_820410862806496857[415] = 0;
   out_820410862806496857[416] = 0;
   out_820410862806496857[417] = 0;
   out_820410862806496857[418] = 1;
   out_820410862806496857[419] = 0;
   out_820410862806496857[420] = 0;
   out_820410862806496857[421] = 0;
   out_820410862806496857[422] = 0;
   out_820410862806496857[423] = 0;
   out_820410862806496857[424] = 0;
   out_820410862806496857[425] = 0;
   out_820410862806496857[426] = 0;
   out_820410862806496857[427] = 0;
   out_820410862806496857[428] = 0;
   out_820410862806496857[429] = 0;
   out_820410862806496857[430] = 0;
   out_820410862806496857[431] = 0;
   out_820410862806496857[432] = 0;
   out_820410862806496857[433] = 0;
   out_820410862806496857[434] = 0;
   out_820410862806496857[435] = 0;
   out_820410862806496857[436] = 0;
   out_820410862806496857[437] = 0;
   out_820410862806496857[438] = 0;
   out_820410862806496857[439] = 0;
   out_820410862806496857[440] = 1;
}
void h_4(double *state, double *unused, double *out_7961884271916591371) {
   out_7961884271916591371[0] = state[10] + state[13];
   out_7961884271916591371[1] = state[11] + state[14];
   out_7961884271916591371[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3591664531471880417) {
   out_3591664531471880417[0] = 0;
   out_3591664531471880417[1] = 0;
   out_3591664531471880417[2] = 0;
   out_3591664531471880417[3] = 0;
   out_3591664531471880417[4] = 0;
   out_3591664531471880417[5] = 0;
   out_3591664531471880417[6] = 0;
   out_3591664531471880417[7] = 0;
   out_3591664531471880417[8] = 0;
   out_3591664531471880417[9] = 0;
   out_3591664531471880417[10] = 1;
   out_3591664531471880417[11] = 0;
   out_3591664531471880417[12] = 0;
   out_3591664531471880417[13] = 1;
   out_3591664531471880417[14] = 0;
   out_3591664531471880417[15] = 0;
   out_3591664531471880417[16] = 0;
   out_3591664531471880417[17] = 0;
   out_3591664531471880417[18] = 0;
   out_3591664531471880417[19] = 0;
   out_3591664531471880417[20] = 0;
   out_3591664531471880417[21] = 0;
   out_3591664531471880417[22] = 0;
   out_3591664531471880417[23] = 0;
   out_3591664531471880417[24] = 0;
   out_3591664531471880417[25] = 0;
   out_3591664531471880417[26] = 0;
   out_3591664531471880417[27] = 0;
   out_3591664531471880417[28] = 0;
   out_3591664531471880417[29] = 0;
   out_3591664531471880417[30] = 0;
   out_3591664531471880417[31] = 0;
   out_3591664531471880417[32] = 0;
   out_3591664531471880417[33] = 1;
   out_3591664531471880417[34] = 0;
   out_3591664531471880417[35] = 0;
   out_3591664531471880417[36] = 1;
   out_3591664531471880417[37] = 0;
   out_3591664531471880417[38] = 0;
   out_3591664531471880417[39] = 0;
   out_3591664531471880417[40] = 0;
   out_3591664531471880417[41] = 0;
   out_3591664531471880417[42] = 0;
   out_3591664531471880417[43] = 0;
   out_3591664531471880417[44] = 0;
   out_3591664531471880417[45] = 0;
   out_3591664531471880417[46] = 0;
   out_3591664531471880417[47] = 0;
   out_3591664531471880417[48] = 0;
   out_3591664531471880417[49] = 0;
   out_3591664531471880417[50] = 0;
   out_3591664531471880417[51] = 0;
   out_3591664531471880417[52] = 0;
   out_3591664531471880417[53] = 0;
   out_3591664531471880417[54] = 0;
   out_3591664531471880417[55] = 0;
   out_3591664531471880417[56] = 1;
   out_3591664531471880417[57] = 0;
   out_3591664531471880417[58] = 0;
   out_3591664531471880417[59] = 1;
   out_3591664531471880417[60] = 0;
   out_3591664531471880417[61] = 0;
   out_3591664531471880417[62] = 0;
   out_3591664531471880417[63] = 0;
   out_3591664531471880417[64] = 0;
   out_3591664531471880417[65] = 0;
}
void h_9(double *state, double *unused, double *out_9032137970758116100) {
   out_9032137970758116100[0] = state[10];
   out_9032137970758116100[1] = state[11];
   out_9032137970758116100[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3695554403792567053) {
   out_3695554403792567053[0] = 0;
   out_3695554403792567053[1] = 0;
   out_3695554403792567053[2] = 0;
   out_3695554403792567053[3] = 0;
   out_3695554403792567053[4] = 0;
   out_3695554403792567053[5] = 0;
   out_3695554403792567053[6] = 0;
   out_3695554403792567053[7] = 0;
   out_3695554403792567053[8] = 0;
   out_3695554403792567053[9] = 0;
   out_3695554403792567053[10] = 1;
   out_3695554403792567053[11] = 0;
   out_3695554403792567053[12] = 0;
   out_3695554403792567053[13] = 0;
   out_3695554403792567053[14] = 0;
   out_3695554403792567053[15] = 0;
   out_3695554403792567053[16] = 0;
   out_3695554403792567053[17] = 0;
   out_3695554403792567053[18] = 0;
   out_3695554403792567053[19] = 0;
   out_3695554403792567053[20] = 0;
   out_3695554403792567053[21] = 0;
   out_3695554403792567053[22] = 0;
   out_3695554403792567053[23] = 0;
   out_3695554403792567053[24] = 0;
   out_3695554403792567053[25] = 0;
   out_3695554403792567053[26] = 0;
   out_3695554403792567053[27] = 0;
   out_3695554403792567053[28] = 0;
   out_3695554403792567053[29] = 0;
   out_3695554403792567053[30] = 0;
   out_3695554403792567053[31] = 0;
   out_3695554403792567053[32] = 0;
   out_3695554403792567053[33] = 1;
   out_3695554403792567053[34] = 0;
   out_3695554403792567053[35] = 0;
   out_3695554403792567053[36] = 0;
   out_3695554403792567053[37] = 0;
   out_3695554403792567053[38] = 0;
   out_3695554403792567053[39] = 0;
   out_3695554403792567053[40] = 0;
   out_3695554403792567053[41] = 0;
   out_3695554403792567053[42] = 0;
   out_3695554403792567053[43] = 0;
   out_3695554403792567053[44] = 0;
   out_3695554403792567053[45] = 0;
   out_3695554403792567053[46] = 0;
   out_3695554403792567053[47] = 0;
   out_3695554403792567053[48] = 0;
   out_3695554403792567053[49] = 0;
   out_3695554403792567053[50] = 0;
   out_3695554403792567053[51] = 0;
   out_3695554403792567053[52] = 0;
   out_3695554403792567053[53] = 0;
   out_3695554403792567053[54] = 0;
   out_3695554403792567053[55] = 0;
   out_3695554403792567053[56] = 1;
   out_3695554403792567053[57] = 0;
   out_3695554403792567053[58] = 0;
   out_3695554403792567053[59] = 0;
   out_3695554403792567053[60] = 0;
   out_3695554403792567053[61] = 0;
   out_3695554403792567053[62] = 0;
   out_3695554403792567053[63] = 0;
   out_3695554403792567053[64] = 0;
   out_3695554403792567053[65] = 0;
}
void h_10(double *state, double *unused, double *out_3694327695067531867) {
   out_3694327695067531867[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3694327695067531867[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3694327695067531867[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2496280317092357988) {
   out_2496280317092357988[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2496280317092357988[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2496280317092357988[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2496280317092357988[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2496280317092357988[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2496280317092357988[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2496280317092357988[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2496280317092357988[7] = 0;
   out_2496280317092357988[8] = 0;
   out_2496280317092357988[9] = 0;
   out_2496280317092357988[10] = 0;
   out_2496280317092357988[11] = 0;
   out_2496280317092357988[12] = 0;
   out_2496280317092357988[13] = 0;
   out_2496280317092357988[14] = 0;
   out_2496280317092357988[15] = 0;
   out_2496280317092357988[16] = 1;
   out_2496280317092357988[17] = 0;
   out_2496280317092357988[18] = 0;
   out_2496280317092357988[19] = 1;
   out_2496280317092357988[20] = 0;
   out_2496280317092357988[21] = 0;
   out_2496280317092357988[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2496280317092357988[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2496280317092357988[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2496280317092357988[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2496280317092357988[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2496280317092357988[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2496280317092357988[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2496280317092357988[29] = 0;
   out_2496280317092357988[30] = 0;
   out_2496280317092357988[31] = 0;
   out_2496280317092357988[32] = 0;
   out_2496280317092357988[33] = 0;
   out_2496280317092357988[34] = 0;
   out_2496280317092357988[35] = 0;
   out_2496280317092357988[36] = 0;
   out_2496280317092357988[37] = 0;
   out_2496280317092357988[38] = 0;
   out_2496280317092357988[39] = 1;
   out_2496280317092357988[40] = 0;
   out_2496280317092357988[41] = 0;
   out_2496280317092357988[42] = 1;
   out_2496280317092357988[43] = 0;
   out_2496280317092357988[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2496280317092357988[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2496280317092357988[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2496280317092357988[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2496280317092357988[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2496280317092357988[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2496280317092357988[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2496280317092357988[51] = 0;
   out_2496280317092357988[52] = 0;
   out_2496280317092357988[53] = 0;
   out_2496280317092357988[54] = 0;
   out_2496280317092357988[55] = 0;
   out_2496280317092357988[56] = 0;
   out_2496280317092357988[57] = 0;
   out_2496280317092357988[58] = 0;
   out_2496280317092357988[59] = 0;
   out_2496280317092357988[60] = 0;
   out_2496280317092357988[61] = 0;
   out_2496280317092357988[62] = 1;
   out_2496280317092357988[63] = 0;
   out_2496280317092357988[64] = 0;
   out_2496280317092357988[65] = 1;
}
void h_12(double *state, double *unused, double *out_7086267725388028713) {
   out_7086267725388028713[0] = state[0];
   out_7086267725388028713[1] = state[1];
   out_7086267725388028713[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8473821165194938203) {
   out_8473821165194938203[0] = 1;
   out_8473821165194938203[1] = 0;
   out_8473821165194938203[2] = 0;
   out_8473821165194938203[3] = 0;
   out_8473821165194938203[4] = 0;
   out_8473821165194938203[5] = 0;
   out_8473821165194938203[6] = 0;
   out_8473821165194938203[7] = 0;
   out_8473821165194938203[8] = 0;
   out_8473821165194938203[9] = 0;
   out_8473821165194938203[10] = 0;
   out_8473821165194938203[11] = 0;
   out_8473821165194938203[12] = 0;
   out_8473821165194938203[13] = 0;
   out_8473821165194938203[14] = 0;
   out_8473821165194938203[15] = 0;
   out_8473821165194938203[16] = 0;
   out_8473821165194938203[17] = 0;
   out_8473821165194938203[18] = 0;
   out_8473821165194938203[19] = 0;
   out_8473821165194938203[20] = 0;
   out_8473821165194938203[21] = 0;
   out_8473821165194938203[22] = 0;
   out_8473821165194938203[23] = 1;
   out_8473821165194938203[24] = 0;
   out_8473821165194938203[25] = 0;
   out_8473821165194938203[26] = 0;
   out_8473821165194938203[27] = 0;
   out_8473821165194938203[28] = 0;
   out_8473821165194938203[29] = 0;
   out_8473821165194938203[30] = 0;
   out_8473821165194938203[31] = 0;
   out_8473821165194938203[32] = 0;
   out_8473821165194938203[33] = 0;
   out_8473821165194938203[34] = 0;
   out_8473821165194938203[35] = 0;
   out_8473821165194938203[36] = 0;
   out_8473821165194938203[37] = 0;
   out_8473821165194938203[38] = 0;
   out_8473821165194938203[39] = 0;
   out_8473821165194938203[40] = 0;
   out_8473821165194938203[41] = 0;
   out_8473821165194938203[42] = 0;
   out_8473821165194938203[43] = 0;
   out_8473821165194938203[44] = 0;
   out_8473821165194938203[45] = 0;
   out_8473821165194938203[46] = 1;
   out_8473821165194938203[47] = 0;
   out_8473821165194938203[48] = 0;
   out_8473821165194938203[49] = 0;
   out_8473821165194938203[50] = 0;
   out_8473821165194938203[51] = 0;
   out_8473821165194938203[52] = 0;
   out_8473821165194938203[53] = 0;
   out_8473821165194938203[54] = 0;
   out_8473821165194938203[55] = 0;
   out_8473821165194938203[56] = 0;
   out_8473821165194938203[57] = 0;
   out_8473821165194938203[58] = 0;
   out_8473821165194938203[59] = 0;
   out_8473821165194938203[60] = 0;
   out_8473821165194938203[61] = 0;
   out_8473821165194938203[62] = 0;
   out_8473821165194938203[63] = 0;
   out_8473821165194938203[64] = 0;
   out_8473821165194938203[65] = 0;
}
void h_31(double *state, double *unused, double *out_4903278266110709116) {
   out_4903278266110709116[0] = state[7];
   out_4903278266110709116[1] = state[8];
   out_4903278266110709116[2] = state[9];
}
void H_31(double *state, double *unused, double *out_225002474099273041) {
   out_225002474099273041[0] = 0;
   out_225002474099273041[1] = 0;
   out_225002474099273041[2] = 0;
   out_225002474099273041[3] = 0;
   out_225002474099273041[4] = 0;
   out_225002474099273041[5] = 0;
   out_225002474099273041[6] = 0;
   out_225002474099273041[7] = 1;
   out_225002474099273041[8] = 0;
   out_225002474099273041[9] = 0;
   out_225002474099273041[10] = 0;
   out_225002474099273041[11] = 0;
   out_225002474099273041[12] = 0;
   out_225002474099273041[13] = 0;
   out_225002474099273041[14] = 0;
   out_225002474099273041[15] = 0;
   out_225002474099273041[16] = 0;
   out_225002474099273041[17] = 0;
   out_225002474099273041[18] = 0;
   out_225002474099273041[19] = 0;
   out_225002474099273041[20] = 0;
   out_225002474099273041[21] = 0;
   out_225002474099273041[22] = 0;
   out_225002474099273041[23] = 0;
   out_225002474099273041[24] = 0;
   out_225002474099273041[25] = 0;
   out_225002474099273041[26] = 0;
   out_225002474099273041[27] = 0;
   out_225002474099273041[28] = 0;
   out_225002474099273041[29] = 0;
   out_225002474099273041[30] = 1;
   out_225002474099273041[31] = 0;
   out_225002474099273041[32] = 0;
   out_225002474099273041[33] = 0;
   out_225002474099273041[34] = 0;
   out_225002474099273041[35] = 0;
   out_225002474099273041[36] = 0;
   out_225002474099273041[37] = 0;
   out_225002474099273041[38] = 0;
   out_225002474099273041[39] = 0;
   out_225002474099273041[40] = 0;
   out_225002474099273041[41] = 0;
   out_225002474099273041[42] = 0;
   out_225002474099273041[43] = 0;
   out_225002474099273041[44] = 0;
   out_225002474099273041[45] = 0;
   out_225002474099273041[46] = 0;
   out_225002474099273041[47] = 0;
   out_225002474099273041[48] = 0;
   out_225002474099273041[49] = 0;
   out_225002474099273041[50] = 0;
   out_225002474099273041[51] = 0;
   out_225002474099273041[52] = 0;
   out_225002474099273041[53] = 1;
   out_225002474099273041[54] = 0;
   out_225002474099273041[55] = 0;
   out_225002474099273041[56] = 0;
   out_225002474099273041[57] = 0;
   out_225002474099273041[58] = 0;
   out_225002474099273041[59] = 0;
   out_225002474099273041[60] = 0;
   out_225002474099273041[61] = 0;
   out_225002474099273041[62] = 0;
   out_225002474099273041[63] = 0;
   out_225002474099273041[64] = 0;
   out_225002474099273041[65] = 0;
}
void h_32(double *state, double *unused, double *out_7636266217782030715) {
   out_7636266217782030715[0] = state[3];
   out_7636266217782030715[1] = state[4];
   out_7636266217782030715[2] = state[5];
   out_7636266217782030715[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3679515536202440975) {
   out_3679515536202440975[0] = 0;
   out_3679515536202440975[1] = 0;
   out_3679515536202440975[2] = 0;
   out_3679515536202440975[3] = 1;
   out_3679515536202440975[4] = 0;
   out_3679515536202440975[5] = 0;
   out_3679515536202440975[6] = 0;
   out_3679515536202440975[7] = 0;
   out_3679515536202440975[8] = 0;
   out_3679515536202440975[9] = 0;
   out_3679515536202440975[10] = 0;
   out_3679515536202440975[11] = 0;
   out_3679515536202440975[12] = 0;
   out_3679515536202440975[13] = 0;
   out_3679515536202440975[14] = 0;
   out_3679515536202440975[15] = 0;
   out_3679515536202440975[16] = 0;
   out_3679515536202440975[17] = 0;
   out_3679515536202440975[18] = 0;
   out_3679515536202440975[19] = 0;
   out_3679515536202440975[20] = 0;
   out_3679515536202440975[21] = 0;
   out_3679515536202440975[22] = 0;
   out_3679515536202440975[23] = 0;
   out_3679515536202440975[24] = 0;
   out_3679515536202440975[25] = 0;
   out_3679515536202440975[26] = 1;
   out_3679515536202440975[27] = 0;
   out_3679515536202440975[28] = 0;
   out_3679515536202440975[29] = 0;
   out_3679515536202440975[30] = 0;
   out_3679515536202440975[31] = 0;
   out_3679515536202440975[32] = 0;
   out_3679515536202440975[33] = 0;
   out_3679515536202440975[34] = 0;
   out_3679515536202440975[35] = 0;
   out_3679515536202440975[36] = 0;
   out_3679515536202440975[37] = 0;
   out_3679515536202440975[38] = 0;
   out_3679515536202440975[39] = 0;
   out_3679515536202440975[40] = 0;
   out_3679515536202440975[41] = 0;
   out_3679515536202440975[42] = 0;
   out_3679515536202440975[43] = 0;
   out_3679515536202440975[44] = 0;
   out_3679515536202440975[45] = 0;
   out_3679515536202440975[46] = 0;
   out_3679515536202440975[47] = 0;
   out_3679515536202440975[48] = 0;
   out_3679515536202440975[49] = 1;
   out_3679515536202440975[50] = 0;
   out_3679515536202440975[51] = 0;
   out_3679515536202440975[52] = 0;
   out_3679515536202440975[53] = 0;
   out_3679515536202440975[54] = 0;
   out_3679515536202440975[55] = 0;
   out_3679515536202440975[56] = 0;
   out_3679515536202440975[57] = 0;
   out_3679515536202440975[58] = 0;
   out_3679515536202440975[59] = 0;
   out_3679515536202440975[60] = 0;
   out_3679515536202440975[61] = 0;
   out_3679515536202440975[62] = 0;
   out_3679515536202440975[63] = 0;
   out_3679515536202440975[64] = 0;
   out_3679515536202440975[65] = 0;
   out_3679515536202440975[66] = 0;
   out_3679515536202440975[67] = 0;
   out_3679515536202440975[68] = 0;
   out_3679515536202440975[69] = 0;
   out_3679515536202440975[70] = 0;
   out_3679515536202440975[71] = 0;
   out_3679515536202440975[72] = 1;
   out_3679515536202440975[73] = 0;
   out_3679515536202440975[74] = 0;
   out_3679515536202440975[75] = 0;
   out_3679515536202440975[76] = 0;
   out_3679515536202440975[77] = 0;
   out_3679515536202440975[78] = 0;
   out_3679515536202440975[79] = 0;
   out_3679515536202440975[80] = 0;
   out_3679515536202440975[81] = 0;
   out_3679515536202440975[82] = 0;
   out_3679515536202440975[83] = 0;
   out_3679515536202440975[84] = 0;
   out_3679515536202440975[85] = 0;
   out_3679515536202440975[86] = 0;
   out_3679515536202440975[87] = 0;
}
void h_13(double *state, double *unused, double *out_6202873061643521826) {
   out_6202873061643521826[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6202873061643521826[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6202873061643521826[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2153824043286660686) {
   out_2153824043286660686[0] = 0;
   out_2153824043286660686[1] = 0;
   out_2153824043286660686[2] = 0;
   out_2153824043286660686[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2153824043286660686[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2153824043286660686[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2153824043286660686[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2153824043286660686[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2153824043286660686[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2153824043286660686[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2153824043286660686[10] = 0;
   out_2153824043286660686[11] = 0;
   out_2153824043286660686[12] = 0;
   out_2153824043286660686[13] = 0;
   out_2153824043286660686[14] = 0;
   out_2153824043286660686[15] = 0;
   out_2153824043286660686[16] = 0;
   out_2153824043286660686[17] = 0;
   out_2153824043286660686[18] = 0;
   out_2153824043286660686[19] = 0;
   out_2153824043286660686[20] = 0;
   out_2153824043286660686[21] = 0;
   out_2153824043286660686[22] = 0;
   out_2153824043286660686[23] = 0;
   out_2153824043286660686[24] = 0;
   out_2153824043286660686[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2153824043286660686[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2153824043286660686[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2153824043286660686[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2153824043286660686[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2153824043286660686[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2153824043286660686[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2153824043286660686[32] = 0;
   out_2153824043286660686[33] = 0;
   out_2153824043286660686[34] = 0;
   out_2153824043286660686[35] = 0;
   out_2153824043286660686[36] = 0;
   out_2153824043286660686[37] = 0;
   out_2153824043286660686[38] = 0;
   out_2153824043286660686[39] = 0;
   out_2153824043286660686[40] = 0;
   out_2153824043286660686[41] = 0;
   out_2153824043286660686[42] = 0;
   out_2153824043286660686[43] = 0;
   out_2153824043286660686[44] = 0;
   out_2153824043286660686[45] = 0;
   out_2153824043286660686[46] = 0;
   out_2153824043286660686[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2153824043286660686[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2153824043286660686[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2153824043286660686[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2153824043286660686[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2153824043286660686[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2153824043286660686[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2153824043286660686[54] = 0;
   out_2153824043286660686[55] = 0;
   out_2153824043286660686[56] = 0;
   out_2153824043286660686[57] = 0;
   out_2153824043286660686[58] = 0;
   out_2153824043286660686[59] = 0;
   out_2153824043286660686[60] = 0;
   out_2153824043286660686[61] = 0;
   out_2153824043286660686[62] = 0;
   out_2153824043286660686[63] = 0;
   out_2153824043286660686[64] = 0;
   out_2153824043286660686[65] = 0;
}
void h_14(double *state, double *unused, double *out_9032137970758116100) {
   out_9032137970758116100[0] = state[10];
   out_9032137970758116100[1] = state[11];
   out_9032137970758116100[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3695554403792567053) {
   out_3695554403792567053[0] = 0;
   out_3695554403792567053[1] = 0;
   out_3695554403792567053[2] = 0;
   out_3695554403792567053[3] = 0;
   out_3695554403792567053[4] = 0;
   out_3695554403792567053[5] = 0;
   out_3695554403792567053[6] = 0;
   out_3695554403792567053[7] = 0;
   out_3695554403792567053[8] = 0;
   out_3695554403792567053[9] = 0;
   out_3695554403792567053[10] = 1;
   out_3695554403792567053[11] = 0;
   out_3695554403792567053[12] = 0;
   out_3695554403792567053[13] = 0;
   out_3695554403792567053[14] = 0;
   out_3695554403792567053[15] = 0;
   out_3695554403792567053[16] = 0;
   out_3695554403792567053[17] = 0;
   out_3695554403792567053[18] = 0;
   out_3695554403792567053[19] = 0;
   out_3695554403792567053[20] = 0;
   out_3695554403792567053[21] = 0;
   out_3695554403792567053[22] = 0;
   out_3695554403792567053[23] = 0;
   out_3695554403792567053[24] = 0;
   out_3695554403792567053[25] = 0;
   out_3695554403792567053[26] = 0;
   out_3695554403792567053[27] = 0;
   out_3695554403792567053[28] = 0;
   out_3695554403792567053[29] = 0;
   out_3695554403792567053[30] = 0;
   out_3695554403792567053[31] = 0;
   out_3695554403792567053[32] = 0;
   out_3695554403792567053[33] = 1;
   out_3695554403792567053[34] = 0;
   out_3695554403792567053[35] = 0;
   out_3695554403792567053[36] = 0;
   out_3695554403792567053[37] = 0;
   out_3695554403792567053[38] = 0;
   out_3695554403792567053[39] = 0;
   out_3695554403792567053[40] = 0;
   out_3695554403792567053[41] = 0;
   out_3695554403792567053[42] = 0;
   out_3695554403792567053[43] = 0;
   out_3695554403792567053[44] = 0;
   out_3695554403792567053[45] = 0;
   out_3695554403792567053[46] = 0;
   out_3695554403792567053[47] = 0;
   out_3695554403792567053[48] = 0;
   out_3695554403792567053[49] = 0;
   out_3695554403792567053[50] = 0;
   out_3695554403792567053[51] = 0;
   out_3695554403792567053[52] = 0;
   out_3695554403792567053[53] = 0;
   out_3695554403792567053[54] = 0;
   out_3695554403792567053[55] = 0;
   out_3695554403792567053[56] = 1;
   out_3695554403792567053[57] = 0;
   out_3695554403792567053[58] = 0;
   out_3695554403792567053[59] = 0;
   out_3695554403792567053[60] = 0;
   out_3695554403792567053[61] = 0;
   out_3695554403792567053[62] = 0;
   out_3695554403792567053[63] = 0;
   out_3695554403792567053[64] = 0;
   out_3695554403792567053[65] = 0;
}
void h_33(double *state, double *unused, double *out_5544625881221946135) {
   out_5544625881221946135[0] = state[16];
   out_5544625881221946135[1] = state[17];
   out_5544625881221946135[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2925554530539584563) {
   out_2925554530539584563[0] = 0;
   out_2925554530539584563[1] = 0;
   out_2925554530539584563[2] = 0;
   out_2925554530539584563[3] = 0;
   out_2925554530539584563[4] = 0;
   out_2925554530539584563[5] = 0;
   out_2925554530539584563[6] = 0;
   out_2925554530539584563[7] = 0;
   out_2925554530539584563[8] = 0;
   out_2925554530539584563[9] = 0;
   out_2925554530539584563[10] = 0;
   out_2925554530539584563[11] = 0;
   out_2925554530539584563[12] = 0;
   out_2925554530539584563[13] = 0;
   out_2925554530539584563[14] = 0;
   out_2925554530539584563[15] = 0;
   out_2925554530539584563[16] = 1;
   out_2925554530539584563[17] = 0;
   out_2925554530539584563[18] = 0;
   out_2925554530539584563[19] = 0;
   out_2925554530539584563[20] = 0;
   out_2925554530539584563[21] = 0;
   out_2925554530539584563[22] = 0;
   out_2925554530539584563[23] = 0;
   out_2925554530539584563[24] = 0;
   out_2925554530539584563[25] = 0;
   out_2925554530539584563[26] = 0;
   out_2925554530539584563[27] = 0;
   out_2925554530539584563[28] = 0;
   out_2925554530539584563[29] = 0;
   out_2925554530539584563[30] = 0;
   out_2925554530539584563[31] = 0;
   out_2925554530539584563[32] = 0;
   out_2925554530539584563[33] = 0;
   out_2925554530539584563[34] = 0;
   out_2925554530539584563[35] = 0;
   out_2925554530539584563[36] = 0;
   out_2925554530539584563[37] = 0;
   out_2925554530539584563[38] = 0;
   out_2925554530539584563[39] = 1;
   out_2925554530539584563[40] = 0;
   out_2925554530539584563[41] = 0;
   out_2925554530539584563[42] = 0;
   out_2925554530539584563[43] = 0;
   out_2925554530539584563[44] = 0;
   out_2925554530539584563[45] = 0;
   out_2925554530539584563[46] = 0;
   out_2925554530539584563[47] = 0;
   out_2925554530539584563[48] = 0;
   out_2925554530539584563[49] = 0;
   out_2925554530539584563[50] = 0;
   out_2925554530539584563[51] = 0;
   out_2925554530539584563[52] = 0;
   out_2925554530539584563[53] = 0;
   out_2925554530539584563[54] = 0;
   out_2925554530539584563[55] = 0;
   out_2925554530539584563[56] = 0;
   out_2925554530539584563[57] = 0;
   out_2925554530539584563[58] = 0;
   out_2925554530539584563[59] = 0;
   out_2925554530539584563[60] = 0;
   out_2925554530539584563[61] = 0;
   out_2925554530539584563[62] = 1;
   out_2925554530539584563[63] = 0;
   out_2925554530539584563[64] = 0;
   out_2925554530539584563[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2508545050460247670) {
  H(in_vec, out_2508545050460247670);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8922224738887600792) {
  err_fun(nom_x, delta_x, out_8922224738887600792);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_9184353739647366519) {
  inv_err_fun(nom_x, true_x, out_9184353739647366519);
}
void live_H_mod_fun(double *state, double *out_8025929700250430649) {
  H_mod_fun(state, out_8025929700250430649);
}
void live_f_fun(double *state, double dt, double *out_6546748259078843739) {
  f_fun(state,  dt, out_6546748259078843739);
}
void live_F_fun(double *state, double dt, double *out_820410862806496857) {
  F_fun(state,  dt, out_820410862806496857);
}
void live_h_4(double *state, double *unused, double *out_7961884271916591371) {
  h_4(state, unused, out_7961884271916591371);
}
void live_H_4(double *state, double *unused, double *out_3591664531471880417) {
  H_4(state, unused, out_3591664531471880417);
}
void live_h_9(double *state, double *unused, double *out_9032137970758116100) {
  h_9(state, unused, out_9032137970758116100);
}
void live_H_9(double *state, double *unused, double *out_3695554403792567053) {
  H_9(state, unused, out_3695554403792567053);
}
void live_h_10(double *state, double *unused, double *out_3694327695067531867) {
  h_10(state, unused, out_3694327695067531867);
}
void live_H_10(double *state, double *unused, double *out_2496280317092357988) {
  H_10(state, unused, out_2496280317092357988);
}
void live_h_12(double *state, double *unused, double *out_7086267725388028713) {
  h_12(state, unused, out_7086267725388028713);
}
void live_H_12(double *state, double *unused, double *out_8473821165194938203) {
  H_12(state, unused, out_8473821165194938203);
}
void live_h_31(double *state, double *unused, double *out_4903278266110709116) {
  h_31(state, unused, out_4903278266110709116);
}
void live_H_31(double *state, double *unused, double *out_225002474099273041) {
  H_31(state, unused, out_225002474099273041);
}
void live_h_32(double *state, double *unused, double *out_7636266217782030715) {
  h_32(state, unused, out_7636266217782030715);
}
void live_H_32(double *state, double *unused, double *out_3679515536202440975) {
  H_32(state, unused, out_3679515536202440975);
}
void live_h_13(double *state, double *unused, double *out_6202873061643521826) {
  h_13(state, unused, out_6202873061643521826);
}
void live_H_13(double *state, double *unused, double *out_2153824043286660686) {
  H_13(state, unused, out_2153824043286660686);
}
void live_h_14(double *state, double *unused, double *out_9032137970758116100) {
  h_14(state, unused, out_9032137970758116100);
}
void live_H_14(double *state, double *unused, double *out_3695554403792567053) {
  H_14(state, unused, out_3695554403792567053);
}
void live_h_33(double *state, double *unused, double *out_5544625881221946135) {
  h_33(state, unused, out_5544625881221946135);
}
void live_H_33(double *state, double *unused, double *out_2925554530539584563) {
  H_33(state, unused, out_2925554530539584563);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
