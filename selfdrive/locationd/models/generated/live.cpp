#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5017127939989894028) {
   out_5017127939989894028[0] = 0;
   out_5017127939989894028[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5017127939989894028[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5017127939989894028[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5017127939989894028[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5017127939989894028[5] = -sin(in_vec[1]);
   out_5017127939989894028[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5017127939989894028[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5017127939989894028[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5017127939989894028[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5017127939989894028[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5017127939989894028[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5017127939989894028[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5017127939989894028[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5017127939989894028[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5017127939989894028[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5017127939989894028[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5017127939989894028[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6740750633202003938) {
   out_6740750633202003938[0] = delta_x[0] + nom_x[0];
   out_6740750633202003938[1] = delta_x[1] + nom_x[1];
   out_6740750633202003938[2] = delta_x[2] + nom_x[2];
   out_6740750633202003938[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6740750633202003938[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6740750633202003938[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6740750633202003938[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6740750633202003938[7] = delta_x[6] + nom_x[7];
   out_6740750633202003938[8] = delta_x[7] + nom_x[8];
   out_6740750633202003938[9] = delta_x[8] + nom_x[9];
   out_6740750633202003938[10] = delta_x[9] + nom_x[10];
   out_6740750633202003938[11] = delta_x[10] + nom_x[11];
   out_6740750633202003938[12] = delta_x[11] + nom_x[12];
   out_6740750633202003938[13] = delta_x[12] + nom_x[13];
   out_6740750633202003938[14] = delta_x[13] + nom_x[14];
   out_6740750633202003938[15] = delta_x[14] + nom_x[15];
   out_6740750633202003938[16] = delta_x[15] + nom_x[16];
   out_6740750633202003938[17] = delta_x[16] + nom_x[17];
   out_6740750633202003938[18] = delta_x[17] + nom_x[18];
   out_6740750633202003938[19] = delta_x[18] + nom_x[19];
   out_6740750633202003938[20] = delta_x[19] + nom_x[20];
   out_6740750633202003938[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4003804904042118845) {
   out_4003804904042118845[0] = -nom_x[0] + true_x[0];
   out_4003804904042118845[1] = -nom_x[1] + true_x[1];
   out_4003804904042118845[2] = -nom_x[2] + true_x[2];
   out_4003804904042118845[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4003804904042118845[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4003804904042118845[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4003804904042118845[6] = -nom_x[7] + true_x[7];
   out_4003804904042118845[7] = -nom_x[8] + true_x[8];
   out_4003804904042118845[8] = -nom_x[9] + true_x[9];
   out_4003804904042118845[9] = -nom_x[10] + true_x[10];
   out_4003804904042118845[10] = -nom_x[11] + true_x[11];
   out_4003804904042118845[11] = -nom_x[12] + true_x[12];
   out_4003804904042118845[12] = -nom_x[13] + true_x[13];
   out_4003804904042118845[13] = -nom_x[14] + true_x[14];
   out_4003804904042118845[14] = -nom_x[15] + true_x[15];
   out_4003804904042118845[15] = -nom_x[16] + true_x[16];
   out_4003804904042118845[16] = -nom_x[17] + true_x[17];
   out_4003804904042118845[17] = -nom_x[18] + true_x[18];
   out_4003804904042118845[18] = -nom_x[19] + true_x[19];
   out_4003804904042118845[19] = -nom_x[20] + true_x[20];
   out_4003804904042118845[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3147787631266448461) {
   out_3147787631266448461[0] = 1.0;
   out_3147787631266448461[1] = 0;
   out_3147787631266448461[2] = 0;
   out_3147787631266448461[3] = 0;
   out_3147787631266448461[4] = 0;
   out_3147787631266448461[5] = 0;
   out_3147787631266448461[6] = 0;
   out_3147787631266448461[7] = 0;
   out_3147787631266448461[8] = 0;
   out_3147787631266448461[9] = 0;
   out_3147787631266448461[10] = 0;
   out_3147787631266448461[11] = 0;
   out_3147787631266448461[12] = 0;
   out_3147787631266448461[13] = 0;
   out_3147787631266448461[14] = 0;
   out_3147787631266448461[15] = 0;
   out_3147787631266448461[16] = 0;
   out_3147787631266448461[17] = 0;
   out_3147787631266448461[18] = 0;
   out_3147787631266448461[19] = 0;
   out_3147787631266448461[20] = 0;
   out_3147787631266448461[21] = 0;
   out_3147787631266448461[22] = 1.0;
   out_3147787631266448461[23] = 0;
   out_3147787631266448461[24] = 0;
   out_3147787631266448461[25] = 0;
   out_3147787631266448461[26] = 0;
   out_3147787631266448461[27] = 0;
   out_3147787631266448461[28] = 0;
   out_3147787631266448461[29] = 0;
   out_3147787631266448461[30] = 0;
   out_3147787631266448461[31] = 0;
   out_3147787631266448461[32] = 0;
   out_3147787631266448461[33] = 0;
   out_3147787631266448461[34] = 0;
   out_3147787631266448461[35] = 0;
   out_3147787631266448461[36] = 0;
   out_3147787631266448461[37] = 0;
   out_3147787631266448461[38] = 0;
   out_3147787631266448461[39] = 0;
   out_3147787631266448461[40] = 0;
   out_3147787631266448461[41] = 0;
   out_3147787631266448461[42] = 0;
   out_3147787631266448461[43] = 0;
   out_3147787631266448461[44] = 1.0;
   out_3147787631266448461[45] = 0;
   out_3147787631266448461[46] = 0;
   out_3147787631266448461[47] = 0;
   out_3147787631266448461[48] = 0;
   out_3147787631266448461[49] = 0;
   out_3147787631266448461[50] = 0;
   out_3147787631266448461[51] = 0;
   out_3147787631266448461[52] = 0;
   out_3147787631266448461[53] = 0;
   out_3147787631266448461[54] = 0;
   out_3147787631266448461[55] = 0;
   out_3147787631266448461[56] = 0;
   out_3147787631266448461[57] = 0;
   out_3147787631266448461[58] = 0;
   out_3147787631266448461[59] = 0;
   out_3147787631266448461[60] = 0;
   out_3147787631266448461[61] = 0;
   out_3147787631266448461[62] = 0;
   out_3147787631266448461[63] = 0;
   out_3147787631266448461[64] = 0;
   out_3147787631266448461[65] = 0;
   out_3147787631266448461[66] = -0.5*state[4];
   out_3147787631266448461[67] = -0.5*state[5];
   out_3147787631266448461[68] = -0.5*state[6];
   out_3147787631266448461[69] = 0;
   out_3147787631266448461[70] = 0;
   out_3147787631266448461[71] = 0;
   out_3147787631266448461[72] = 0;
   out_3147787631266448461[73] = 0;
   out_3147787631266448461[74] = 0;
   out_3147787631266448461[75] = 0;
   out_3147787631266448461[76] = 0;
   out_3147787631266448461[77] = 0;
   out_3147787631266448461[78] = 0;
   out_3147787631266448461[79] = 0;
   out_3147787631266448461[80] = 0;
   out_3147787631266448461[81] = 0;
   out_3147787631266448461[82] = 0;
   out_3147787631266448461[83] = 0;
   out_3147787631266448461[84] = 0;
   out_3147787631266448461[85] = 0;
   out_3147787631266448461[86] = 0;
   out_3147787631266448461[87] = 0.5*state[3];
   out_3147787631266448461[88] = 0.5*state[6];
   out_3147787631266448461[89] = -0.5*state[5];
   out_3147787631266448461[90] = 0;
   out_3147787631266448461[91] = 0;
   out_3147787631266448461[92] = 0;
   out_3147787631266448461[93] = 0;
   out_3147787631266448461[94] = 0;
   out_3147787631266448461[95] = 0;
   out_3147787631266448461[96] = 0;
   out_3147787631266448461[97] = 0;
   out_3147787631266448461[98] = 0;
   out_3147787631266448461[99] = 0;
   out_3147787631266448461[100] = 0;
   out_3147787631266448461[101] = 0;
   out_3147787631266448461[102] = 0;
   out_3147787631266448461[103] = 0;
   out_3147787631266448461[104] = 0;
   out_3147787631266448461[105] = 0;
   out_3147787631266448461[106] = 0;
   out_3147787631266448461[107] = 0;
   out_3147787631266448461[108] = -0.5*state[6];
   out_3147787631266448461[109] = 0.5*state[3];
   out_3147787631266448461[110] = 0.5*state[4];
   out_3147787631266448461[111] = 0;
   out_3147787631266448461[112] = 0;
   out_3147787631266448461[113] = 0;
   out_3147787631266448461[114] = 0;
   out_3147787631266448461[115] = 0;
   out_3147787631266448461[116] = 0;
   out_3147787631266448461[117] = 0;
   out_3147787631266448461[118] = 0;
   out_3147787631266448461[119] = 0;
   out_3147787631266448461[120] = 0;
   out_3147787631266448461[121] = 0;
   out_3147787631266448461[122] = 0;
   out_3147787631266448461[123] = 0;
   out_3147787631266448461[124] = 0;
   out_3147787631266448461[125] = 0;
   out_3147787631266448461[126] = 0;
   out_3147787631266448461[127] = 0;
   out_3147787631266448461[128] = 0;
   out_3147787631266448461[129] = 0.5*state[5];
   out_3147787631266448461[130] = -0.5*state[4];
   out_3147787631266448461[131] = 0.5*state[3];
   out_3147787631266448461[132] = 0;
   out_3147787631266448461[133] = 0;
   out_3147787631266448461[134] = 0;
   out_3147787631266448461[135] = 0;
   out_3147787631266448461[136] = 0;
   out_3147787631266448461[137] = 0;
   out_3147787631266448461[138] = 0;
   out_3147787631266448461[139] = 0;
   out_3147787631266448461[140] = 0;
   out_3147787631266448461[141] = 0;
   out_3147787631266448461[142] = 0;
   out_3147787631266448461[143] = 0;
   out_3147787631266448461[144] = 0;
   out_3147787631266448461[145] = 0;
   out_3147787631266448461[146] = 0;
   out_3147787631266448461[147] = 0;
   out_3147787631266448461[148] = 0;
   out_3147787631266448461[149] = 0;
   out_3147787631266448461[150] = 0;
   out_3147787631266448461[151] = 0;
   out_3147787631266448461[152] = 0;
   out_3147787631266448461[153] = 1.0;
   out_3147787631266448461[154] = 0;
   out_3147787631266448461[155] = 0;
   out_3147787631266448461[156] = 0;
   out_3147787631266448461[157] = 0;
   out_3147787631266448461[158] = 0;
   out_3147787631266448461[159] = 0;
   out_3147787631266448461[160] = 0;
   out_3147787631266448461[161] = 0;
   out_3147787631266448461[162] = 0;
   out_3147787631266448461[163] = 0;
   out_3147787631266448461[164] = 0;
   out_3147787631266448461[165] = 0;
   out_3147787631266448461[166] = 0;
   out_3147787631266448461[167] = 0;
   out_3147787631266448461[168] = 0;
   out_3147787631266448461[169] = 0;
   out_3147787631266448461[170] = 0;
   out_3147787631266448461[171] = 0;
   out_3147787631266448461[172] = 0;
   out_3147787631266448461[173] = 0;
   out_3147787631266448461[174] = 0;
   out_3147787631266448461[175] = 1.0;
   out_3147787631266448461[176] = 0;
   out_3147787631266448461[177] = 0;
   out_3147787631266448461[178] = 0;
   out_3147787631266448461[179] = 0;
   out_3147787631266448461[180] = 0;
   out_3147787631266448461[181] = 0;
   out_3147787631266448461[182] = 0;
   out_3147787631266448461[183] = 0;
   out_3147787631266448461[184] = 0;
   out_3147787631266448461[185] = 0;
   out_3147787631266448461[186] = 0;
   out_3147787631266448461[187] = 0;
   out_3147787631266448461[188] = 0;
   out_3147787631266448461[189] = 0;
   out_3147787631266448461[190] = 0;
   out_3147787631266448461[191] = 0;
   out_3147787631266448461[192] = 0;
   out_3147787631266448461[193] = 0;
   out_3147787631266448461[194] = 0;
   out_3147787631266448461[195] = 0;
   out_3147787631266448461[196] = 0;
   out_3147787631266448461[197] = 1.0;
   out_3147787631266448461[198] = 0;
   out_3147787631266448461[199] = 0;
   out_3147787631266448461[200] = 0;
   out_3147787631266448461[201] = 0;
   out_3147787631266448461[202] = 0;
   out_3147787631266448461[203] = 0;
   out_3147787631266448461[204] = 0;
   out_3147787631266448461[205] = 0;
   out_3147787631266448461[206] = 0;
   out_3147787631266448461[207] = 0;
   out_3147787631266448461[208] = 0;
   out_3147787631266448461[209] = 0;
   out_3147787631266448461[210] = 0;
   out_3147787631266448461[211] = 0;
   out_3147787631266448461[212] = 0;
   out_3147787631266448461[213] = 0;
   out_3147787631266448461[214] = 0;
   out_3147787631266448461[215] = 0;
   out_3147787631266448461[216] = 0;
   out_3147787631266448461[217] = 0;
   out_3147787631266448461[218] = 0;
   out_3147787631266448461[219] = 1.0;
   out_3147787631266448461[220] = 0;
   out_3147787631266448461[221] = 0;
   out_3147787631266448461[222] = 0;
   out_3147787631266448461[223] = 0;
   out_3147787631266448461[224] = 0;
   out_3147787631266448461[225] = 0;
   out_3147787631266448461[226] = 0;
   out_3147787631266448461[227] = 0;
   out_3147787631266448461[228] = 0;
   out_3147787631266448461[229] = 0;
   out_3147787631266448461[230] = 0;
   out_3147787631266448461[231] = 0;
   out_3147787631266448461[232] = 0;
   out_3147787631266448461[233] = 0;
   out_3147787631266448461[234] = 0;
   out_3147787631266448461[235] = 0;
   out_3147787631266448461[236] = 0;
   out_3147787631266448461[237] = 0;
   out_3147787631266448461[238] = 0;
   out_3147787631266448461[239] = 0;
   out_3147787631266448461[240] = 0;
   out_3147787631266448461[241] = 1.0;
   out_3147787631266448461[242] = 0;
   out_3147787631266448461[243] = 0;
   out_3147787631266448461[244] = 0;
   out_3147787631266448461[245] = 0;
   out_3147787631266448461[246] = 0;
   out_3147787631266448461[247] = 0;
   out_3147787631266448461[248] = 0;
   out_3147787631266448461[249] = 0;
   out_3147787631266448461[250] = 0;
   out_3147787631266448461[251] = 0;
   out_3147787631266448461[252] = 0;
   out_3147787631266448461[253] = 0;
   out_3147787631266448461[254] = 0;
   out_3147787631266448461[255] = 0;
   out_3147787631266448461[256] = 0;
   out_3147787631266448461[257] = 0;
   out_3147787631266448461[258] = 0;
   out_3147787631266448461[259] = 0;
   out_3147787631266448461[260] = 0;
   out_3147787631266448461[261] = 0;
   out_3147787631266448461[262] = 0;
   out_3147787631266448461[263] = 1.0;
   out_3147787631266448461[264] = 0;
   out_3147787631266448461[265] = 0;
   out_3147787631266448461[266] = 0;
   out_3147787631266448461[267] = 0;
   out_3147787631266448461[268] = 0;
   out_3147787631266448461[269] = 0;
   out_3147787631266448461[270] = 0;
   out_3147787631266448461[271] = 0;
   out_3147787631266448461[272] = 0;
   out_3147787631266448461[273] = 0;
   out_3147787631266448461[274] = 0;
   out_3147787631266448461[275] = 0;
   out_3147787631266448461[276] = 0;
   out_3147787631266448461[277] = 0;
   out_3147787631266448461[278] = 0;
   out_3147787631266448461[279] = 0;
   out_3147787631266448461[280] = 0;
   out_3147787631266448461[281] = 0;
   out_3147787631266448461[282] = 0;
   out_3147787631266448461[283] = 0;
   out_3147787631266448461[284] = 0;
   out_3147787631266448461[285] = 1.0;
   out_3147787631266448461[286] = 0;
   out_3147787631266448461[287] = 0;
   out_3147787631266448461[288] = 0;
   out_3147787631266448461[289] = 0;
   out_3147787631266448461[290] = 0;
   out_3147787631266448461[291] = 0;
   out_3147787631266448461[292] = 0;
   out_3147787631266448461[293] = 0;
   out_3147787631266448461[294] = 0;
   out_3147787631266448461[295] = 0;
   out_3147787631266448461[296] = 0;
   out_3147787631266448461[297] = 0;
   out_3147787631266448461[298] = 0;
   out_3147787631266448461[299] = 0;
   out_3147787631266448461[300] = 0;
   out_3147787631266448461[301] = 0;
   out_3147787631266448461[302] = 0;
   out_3147787631266448461[303] = 0;
   out_3147787631266448461[304] = 0;
   out_3147787631266448461[305] = 0;
   out_3147787631266448461[306] = 0;
   out_3147787631266448461[307] = 1.0;
   out_3147787631266448461[308] = 0;
   out_3147787631266448461[309] = 0;
   out_3147787631266448461[310] = 0;
   out_3147787631266448461[311] = 0;
   out_3147787631266448461[312] = 0;
   out_3147787631266448461[313] = 0;
   out_3147787631266448461[314] = 0;
   out_3147787631266448461[315] = 0;
   out_3147787631266448461[316] = 0;
   out_3147787631266448461[317] = 0;
   out_3147787631266448461[318] = 0;
   out_3147787631266448461[319] = 0;
   out_3147787631266448461[320] = 0;
   out_3147787631266448461[321] = 0;
   out_3147787631266448461[322] = 0;
   out_3147787631266448461[323] = 0;
   out_3147787631266448461[324] = 0;
   out_3147787631266448461[325] = 0;
   out_3147787631266448461[326] = 0;
   out_3147787631266448461[327] = 0;
   out_3147787631266448461[328] = 0;
   out_3147787631266448461[329] = 1.0;
   out_3147787631266448461[330] = 0;
   out_3147787631266448461[331] = 0;
   out_3147787631266448461[332] = 0;
   out_3147787631266448461[333] = 0;
   out_3147787631266448461[334] = 0;
   out_3147787631266448461[335] = 0;
   out_3147787631266448461[336] = 0;
   out_3147787631266448461[337] = 0;
   out_3147787631266448461[338] = 0;
   out_3147787631266448461[339] = 0;
   out_3147787631266448461[340] = 0;
   out_3147787631266448461[341] = 0;
   out_3147787631266448461[342] = 0;
   out_3147787631266448461[343] = 0;
   out_3147787631266448461[344] = 0;
   out_3147787631266448461[345] = 0;
   out_3147787631266448461[346] = 0;
   out_3147787631266448461[347] = 0;
   out_3147787631266448461[348] = 0;
   out_3147787631266448461[349] = 0;
   out_3147787631266448461[350] = 0;
   out_3147787631266448461[351] = 1.0;
   out_3147787631266448461[352] = 0;
   out_3147787631266448461[353] = 0;
   out_3147787631266448461[354] = 0;
   out_3147787631266448461[355] = 0;
   out_3147787631266448461[356] = 0;
   out_3147787631266448461[357] = 0;
   out_3147787631266448461[358] = 0;
   out_3147787631266448461[359] = 0;
   out_3147787631266448461[360] = 0;
   out_3147787631266448461[361] = 0;
   out_3147787631266448461[362] = 0;
   out_3147787631266448461[363] = 0;
   out_3147787631266448461[364] = 0;
   out_3147787631266448461[365] = 0;
   out_3147787631266448461[366] = 0;
   out_3147787631266448461[367] = 0;
   out_3147787631266448461[368] = 0;
   out_3147787631266448461[369] = 0;
   out_3147787631266448461[370] = 0;
   out_3147787631266448461[371] = 0;
   out_3147787631266448461[372] = 0;
   out_3147787631266448461[373] = 1.0;
   out_3147787631266448461[374] = 0;
   out_3147787631266448461[375] = 0;
   out_3147787631266448461[376] = 0;
   out_3147787631266448461[377] = 0;
   out_3147787631266448461[378] = 0;
   out_3147787631266448461[379] = 0;
   out_3147787631266448461[380] = 0;
   out_3147787631266448461[381] = 0;
   out_3147787631266448461[382] = 0;
   out_3147787631266448461[383] = 0;
   out_3147787631266448461[384] = 0;
   out_3147787631266448461[385] = 0;
   out_3147787631266448461[386] = 0;
   out_3147787631266448461[387] = 0;
   out_3147787631266448461[388] = 0;
   out_3147787631266448461[389] = 0;
   out_3147787631266448461[390] = 0;
   out_3147787631266448461[391] = 0;
   out_3147787631266448461[392] = 0;
   out_3147787631266448461[393] = 0;
   out_3147787631266448461[394] = 0;
   out_3147787631266448461[395] = 1.0;
   out_3147787631266448461[396] = 0;
   out_3147787631266448461[397] = 0;
   out_3147787631266448461[398] = 0;
   out_3147787631266448461[399] = 0;
   out_3147787631266448461[400] = 0;
   out_3147787631266448461[401] = 0;
   out_3147787631266448461[402] = 0;
   out_3147787631266448461[403] = 0;
   out_3147787631266448461[404] = 0;
   out_3147787631266448461[405] = 0;
   out_3147787631266448461[406] = 0;
   out_3147787631266448461[407] = 0;
   out_3147787631266448461[408] = 0;
   out_3147787631266448461[409] = 0;
   out_3147787631266448461[410] = 0;
   out_3147787631266448461[411] = 0;
   out_3147787631266448461[412] = 0;
   out_3147787631266448461[413] = 0;
   out_3147787631266448461[414] = 0;
   out_3147787631266448461[415] = 0;
   out_3147787631266448461[416] = 0;
   out_3147787631266448461[417] = 1.0;
   out_3147787631266448461[418] = 0;
   out_3147787631266448461[419] = 0;
   out_3147787631266448461[420] = 0;
   out_3147787631266448461[421] = 0;
   out_3147787631266448461[422] = 0;
   out_3147787631266448461[423] = 0;
   out_3147787631266448461[424] = 0;
   out_3147787631266448461[425] = 0;
   out_3147787631266448461[426] = 0;
   out_3147787631266448461[427] = 0;
   out_3147787631266448461[428] = 0;
   out_3147787631266448461[429] = 0;
   out_3147787631266448461[430] = 0;
   out_3147787631266448461[431] = 0;
   out_3147787631266448461[432] = 0;
   out_3147787631266448461[433] = 0;
   out_3147787631266448461[434] = 0;
   out_3147787631266448461[435] = 0;
   out_3147787631266448461[436] = 0;
   out_3147787631266448461[437] = 0;
   out_3147787631266448461[438] = 0;
   out_3147787631266448461[439] = 1.0;
   out_3147787631266448461[440] = 0;
   out_3147787631266448461[441] = 0;
   out_3147787631266448461[442] = 0;
   out_3147787631266448461[443] = 0;
   out_3147787631266448461[444] = 0;
   out_3147787631266448461[445] = 0;
   out_3147787631266448461[446] = 0;
   out_3147787631266448461[447] = 0;
   out_3147787631266448461[448] = 0;
   out_3147787631266448461[449] = 0;
   out_3147787631266448461[450] = 0;
   out_3147787631266448461[451] = 0;
   out_3147787631266448461[452] = 0;
   out_3147787631266448461[453] = 0;
   out_3147787631266448461[454] = 0;
   out_3147787631266448461[455] = 0;
   out_3147787631266448461[456] = 0;
   out_3147787631266448461[457] = 0;
   out_3147787631266448461[458] = 0;
   out_3147787631266448461[459] = 0;
   out_3147787631266448461[460] = 0;
   out_3147787631266448461[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_400464903206441192) {
   out_400464903206441192[0] = dt*state[7] + state[0];
   out_400464903206441192[1] = dt*state[8] + state[1];
   out_400464903206441192[2] = dt*state[9] + state[2];
   out_400464903206441192[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_400464903206441192[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_400464903206441192[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_400464903206441192[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_400464903206441192[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_400464903206441192[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_400464903206441192[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_400464903206441192[10] = state[10];
   out_400464903206441192[11] = state[11];
   out_400464903206441192[12] = state[12];
   out_400464903206441192[13] = state[13];
   out_400464903206441192[14] = state[14];
   out_400464903206441192[15] = state[15];
   out_400464903206441192[16] = state[16];
   out_400464903206441192[17] = state[17];
   out_400464903206441192[18] = state[18];
   out_400464903206441192[19] = state[19];
   out_400464903206441192[20] = state[20];
   out_400464903206441192[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1608606016964525974) {
   out_1608606016964525974[0] = 1;
   out_1608606016964525974[1] = 0;
   out_1608606016964525974[2] = 0;
   out_1608606016964525974[3] = 0;
   out_1608606016964525974[4] = 0;
   out_1608606016964525974[5] = 0;
   out_1608606016964525974[6] = dt;
   out_1608606016964525974[7] = 0;
   out_1608606016964525974[8] = 0;
   out_1608606016964525974[9] = 0;
   out_1608606016964525974[10] = 0;
   out_1608606016964525974[11] = 0;
   out_1608606016964525974[12] = 0;
   out_1608606016964525974[13] = 0;
   out_1608606016964525974[14] = 0;
   out_1608606016964525974[15] = 0;
   out_1608606016964525974[16] = 0;
   out_1608606016964525974[17] = 0;
   out_1608606016964525974[18] = 0;
   out_1608606016964525974[19] = 0;
   out_1608606016964525974[20] = 0;
   out_1608606016964525974[21] = 0;
   out_1608606016964525974[22] = 1;
   out_1608606016964525974[23] = 0;
   out_1608606016964525974[24] = 0;
   out_1608606016964525974[25] = 0;
   out_1608606016964525974[26] = 0;
   out_1608606016964525974[27] = 0;
   out_1608606016964525974[28] = dt;
   out_1608606016964525974[29] = 0;
   out_1608606016964525974[30] = 0;
   out_1608606016964525974[31] = 0;
   out_1608606016964525974[32] = 0;
   out_1608606016964525974[33] = 0;
   out_1608606016964525974[34] = 0;
   out_1608606016964525974[35] = 0;
   out_1608606016964525974[36] = 0;
   out_1608606016964525974[37] = 0;
   out_1608606016964525974[38] = 0;
   out_1608606016964525974[39] = 0;
   out_1608606016964525974[40] = 0;
   out_1608606016964525974[41] = 0;
   out_1608606016964525974[42] = 0;
   out_1608606016964525974[43] = 0;
   out_1608606016964525974[44] = 1;
   out_1608606016964525974[45] = 0;
   out_1608606016964525974[46] = 0;
   out_1608606016964525974[47] = 0;
   out_1608606016964525974[48] = 0;
   out_1608606016964525974[49] = 0;
   out_1608606016964525974[50] = dt;
   out_1608606016964525974[51] = 0;
   out_1608606016964525974[52] = 0;
   out_1608606016964525974[53] = 0;
   out_1608606016964525974[54] = 0;
   out_1608606016964525974[55] = 0;
   out_1608606016964525974[56] = 0;
   out_1608606016964525974[57] = 0;
   out_1608606016964525974[58] = 0;
   out_1608606016964525974[59] = 0;
   out_1608606016964525974[60] = 0;
   out_1608606016964525974[61] = 0;
   out_1608606016964525974[62] = 0;
   out_1608606016964525974[63] = 0;
   out_1608606016964525974[64] = 0;
   out_1608606016964525974[65] = 0;
   out_1608606016964525974[66] = 1;
   out_1608606016964525974[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1608606016964525974[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1608606016964525974[69] = 0;
   out_1608606016964525974[70] = 0;
   out_1608606016964525974[71] = 0;
   out_1608606016964525974[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1608606016964525974[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1608606016964525974[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1608606016964525974[75] = 0;
   out_1608606016964525974[76] = 0;
   out_1608606016964525974[77] = 0;
   out_1608606016964525974[78] = 0;
   out_1608606016964525974[79] = 0;
   out_1608606016964525974[80] = 0;
   out_1608606016964525974[81] = 0;
   out_1608606016964525974[82] = 0;
   out_1608606016964525974[83] = 0;
   out_1608606016964525974[84] = 0;
   out_1608606016964525974[85] = 0;
   out_1608606016964525974[86] = 0;
   out_1608606016964525974[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1608606016964525974[88] = 1;
   out_1608606016964525974[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1608606016964525974[90] = 0;
   out_1608606016964525974[91] = 0;
   out_1608606016964525974[92] = 0;
   out_1608606016964525974[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1608606016964525974[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1608606016964525974[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1608606016964525974[96] = 0;
   out_1608606016964525974[97] = 0;
   out_1608606016964525974[98] = 0;
   out_1608606016964525974[99] = 0;
   out_1608606016964525974[100] = 0;
   out_1608606016964525974[101] = 0;
   out_1608606016964525974[102] = 0;
   out_1608606016964525974[103] = 0;
   out_1608606016964525974[104] = 0;
   out_1608606016964525974[105] = 0;
   out_1608606016964525974[106] = 0;
   out_1608606016964525974[107] = 0;
   out_1608606016964525974[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1608606016964525974[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1608606016964525974[110] = 1;
   out_1608606016964525974[111] = 0;
   out_1608606016964525974[112] = 0;
   out_1608606016964525974[113] = 0;
   out_1608606016964525974[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1608606016964525974[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1608606016964525974[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1608606016964525974[117] = 0;
   out_1608606016964525974[118] = 0;
   out_1608606016964525974[119] = 0;
   out_1608606016964525974[120] = 0;
   out_1608606016964525974[121] = 0;
   out_1608606016964525974[122] = 0;
   out_1608606016964525974[123] = 0;
   out_1608606016964525974[124] = 0;
   out_1608606016964525974[125] = 0;
   out_1608606016964525974[126] = 0;
   out_1608606016964525974[127] = 0;
   out_1608606016964525974[128] = 0;
   out_1608606016964525974[129] = 0;
   out_1608606016964525974[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1608606016964525974[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1608606016964525974[132] = 1;
   out_1608606016964525974[133] = 0;
   out_1608606016964525974[134] = 0;
   out_1608606016964525974[135] = 0;
   out_1608606016964525974[136] = 0;
   out_1608606016964525974[137] = 0;
   out_1608606016964525974[138] = 0;
   out_1608606016964525974[139] = 0;
   out_1608606016964525974[140] = 0;
   out_1608606016964525974[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1608606016964525974[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1608606016964525974[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1608606016964525974[144] = 0;
   out_1608606016964525974[145] = 0;
   out_1608606016964525974[146] = 0;
   out_1608606016964525974[147] = 0;
   out_1608606016964525974[148] = 0;
   out_1608606016964525974[149] = 0;
   out_1608606016964525974[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1608606016964525974[151] = 0;
   out_1608606016964525974[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1608606016964525974[153] = 0;
   out_1608606016964525974[154] = 1;
   out_1608606016964525974[155] = 0;
   out_1608606016964525974[156] = 0;
   out_1608606016964525974[157] = 0;
   out_1608606016964525974[158] = 0;
   out_1608606016964525974[159] = 0;
   out_1608606016964525974[160] = 0;
   out_1608606016964525974[161] = 0;
   out_1608606016964525974[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1608606016964525974[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1608606016964525974[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1608606016964525974[165] = 0;
   out_1608606016964525974[166] = 0;
   out_1608606016964525974[167] = 0;
   out_1608606016964525974[168] = 0;
   out_1608606016964525974[169] = 0;
   out_1608606016964525974[170] = 0;
   out_1608606016964525974[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1608606016964525974[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1608606016964525974[173] = 0;
   out_1608606016964525974[174] = 0;
   out_1608606016964525974[175] = 0;
   out_1608606016964525974[176] = 1;
   out_1608606016964525974[177] = 0;
   out_1608606016964525974[178] = 0;
   out_1608606016964525974[179] = 0;
   out_1608606016964525974[180] = 0;
   out_1608606016964525974[181] = 0;
   out_1608606016964525974[182] = 0;
   out_1608606016964525974[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1608606016964525974[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1608606016964525974[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1608606016964525974[186] = 0;
   out_1608606016964525974[187] = 0;
   out_1608606016964525974[188] = 0;
   out_1608606016964525974[189] = 0;
   out_1608606016964525974[190] = 0;
   out_1608606016964525974[191] = 0;
   out_1608606016964525974[192] = 0;
   out_1608606016964525974[193] = 0;
   out_1608606016964525974[194] = 0;
   out_1608606016964525974[195] = 0;
   out_1608606016964525974[196] = 0;
   out_1608606016964525974[197] = 0;
   out_1608606016964525974[198] = 1;
   out_1608606016964525974[199] = 0;
   out_1608606016964525974[200] = 0;
   out_1608606016964525974[201] = 0;
   out_1608606016964525974[202] = 0;
   out_1608606016964525974[203] = 0;
   out_1608606016964525974[204] = 0;
   out_1608606016964525974[205] = 0;
   out_1608606016964525974[206] = 0;
   out_1608606016964525974[207] = 0;
   out_1608606016964525974[208] = 0;
   out_1608606016964525974[209] = 0;
   out_1608606016964525974[210] = 0;
   out_1608606016964525974[211] = 0;
   out_1608606016964525974[212] = 0;
   out_1608606016964525974[213] = 0;
   out_1608606016964525974[214] = 0;
   out_1608606016964525974[215] = 0;
   out_1608606016964525974[216] = 0;
   out_1608606016964525974[217] = 0;
   out_1608606016964525974[218] = 0;
   out_1608606016964525974[219] = 0;
   out_1608606016964525974[220] = 1;
   out_1608606016964525974[221] = 0;
   out_1608606016964525974[222] = 0;
   out_1608606016964525974[223] = 0;
   out_1608606016964525974[224] = 0;
   out_1608606016964525974[225] = 0;
   out_1608606016964525974[226] = 0;
   out_1608606016964525974[227] = 0;
   out_1608606016964525974[228] = 0;
   out_1608606016964525974[229] = 0;
   out_1608606016964525974[230] = 0;
   out_1608606016964525974[231] = 0;
   out_1608606016964525974[232] = 0;
   out_1608606016964525974[233] = 0;
   out_1608606016964525974[234] = 0;
   out_1608606016964525974[235] = 0;
   out_1608606016964525974[236] = 0;
   out_1608606016964525974[237] = 0;
   out_1608606016964525974[238] = 0;
   out_1608606016964525974[239] = 0;
   out_1608606016964525974[240] = 0;
   out_1608606016964525974[241] = 0;
   out_1608606016964525974[242] = 1;
   out_1608606016964525974[243] = 0;
   out_1608606016964525974[244] = 0;
   out_1608606016964525974[245] = 0;
   out_1608606016964525974[246] = 0;
   out_1608606016964525974[247] = 0;
   out_1608606016964525974[248] = 0;
   out_1608606016964525974[249] = 0;
   out_1608606016964525974[250] = 0;
   out_1608606016964525974[251] = 0;
   out_1608606016964525974[252] = 0;
   out_1608606016964525974[253] = 0;
   out_1608606016964525974[254] = 0;
   out_1608606016964525974[255] = 0;
   out_1608606016964525974[256] = 0;
   out_1608606016964525974[257] = 0;
   out_1608606016964525974[258] = 0;
   out_1608606016964525974[259] = 0;
   out_1608606016964525974[260] = 0;
   out_1608606016964525974[261] = 0;
   out_1608606016964525974[262] = 0;
   out_1608606016964525974[263] = 0;
   out_1608606016964525974[264] = 1;
   out_1608606016964525974[265] = 0;
   out_1608606016964525974[266] = 0;
   out_1608606016964525974[267] = 0;
   out_1608606016964525974[268] = 0;
   out_1608606016964525974[269] = 0;
   out_1608606016964525974[270] = 0;
   out_1608606016964525974[271] = 0;
   out_1608606016964525974[272] = 0;
   out_1608606016964525974[273] = 0;
   out_1608606016964525974[274] = 0;
   out_1608606016964525974[275] = 0;
   out_1608606016964525974[276] = 0;
   out_1608606016964525974[277] = 0;
   out_1608606016964525974[278] = 0;
   out_1608606016964525974[279] = 0;
   out_1608606016964525974[280] = 0;
   out_1608606016964525974[281] = 0;
   out_1608606016964525974[282] = 0;
   out_1608606016964525974[283] = 0;
   out_1608606016964525974[284] = 0;
   out_1608606016964525974[285] = 0;
   out_1608606016964525974[286] = 1;
   out_1608606016964525974[287] = 0;
   out_1608606016964525974[288] = 0;
   out_1608606016964525974[289] = 0;
   out_1608606016964525974[290] = 0;
   out_1608606016964525974[291] = 0;
   out_1608606016964525974[292] = 0;
   out_1608606016964525974[293] = 0;
   out_1608606016964525974[294] = 0;
   out_1608606016964525974[295] = 0;
   out_1608606016964525974[296] = 0;
   out_1608606016964525974[297] = 0;
   out_1608606016964525974[298] = 0;
   out_1608606016964525974[299] = 0;
   out_1608606016964525974[300] = 0;
   out_1608606016964525974[301] = 0;
   out_1608606016964525974[302] = 0;
   out_1608606016964525974[303] = 0;
   out_1608606016964525974[304] = 0;
   out_1608606016964525974[305] = 0;
   out_1608606016964525974[306] = 0;
   out_1608606016964525974[307] = 0;
   out_1608606016964525974[308] = 1;
   out_1608606016964525974[309] = 0;
   out_1608606016964525974[310] = 0;
   out_1608606016964525974[311] = 0;
   out_1608606016964525974[312] = 0;
   out_1608606016964525974[313] = 0;
   out_1608606016964525974[314] = 0;
   out_1608606016964525974[315] = 0;
   out_1608606016964525974[316] = 0;
   out_1608606016964525974[317] = 0;
   out_1608606016964525974[318] = 0;
   out_1608606016964525974[319] = 0;
   out_1608606016964525974[320] = 0;
   out_1608606016964525974[321] = 0;
   out_1608606016964525974[322] = 0;
   out_1608606016964525974[323] = 0;
   out_1608606016964525974[324] = 0;
   out_1608606016964525974[325] = 0;
   out_1608606016964525974[326] = 0;
   out_1608606016964525974[327] = 0;
   out_1608606016964525974[328] = 0;
   out_1608606016964525974[329] = 0;
   out_1608606016964525974[330] = 1;
   out_1608606016964525974[331] = 0;
   out_1608606016964525974[332] = 0;
   out_1608606016964525974[333] = 0;
   out_1608606016964525974[334] = 0;
   out_1608606016964525974[335] = 0;
   out_1608606016964525974[336] = 0;
   out_1608606016964525974[337] = 0;
   out_1608606016964525974[338] = 0;
   out_1608606016964525974[339] = 0;
   out_1608606016964525974[340] = 0;
   out_1608606016964525974[341] = 0;
   out_1608606016964525974[342] = 0;
   out_1608606016964525974[343] = 0;
   out_1608606016964525974[344] = 0;
   out_1608606016964525974[345] = 0;
   out_1608606016964525974[346] = 0;
   out_1608606016964525974[347] = 0;
   out_1608606016964525974[348] = 0;
   out_1608606016964525974[349] = 0;
   out_1608606016964525974[350] = 0;
   out_1608606016964525974[351] = 0;
   out_1608606016964525974[352] = 1;
   out_1608606016964525974[353] = 0;
   out_1608606016964525974[354] = 0;
   out_1608606016964525974[355] = 0;
   out_1608606016964525974[356] = 0;
   out_1608606016964525974[357] = 0;
   out_1608606016964525974[358] = 0;
   out_1608606016964525974[359] = 0;
   out_1608606016964525974[360] = 0;
   out_1608606016964525974[361] = 0;
   out_1608606016964525974[362] = 0;
   out_1608606016964525974[363] = 0;
   out_1608606016964525974[364] = 0;
   out_1608606016964525974[365] = 0;
   out_1608606016964525974[366] = 0;
   out_1608606016964525974[367] = 0;
   out_1608606016964525974[368] = 0;
   out_1608606016964525974[369] = 0;
   out_1608606016964525974[370] = 0;
   out_1608606016964525974[371] = 0;
   out_1608606016964525974[372] = 0;
   out_1608606016964525974[373] = 0;
   out_1608606016964525974[374] = 1;
   out_1608606016964525974[375] = 0;
   out_1608606016964525974[376] = 0;
   out_1608606016964525974[377] = 0;
   out_1608606016964525974[378] = 0;
   out_1608606016964525974[379] = 0;
   out_1608606016964525974[380] = 0;
   out_1608606016964525974[381] = 0;
   out_1608606016964525974[382] = 0;
   out_1608606016964525974[383] = 0;
   out_1608606016964525974[384] = 0;
   out_1608606016964525974[385] = 0;
   out_1608606016964525974[386] = 0;
   out_1608606016964525974[387] = 0;
   out_1608606016964525974[388] = 0;
   out_1608606016964525974[389] = 0;
   out_1608606016964525974[390] = 0;
   out_1608606016964525974[391] = 0;
   out_1608606016964525974[392] = 0;
   out_1608606016964525974[393] = 0;
   out_1608606016964525974[394] = 0;
   out_1608606016964525974[395] = 0;
   out_1608606016964525974[396] = 1;
   out_1608606016964525974[397] = 0;
   out_1608606016964525974[398] = 0;
   out_1608606016964525974[399] = 0;
   out_1608606016964525974[400] = 0;
   out_1608606016964525974[401] = 0;
   out_1608606016964525974[402] = 0;
   out_1608606016964525974[403] = 0;
   out_1608606016964525974[404] = 0;
   out_1608606016964525974[405] = 0;
   out_1608606016964525974[406] = 0;
   out_1608606016964525974[407] = 0;
   out_1608606016964525974[408] = 0;
   out_1608606016964525974[409] = 0;
   out_1608606016964525974[410] = 0;
   out_1608606016964525974[411] = 0;
   out_1608606016964525974[412] = 0;
   out_1608606016964525974[413] = 0;
   out_1608606016964525974[414] = 0;
   out_1608606016964525974[415] = 0;
   out_1608606016964525974[416] = 0;
   out_1608606016964525974[417] = 0;
   out_1608606016964525974[418] = 1;
   out_1608606016964525974[419] = 0;
   out_1608606016964525974[420] = 0;
   out_1608606016964525974[421] = 0;
   out_1608606016964525974[422] = 0;
   out_1608606016964525974[423] = 0;
   out_1608606016964525974[424] = 0;
   out_1608606016964525974[425] = 0;
   out_1608606016964525974[426] = 0;
   out_1608606016964525974[427] = 0;
   out_1608606016964525974[428] = 0;
   out_1608606016964525974[429] = 0;
   out_1608606016964525974[430] = 0;
   out_1608606016964525974[431] = 0;
   out_1608606016964525974[432] = 0;
   out_1608606016964525974[433] = 0;
   out_1608606016964525974[434] = 0;
   out_1608606016964525974[435] = 0;
   out_1608606016964525974[436] = 0;
   out_1608606016964525974[437] = 0;
   out_1608606016964525974[438] = 0;
   out_1608606016964525974[439] = 0;
   out_1608606016964525974[440] = 1;
}
void h_4(double *state, double *unused, double *out_5810520985716428538) {
   out_5810520985716428538[0] = state[10] + state[13];
   out_5810520985716428538[1] = state[11] + state[14];
   out_5810520985716428538[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8101259356736239473) {
   out_8101259356736239473[0] = 0;
   out_8101259356736239473[1] = 0;
   out_8101259356736239473[2] = 0;
   out_8101259356736239473[3] = 0;
   out_8101259356736239473[4] = 0;
   out_8101259356736239473[5] = 0;
   out_8101259356736239473[6] = 0;
   out_8101259356736239473[7] = 0;
   out_8101259356736239473[8] = 0;
   out_8101259356736239473[9] = 0;
   out_8101259356736239473[10] = 1;
   out_8101259356736239473[11] = 0;
   out_8101259356736239473[12] = 0;
   out_8101259356736239473[13] = 1;
   out_8101259356736239473[14] = 0;
   out_8101259356736239473[15] = 0;
   out_8101259356736239473[16] = 0;
   out_8101259356736239473[17] = 0;
   out_8101259356736239473[18] = 0;
   out_8101259356736239473[19] = 0;
   out_8101259356736239473[20] = 0;
   out_8101259356736239473[21] = 0;
   out_8101259356736239473[22] = 0;
   out_8101259356736239473[23] = 0;
   out_8101259356736239473[24] = 0;
   out_8101259356736239473[25] = 0;
   out_8101259356736239473[26] = 0;
   out_8101259356736239473[27] = 0;
   out_8101259356736239473[28] = 0;
   out_8101259356736239473[29] = 0;
   out_8101259356736239473[30] = 0;
   out_8101259356736239473[31] = 0;
   out_8101259356736239473[32] = 0;
   out_8101259356736239473[33] = 1;
   out_8101259356736239473[34] = 0;
   out_8101259356736239473[35] = 0;
   out_8101259356736239473[36] = 1;
   out_8101259356736239473[37] = 0;
   out_8101259356736239473[38] = 0;
   out_8101259356736239473[39] = 0;
   out_8101259356736239473[40] = 0;
   out_8101259356736239473[41] = 0;
   out_8101259356736239473[42] = 0;
   out_8101259356736239473[43] = 0;
   out_8101259356736239473[44] = 0;
   out_8101259356736239473[45] = 0;
   out_8101259356736239473[46] = 0;
   out_8101259356736239473[47] = 0;
   out_8101259356736239473[48] = 0;
   out_8101259356736239473[49] = 0;
   out_8101259356736239473[50] = 0;
   out_8101259356736239473[51] = 0;
   out_8101259356736239473[52] = 0;
   out_8101259356736239473[53] = 0;
   out_8101259356736239473[54] = 0;
   out_8101259356736239473[55] = 0;
   out_8101259356736239473[56] = 1;
   out_8101259356736239473[57] = 0;
   out_8101259356736239473[58] = 0;
   out_8101259356736239473[59] = 1;
   out_8101259356736239473[60] = 0;
   out_8101259356736239473[61] = 0;
   out_8101259356736239473[62] = 0;
   out_8101259356736239473[63] = 0;
   out_8101259356736239473[64] = 0;
   out_8101259356736239473[65] = 0;
}
void h_9(double *state, double *unused, double *out_2994849396655473689) {
   out_2994849396655473689[0] = state[10];
   out_2994849396655473689[1] = state[11];
   out_2994849396655473689[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8342449003365830118) {
   out_8342449003365830118[0] = 0;
   out_8342449003365830118[1] = 0;
   out_8342449003365830118[2] = 0;
   out_8342449003365830118[3] = 0;
   out_8342449003365830118[4] = 0;
   out_8342449003365830118[5] = 0;
   out_8342449003365830118[6] = 0;
   out_8342449003365830118[7] = 0;
   out_8342449003365830118[8] = 0;
   out_8342449003365830118[9] = 0;
   out_8342449003365830118[10] = 1;
   out_8342449003365830118[11] = 0;
   out_8342449003365830118[12] = 0;
   out_8342449003365830118[13] = 0;
   out_8342449003365830118[14] = 0;
   out_8342449003365830118[15] = 0;
   out_8342449003365830118[16] = 0;
   out_8342449003365830118[17] = 0;
   out_8342449003365830118[18] = 0;
   out_8342449003365830118[19] = 0;
   out_8342449003365830118[20] = 0;
   out_8342449003365830118[21] = 0;
   out_8342449003365830118[22] = 0;
   out_8342449003365830118[23] = 0;
   out_8342449003365830118[24] = 0;
   out_8342449003365830118[25] = 0;
   out_8342449003365830118[26] = 0;
   out_8342449003365830118[27] = 0;
   out_8342449003365830118[28] = 0;
   out_8342449003365830118[29] = 0;
   out_8342449003365830118[30] = 0;
   out_8342449003365830118[31] = 0;
   out_8342449003365830118[32] = 0;
   out_8342449003365830118[33] = 1;
   out_8342449003365830118[34] = 0;
   out_8342449003365830118[35] = 0;
   out_8342449003365830118[36] = 0;
   out_8342449003365830118[37] = 0;
   out_8342449003365830118[38] = 0;
   out_8342449003365830118[39] = 0;
   out_8342449003365830118[40] = 0;
   out_8342449003365830118[41] = 0;
   out_8342449003365830118[42] = 0;
   out_8342449003365830118[43] = 0;
   out_8342449003365830118[44] = 0;
   out_8342449003365830118[45] = 0;
   out_8342449003365830118[46] = 0;
   out_8342449003365830118[47] = 0;
   out_8342449003365830118[48] = 0;
   out_8342449003365830118[49] = 0;
   out_8342449003365830118[50] = 0;
   out_8342449003365830118[51] = 0;
   out_8342449003365830118[52] = 0;
   out_8342449003365830118[53] = 0;
   out_8342449003365830118[54] = 0;
   out_8342449003365830118[55] = 0;
   out_8342449003365830118[56] = 1;
   out_8342449003365830118[57] = 0;
   out_8342449003365830118[58] = 0;
   out_8342449003365830118[59] = 0;
   out_8342449003365830118[60] = 0;
   out_8342449003365830118[61] = 0;
   out_8342449003365830118[62] = 0;
   out_8342449003365830118[63] = 0;
   out_8342449003365830118[64] = 0;
   out_8342449003365830118[65] = 0;
}
void h_10(double *state, double *unused, double *out_6942493849852737304) {
   out_6942493849852737304[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6942493849852737304[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6942493849852737304[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_213825020102705639) {
   out_213825020102705639[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_213825020102705639[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_213825020102705639[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_213825020102705639[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_213825020102705639[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_213825020102705639[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_213825020102705639[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_213825020102705639[7] = 0;
   out_213825020102705639[8] = 0;
   out_213825020102705639[9] = 0;
   out_213825020102705639[10] = 0;
   out_213825020102705639[11] = 0;
   out_213825020102705639[12] = 0;
   out_213825020102705639[13] = 0;
   out_213825020102705639[14] = 0;
   out_213825020102705639[15] = 0;
   out_213825020102705639[16] = 1;
   out_213825020102705639[17] = 0;
   out_213825020102705639[18] = 0;
   out_213825020102705639[19] = 1;
   out_213825020102705639[20] = 0;
   out_213825020102705639[21] = 0;
   out_213825020102705639[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_213825020102705639[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_213825020102705639[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_213825020102705639[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_213825020102705639[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_213825020102705639[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_213825020102705639[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_213825020102705639[29] = 0;
   out_213825020102705639[30] = 0;
   out_213825020102705639[31] = 0;
   out_213825020102705639[32] = 0;
   out_213825020102705639[33] = 0;
   out_213825020102705639[34] = 0;
   out_213825020102705639[35] = 0;
   out_213825020102705639[36] = 0;
   out_213825020102705639[37] = 0;
   out_213825020102705639[38] = 0;
   out_213825020102705639[39] = 1;
   out_213825020102705639[40] = 0;
   out_213825020102705639[41] = 0;
   out_213825020102705639[42] = 1;
   out_213825020102705639[43] = 0;
   out_213825020102705639[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_213825020102705639[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_213825020102705639[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_213825020102705639[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_213825020102705639[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_213825020102705639[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_213825020102705639[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_213825020102705639[51] = 0;
   out_213825020102705639[52] = 0;
   out_213825020102705639[53] = 0;
   out_213825020102705639[54] = 0;
   out_213825020102705639[55] = 0;
   out_213825020102705639[56] = 0;
   out_213825020102705639[57] = 0;
   out_213825020102705639[58] = 0;
   out_213825020102705639[59] = 0;
   out_213825020102705639[60] = 0;
   out_213825020102705639[61] = 0;
   out_213825020102705639[62] = 1;
   out_213825020102705639[63] = 0;
   out_213825020102705639[64] = 0;
   out_213825020102705639[65] = 1;
}
void h_12(double *state, double *unused, double *out_841890056352501808) {
   out_841890056352501808[0] = state[0];
   out_841890056352501808[1] = state[1];
   out_841890056352501808[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5326028308941350348) {
   out_5326028308941350348[0] = 1;
   out_5326028308941350348[1] = 0;
   out_5326028308941350348[2] = 0;
   out_5326028308941350348[3] = 0;
   out_5326028308941350348[4] = 0;
   out_5326028308941350348[5] = 0;
   out_5326028308941350348[6] = 0;
   out_5326028308941350348[7] = 0;
   out_5326028308941350348[8] = 0;
   out_5326028308941350348[9] = 0;
   out_5326028308941350348[10] = 0;
   out_5326028308941350348[11] = 0;
   out_5326028308941350348[12] = 0;
   out_5326028308941350348[13] = 0;
   out_5326028308941350348[14] = 0;
   out_5326028308941350348[15] = 0;
   out_5326028308941350348[16] = 0;
   out_5326028308941350348[17] = 0;
   out_5326028308941350348[18] = 0;
   out_5326028308941350348[19] = 0;
   out_5326028308941350348[20] = 0;
   out_5326028308941350348[21] = 0;
   out_5326028308941350348[22] = 0;
   out_5326028308941350348[23] = 1;
   out_5326028308941350348[24] = 0;
   out_5326028308941350348[25] = 0;
   out_5326028308941350348[26] = 0;
   out_5326028308941350348[27] = 0;
   out_5326028308941350348[28] = 0;
   out_5326028308941350348[29] = 0;
   out_5326028308941350348[30] = 0;
   out_5326028308941350348[31] = 0;
   out_5326028308941350348[32] = 0;
   out_5326028308941350348[33] = 0;
   out_5326028308941350348[34] = 0;
   out_5326028308941350348[35] = 0;
   out_5326028308941350348[36] = 0;
   out_5326028308941350348[37] = 0;
   out_5326028308941350348[38] = 0;
   out_5326028308941350348[39] = 0;
   out_5326028308941350348[40] = 0;
   out_5326028308941350348[41] = 0;
   out_5326028308941350348[42] = 0;
   out_5326028308941350348[43] = 0;
   out_5326028308941350348[44] = 0;
   out_5326028308941350348[45] = 0;
   out_5326028308941350348[46] = 1;
   out_5326028308941350348[47] = 0;
   out_5326028308941350348[48] = 0;
   out_5326028308941350348[49] = 0;
   out_5326028308941350348[50] = 0;
   out_5326028308941350348[51] = 0;
   out_5326028308941350348[52] = 0;
   out_5326028308941350348[53] = 0;
   out_5326028308941350348[54] = 0;
   out_5326028308941350348[55] = 0;
   out_5326028308941350348[56] = 0;
   out_5326028308941350348[57] = 0;
   out_5326028308941350348[58] = 0;
   out_5326028308941350348[59] = 0;
   out_5326028308941350348[60] = 0;
   out_5326028308941350348[61] = 0;
   out_5326028308941350348[62] = 0;
   out_5326028308941350348[63] = 0;
   out_5326028308941350348[64] = 0;
   out_5326028308941350348[65] = 0;
}
void h_31(double *state, double *unused, double *out_570532822292067381) {
   out_570532822292067381[0] = state[7];
   out_570532822292067381[1] = state[8];
   out_570532822292067381[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6978822659600704767) {
   out_6978822659600704767[0] = 0;
   out_6978822659600704767[1] = 0;
   out_6978822659600704767[2] = 0;
   out_6978822659600704767[3] = 0;
   out_6978822659600704767[4] = 0;
   out_6978822659600704767[5] = 0;
   out_6978822659600704767[6] = 0;
   out_6978822659600704767[7] = 1;
   out_6978822659600704767[8] = 0;
   out_6978822659600704767[9] = 0;
   out_6978822659600704767[10] = 0;
   out_6978822659600704767[11] = 0;
   out_6978822659600704767[12] = 0;
   out_6978822659600704767[13] = 0;
   out_6978822659600704767[14] = 0;
   out_6978822659600704767[15] = 0;
   out_6978822659600704767[16] = 0;
   out_6978822659600704767[17] = 0;
   out_6978822659600704767[18] = 0;
   out_6978822659600704767[19] = 0;
   out_6978822659600704767[20] = 0;
   out_6978822659600704767[21] = 0;
   out_6978822659600704767[22] = 0;
   out_6978822659600704767[23] = 0;
   out_6978822659600704767[24] = 0;
   out_6978822659600704767[25] = 0;
   out_6978822659600704767[26] = 0;
   out_6978822659600704767[27] = 0;
   out_6978822659600704767[28] = 0;
   out_6978822659600704767[29] = 0;
   out_6978822659600704767[30] = 1;
   out_6978822659600704767[31] = 0;
   out_6978822659600704767[32] = 0;
   out_6978822659600704767[33] = 0;
   out_6978822659600704767[34] = 0;
   out_6978822659600704767[35] = 0;
   out_6978822659600704767[36] = 0;
   out_6978822659600704767[37] = 0;
   out_6978822659600704767[38] = 0;
   out_6978822659600704767[39] = 0;
   out_6978822659600704767[40] = 0;
   out_6978822659600704767[41] = 0;
   out_6978822659600704767[42] = 0;
   out_6978822659600704767[43] = 0;
   out_6978822659600704767[44] = 0;
   out_6978822659600704767[45] = 0;
   out_6978822659600704767[46] = 0;
   out_6978822659600704767[47] = 0;
   out_6978822659600704767[48] = 0;
   out_6978822659600704767[49] = 0;
   out_6978822659600704767[50] = 0;
   out_6978822659600704767[51] = 0;
   out_6978822659600704767[52] = 0;
   out_6978822659600704767[53] = 1;
   out_6978822659600704767[54] = 0;
   out_6978822659600704767[55] = 0;
   out_6978822659600704767[56] = 0;
   out_6978822659600704767[57] = 0;
   out_6978822659600704767[58] = 0;
   out_6978822659600704767[59] = 0;
   out_6978822659600704767[60] = 0;
   out_6978822659600704767[61] = 0;
   out_6978822659600704767[62] = 0;
   out_6978822659600704767[63] = 0;
   out_6978822659600704767[64] = 0;
   out_6978822659600704767[65] = 0;
}
void h_32(double *state, double *unused, double *out_3795146207836411375) {
   out_3795146207836411375[0] = state[3];
   out_3795146207836411375[1] = state[4];
   out_3795146207836411375[2] = state[5];
   out_3795146207836411375[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4553056910414730493) {
   out_4553056910414730493[0] = 0;
   out_4553056910414730493[1] = 0;
   out_4553056910414730493[2] = 0;
   out_4553056910414730493[3] = 1;
   out_4553056910414730493[4] = 0;
   out_4553056910414730493[5] = 0;
   out_4553056910414730493[6] = 0;
   out_4553056910414730493[7] = 0;
   out_4553056910414730493[8] = 0;
   out_4553056910414730493[9] = 0;
   out_4553056910414730493[10] = 0;
   out_4553056910414730493[11] = 0;
   out_4553056910414730493[12] = 0;
   out_4553056910414730493[13] = 0;
   out_4553056910414730493[14] = 0;
   out_4553056910414730493[15] = 0;
   out_4553056910414730493[16] = 0;
   out_4553056910414730493[17] = 0;
   out_4553056910414730493[18] = 0;
   out_4553056910414730493[19] = 0;
   out_4553056910414730493[20] = 0;
   out_4553056910414730493[21] = 0;
   out_4553056910414730493[22] = 0;
   out_4553056910414730493[23] = 0;
   out_4553056910414730493[24] = 0;
   out_4553056910414730493[25] = 0;
   out_4553056910414730493[26] = 1;
   out_4553056910414730493[27] = 0;
   out_4553056910414730493[28] = 0;
   out_4553056910414730493[29] = 0;
   out_4553056910414730493[30] = 0;
   out_4553056910414730493[31] = 0;
   out_4553056910414730493[32] = 0;
   out_4553056910414730493[33] = 0;
   out_4553056910414730493[34] = 0;
   out_4553056910414730493[35] = 0;
   out_4553056910414730493[36] = 0;
   out_4553056910414730493[37] = 0;
   out_4553056910414730493[38] = 0;
   out_4553056910414730493[39] = 0;
   out_4553056910414730493[40] = 0;
   out_4553056910414730493[41] = 0;
   out_4553056910414730493[42] = 0;
   out_4553056910414730493[43] = 0;
   out_4553056910414730493[44] = 0;
   out_4553056910414730493[45] = 0;
   out_4553056910414730493[46] = 0;
   out_4553056910414730493[47] = 0;
   out_4553056910414730493[48] = 0;
   out_4553056910414730493[49] = 1;
   out_4553056910414730493[50] = 0;
   out_4553056910414730493[51] = 0;
   out_4553056910414730493[52] = 0;
   out_4553056910414730493[53] = 0;
   out_4553056910414730493[54] = 0;
   out_4553056910414730493[55] = 0;
   out_4553056910414730493[56] = 0;
   out_4553056910414730493[57] = 0;
   out_4553056910414730493[58] = 0;
   out_4553056910414730493[59] = 0;
   out_4553056910414730493[60] = 0;
   out_4553056910414730493[61] = 0;
   out_4553056910414730493[62] = 0;
   out_4553056910414730493[63] = 0;
   out_4553056910414730493[64] = 0;
   out_4553056910414730493[65] = 0;
   out_4553056910414730493[66] = 0;
   out_4553056910414730493[67] = 0;
   out_4553056910414730493[68] = 0;
   out_4553056910414730493[69] = 0;
   out_4553056910414730493[70] = 0;
   out_4553056910414730493[71] = 0;
   out_4553056910414730493[72] = 1;
   out_4553056910414730493[73] = 0;
   out_4553056910414730493[74] = 0;
   out_4553056910414730493[75] = 0;
   out_4553056910414730493[76] = 0;
   out_4553056910414730493[77] = 0;
   out_4553056910414730493[78] = 0;
   out_4553056910414730493[79] = 0;
   out_4553056910414730493[80] = 0;
   out_4553056910414730493[81] = 0;
   out_4553056910414730493[82] = 0;
   out_4553056910414730493[83] = 0;
   out_4553056910414730493[84] = 0;
   out_4553056910414730493[85] = 0;
   out_4553056910414730493[86] = 0;
   out_4553056910414730493[87] = 0;
}
void h_13(double *state, double *unused, double *out_309080432191951178) {
   out_309080432191951178[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_309080432191951178[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_309080432191951178[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7608928095959949541) {
   out_7608928095959949541[0] = 0;
   out_7608928095959949541[1] = 0;
   out_7608928095959949541[2] = 0;
   out_7608928095959949541[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7608928095959949541[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7608928095959949541[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7608928095959949541[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7608928095959949541[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7608928095959949541[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7608928095959949541[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7608928095959949541[10] = 0;
   out_7608928095959949541[11] = 0;
   out_7608928095959949541[12] = 0;
   out_7608928095959949541[13] = 0;
   out_7608928095959949541[14] = 0;
   out_7608928095959949541[15] = 0;
   out_7608928095959949541[16] = 0;
   out_7608928095959949541[17] = 0;
   out_7608928095959949541[18] = 0;
   out_7608928095959949541[19] = 0;
   out_7608928095959949541[20] = 0;
   out_7608928095959949541[21] = 0;
   out_7608928095959949541[22] = 0;
   out_7608928095959949541[23] = 0;
   out_7608928095959949541[24] = 0;
   out_7608928095959949541[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7608928095959949541[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7608928095959949541[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7608928095959949541[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7608928095959949541[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7608928095959949541[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7608928095959949541[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7608928095959949541[32] = 0;
   out_7608928095959949541[33] = 0;
   out_7608928095959949541[34] = 0;
   out_7608928095959949541[35] = 0;
   out_7608928095959949541[36] = 0;
   out_7608928095959949541[37] = 0;
   out_7608928095959949541[38] = 0;
   out_7608928095959949541[39] = 0;
   out_7608928095959949541[40] = 0;
   out_7608928095959949541[41] = 0;
   out_7608928095959949541[42] = 0;
   out_7608928095959949541[43] = 0;
   out_7608928095959949541[44] = 0;
   out_7608928095959949541[45] = 0;
   out_7608928095959949541[46] = 0;
   out_7608928095959949541[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7608928095959949541[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7608928095959949541[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7608928095959949541[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7608928095959949541[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7608928095959949541[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7608928095959949541[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7608928095959949541[54] = 0;
   out_7608928095959949541[55] = 0;
   out_7608928095959949541[56] = 0;
   out_7608928095959949541[57] = 0;
   out_7608928095959949541[58] = 0;
   out_7608928095959949541[59] = 0;
   out_7608928095959949541[60] = 0;
   out_7608928095959949541[61] = 0;
   out_7608928095959949541[62] = 0;
   out_7608928095959949541[63] = 0;
   out_7608928095959949541[64] = 0;
   out_7608928095959949541[65] = 0;
}
void h_14(double *state, double *unused, double *out_2994849396655473689) {
   out_2994849396655473689[0] = state[10];
   out_2994849396655473689[1] = state[11];
   out_2994849396655473689[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8342449003365830118) {
   out_8342449003365830118[0] = 0;
   out_8342449003365830118[1] = 0;
   out_8342449003365830118[2] = 0;
   out_8342449003365830118[3] = 0;
   out_8342449003365830118[4] = 0;
   out_8342449003365830118[5] = 0;
   out_8342449003365830118[6] = 0;
   out_8342449003365830118[7] = 0;
   out_8342449003365830118[8] = 0;
   out_8342449003365830118[9] = 0;
   out_8342449003365830118[10] = 1;
   out_8342449003365830118[11] = 0;
   out_8342449003365830118[12] = 0;
   out_8342449003365830118[13] = 0;
   out_8342449003365830118[14] = 0;
   out_8342449003365830118[15] = 0;
   out_8342449003365830118[16] = 0;
   out_8342449003365830118[17] = 0;
   out_8342449003365830118[18] = 0;
   out_8342449003365830118[19] = 0;
   out_8342449003365830118[20] = 0;
   out_8342449003365830118[21] = 0;
   out_8342449003365830118[22] = 0;
   out_8342449003365830118[23] = 0;
   out_8342449003365830118[24] = 0;
   out_8342449003365830118[25] = 0;
   out_8342449003365830118[26] = 0;
   out_8342449003365830118[27] = 0;
   out_8342449003365830118[28] = 0;
   out_8342449003365830118[29] = 0;
   out_8342449003365830118[30] = 0;
   out_8342449003365830118[31] = 0;
   out_8342449003365830118[32] = 0;
   out_8342449003365830118[33] = 1;
   out_8342449003365830118[34] = 0;
   out_8342449003365830118[35] = 0;
   out_8342449003365830118[36] = 0;
   out_8342449003365830118[37] = 0;
   out_8342449003365830118[38] = 0;
   out_8342449003365830118[39] = 0;
   out_8342449003365830118[40] = 0;
   out_8342449003365830118[41] = 0;
   out_8342449003365830118[42] = 0;
   out_8342449003365830118[43] = 0;
   out_8342449003365830118[44] = 0;
   out_8342449003365830118[45] = 0;
   out_8342449003365830118[46] = 0;
   out_8342449003365830118[47] = 0;
   out_8342449003365830118[48] = 0;
   out_8342449003365830118[49] = 0;
   out_8342449003365830118[50] = 0;
   out_8342449003365830118[51] = 0;
   out_8342449003365830118[52] = 0;
   out_8342449003365830118[53] = 0;
   out_8342449003365830118[54] = 0;
   out_8342449003365830118[55] = 0;
   out_8342449003365830118[56] = 1;
   out_8342449003365830118[57] = 0;
   out_8342449003365830118[58] = 0;
   out_8342449003365830118[59] = 0;
   out_8342449003365830118[60] = 0;
   out_8342449003365830118[61] = 0;
   out_8342449003365830118[62] = 0;
   out_8342449003365830118[63] = 0;
   out_8342449003365830118[64] = 0;
   out_8342449003365830118[65] = 0;
}
void h_33(double *state, double *unused, double *out_2775908019009971139) {
   out_2775908019009971139[0] = state[16];
   out_2775908019009971139[1] = state[17];
   out_2775908019009971139[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3828265654961847163) {
   out_3828265654961847163[0] = 0;
   out_3828265654961847163[1] = 0;
   out_3828265654961847163[2] = 0;
   out_3828265654961847163[3] = 0;
   out_3828265654961847163[4] = 0;
   out_3828265654961847163[5] = 0;
   out_3828265654961847163[6] = 0;
   out_3828265654961847163[7] = 0;
   out_3828265654961847163[8] = 0;
   out_3828265654961847163[9] = 0;
   out_3828265654961847163[10] = 0;
   out_3828265654961847163[11] = 0;
   out_3828265654961847163[12] = 0;
   out_3828265654961847163[13] = 0;
   out_3828265654961847163[14] = 0;
   out_3828265654961847163[15] = 0;
   out_3828265654961847163[16] = 1;
   out_3828265654961847163[17] = 0;
   out_3828265654961847163[18] = 0;
   out_3828265654961847163[19] = 0;
   out_3828265654961847163[20] = 0;
   out_3828265654961847163[21] = 0;
   out_3828265654961847163[22] = 0;
   out_3828265654961847163[23] = 0;
   out_3828265654961847163[24] = 0;
   out_3828265654961847163[25] = 0;
   out_3828265654961847163[26] = 0;
   out_3828265654961847163[27] = 0;
   out_3828265654961847163[28] = 0;
   out_3828265654961847163[29] = 0;
   out_3828265654961847163[30] = 0;
   out_3828265654961847163[31] = 0;
   out_3828265654961847163[32] = 0;
   out_3828265654961847163[33] = 0;
   out_3828265654961847163[34] = 0;
   out_3828265654961847163[35] = 0;
   out_3828265654961847163[36] = 0;
   out_3828265654961847163[37] = 0;
   out_3828265654961847163[38] = 0;
   out_3828265654961847163[39] = 1;
   out_3828265654961847163[40] = 0;
   out_3828265654961847163[41] = 0;
   out_3828265654961847163[42] = 0;
   out_3828265654961847163[43] = 0;
   out_3828265654961847163[44] = 0;
   out_3828265654961847163[45] = 0;
   out_3828265654961847163[46] = 0;
   out_3828265654961847163[47] = 0;
   out_3828265654961847163[48] = 0;
   out_3828265654961847163[49] = 0;
   out_3828265654961847163[50] = 0;
   out_3828265654961847163[51] = 0;
   out_3828265654961847163[52] = 0;
   out_3828265654961847163[53] = 0;
   out_3828265654961847163[54] = 0;
   out_3828265654961847163[55] = 0;
   out_3828265654961847163[56] = 0;
   out_3828265654961847163[57] = 0;
   out_3828265654961847163[58] = 0;
   out_3828265654961847163[59] = 0;
   out_3828265654961847163[60] = 0;
   out_3828265654961847163[61] = 0;
   out_3828265654961847163[62] = 1;
   out_3828265654961847163[63] = 0;
   out_3828265654961847163[64] = 0;
   out_3828265654961847163[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5017127939989894028) {
  H(in_vec, out_5017127939989894028);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6740750633202003938) {
  err_fun(nom_x, delta_x, out_6740750633202003938);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4003804904042118845) {
  inv_err_fun(nom_x, true_x, out_4003804904042118845);
}
void live_H_mod_fun(double *state, double *out_3147787631266448461) {
  H_mod_fun(state, out_3147787631266448461);
}
void live_f_fun(double *state, double dt, double *out_400464903206441192) {
  f_fun(state,  dt, out_400464903206441192);
}
void live_F_fun(double *state, double dt, double *out_1608606016964525974) {
  F_fun(state,  dt, out_1608606016964525974);
}
void live_h_4(double *state, double *unused, double *out_5810520985716428538) {
  h_4(state, unused, out_5810520985716428538);
}
void live_H_4(double *state, double *unused, double *out_8101259356736239473) {
  H_4(state, unused, out_8101259356736239473);
}
void live_h_9(double *state, double *unused, double *out_2994849396655473689) {
  h_9(state, unused, out_2994849396655473689);
}
void live_H_9(double *state, double *unused, double *out_8342449003365830118) {
  H_9(state, unused, out_8342449003365830118);
}
void live_h_10(double *state, double *unused, double *out_6942493849852737304) {
  h_10(state, unused, out_6942493849852737304);
}
void live_H_10(double *state, double *unused, double *out_213825020102705639) {
  H_10(state, unused, out_213825020102705639);
}
void live_h_12(double *state, double *unused, double *out_841890056352501808) {
  h_12(state, unused, out_841890056352501808);
}
void live_H_12(double *state, double *unused, double *out_5326028308941350348) {
  H_12(state, unused, out_5326028308941350348);
}
void live_h_31(double *state, double *unused, double *out_570532822292067381) {
  h_31(state, unused, out_570532822292067381);
}
void live_H_31(double *state, double *unused, double *out_6978822659600704767) {
  H_31(state, unused, out_6978822659600704767);
}
void live_h_32(double *state, double *unused, double *out_3795146207836411375) {
  h_32(state, unused, out_3795146207836411375);
}
void live_H_32(double *state, double *unused, double *out_4553056910414730493) {
  H_32(state, unused, out_4553056910414730493);
}
void live_h_13(double *state, double *unused, double *out_309080432191951178) {
  h_13(state, unused, out_309080432191951178);
}
void live_H_13(double *state, double *unused, double *out_7608928095959949541) {
  H_13(state, unused, out_7608928095959949541);
}
void live_h_14(double *state, double *unused, double *out_2994849396655473689) {
  h_14(state, unused, out_2994849396655473689);
}
void live_H_14(double *state, double *unused, double *out_8342449003365830118) {
  H_14(state, unused, out_8342449003365830118);
}
void live_h_33(double *state, double *unused, double *out_2775908019009971139) {
  h_33(state, unused, out_2775908019009971139);
}
void live_H_33(double *state, double *unused, double *out_3828265654961847163) {
  H_33(state, unused, out_3828265654961847163);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
