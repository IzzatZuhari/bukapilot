#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1967997356340866583) {
   out_1967997356340866583[0] = 0;
   out_1967997356340866583[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1967997356340866583[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1967997356340866583[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1967997356340866583[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1967997356340866583[5] = -sin(in_vec[1]);
   out_1967997356340866583[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1967997356340866583[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1967997356340866583[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1967997356340866583[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1967997356340866583[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1967997356340866583[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1967997356340866583[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1967997356340866583[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1967997356340866583[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1967997356340866583[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1967997356340866583[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1967997356340866583[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5319645388126622084) {
   out_5319645388126622084[0] = delta_x[0] + nom_x[0];
   out_5319645388126622084[1] = delta_x[1] + nom_x[1];
   out_5319645388126622084[2] = delta_x[2] + nom_x[2];
   out_5319645388126622084[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5319645388126622084[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5319645388126622084[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5319645388126622084[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5319645388126622084[7] = delta_x[6] + nom_x[7];
   out_5319645388126622084[8] = delta_x[7] + nom_x[8];
   out_5319645388126622084[9] = delta_x[8] + nom_x[9];
   out_5319645388126622084[10] = delta_x[9] + nom_x[10];
   out_5319645388126622084[11] = delta_x[10] + nom_x[11];
   out_5319645388126622084[12] = delta_x[11] + nom_x[12];
   out_5319645388126622084[13] = delta_x[12] + nom_x[13];
   out_5319645388126622084[14] = delta_x[13] + nom_x[14];
   out_5319645388126622084[15] = delta_x[14] + nom_x[15];
   out_5319645388126622084[16] = delta_x[15] + nom_x[16];
   out_5319645388126622084[17] = delta_x[16] + nom_x[17];
   out_5319645388126622084[18] = delta_x[17] + nom_x[18];
   out_5319645388126622084[19] = delta_x[18] + nom_x[19];
   out_5319645388126622084[20] = delta_x[19] + nom_x[20];
   out_5319645388126622084[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4147357239501958364) {
   out_4147357239501958364[0] = -nom_x[0] + true_x[0];
   out_4147357239501958364[1] = -nom_x[1] + true_x[1];
   out_4147357239501958364[2] = -nom_x[2] + true_x[2];
   out_4147357239501958364[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4147357239501958364[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4147357239501958364[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4147357239501958364[6] = -nom_x[7] + true_x[7];
   out_4147357239501958364[7] = -nom_x[8] + true_x[8];
   out_4147357239501958364[8] = -nom_x[9] + true_x[9];
   out_4147357239501958364[9] = -nom_x[10] + true_x[10];
   out_4147357239501958364[10] = -nom_x[11] + true_x[11];
   out_4147357239501958364[11] = -nom_x[12] + true_x[12];
   out_4147357239501958364[12] = -nom_x[13] + true_x[13];
   out_4147357239501958364[13] = -nom_x[14] + true_x[14];
   out_4147357239501958364[14] = -nom_x[15] + true_x[15];
   out_4147357239501958364[15] = -nom_x[16] + true_x[16];
   out_4147357239501958364[16] = -nom_x[17] + true_x[17];
   out_4147357239501958364[17] = -nom_x[18] + true_x[18];
   out_4147357239501958364[18] = -nom_x[19] + true_x[19];
   out_4147357239501958364[19] = -nom_x[20] + true_x[20];
   out_4147357239501958364[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4013764754807942187) {
   out_4013764754807942187[0] = 1.0;
   out_4013764754807942187[1] = 0;
   out_4013764754807942187[2] = 0;
   out_4013764754807942187[3] = 0;
   out_4013764754807942187[4] = 0;
   out_4013764754807942187[5] = 0;
   out_4013764754807942187[6] = 0;
   out_4013764754807942187[7] = 0;
   out_4013764754807942187[8] = 0;
   out_4013764754807942187[9] = 0;
   out_4013764754807942187[10] = 0;
   out_4013764754807942187[11] = 0;
   out_4013764754807942187[12] = 0;
   out_4013764754807942187[13] = 0;
   out_4013764754807942187[14] = 0;
   out_4013764754807942187[15] = 0;
   out_4013764754807942187[16] = 0;
   out_4013764754807942187[17] = 0;
   out_4013764754807942187[18] = 0;
   out_4013764754807942187[19] = 0;
   out_4013764754807942187[20] = 0;
   out_4013764754807942187[21] = 0;
   out_4013764754807942187[22] = 1.0;
   out_4013764754807942187[23] = 0;
   out_4013764754807942187[24] = 0;
   out_4013764754807942187[25] = 0;
   out_4013764754807942187[26] = 0;
   out_4013764754807942187[27] = 0;
   out_4013764754807942187[28] = 0;
   out_4013764754807942187[29] = 0;
   out_4013764754807942187[30] = 0;
   out_4013764754807942187[31] = 0;
   out_4013764754807942187[32] = 0;
   out_4013764754807942187[33] = 0;
   out_4013764754807942187[34] = 0;
   out_4013764754807942187[35] = 0;
   out_4013764754807942187[36] = 0;
   out_4013764754807942187[37] = 0;
   out_4013764754807942187[38] = 0;
   out_4013764754807942187[39] = 0;
   out_4013764754807942187[40] = 0;
   out_4013764754807942187[41] = 0;
   out_4013764754807942187[42] = 0;
   out_4013764754807942187[43] = 0;
   out_4013764754807942187[44] = 1.0;
   out_4013764754807942187[45] = 0;
   out_4013764754807942187[46] = 0;
   out_4013764754807942187[47] = 0;
   out_4013764754807942187[48] = 0;
   out_4013764754807942187[49] = 0;
   out_4013764754807942187[50] = 0;
   out_4013764754807942187[51] = 0;
   out_4013764754807942187[52] = 0;
   out_4013764754807942187[53] = 0;
   out_4013764754807942187[54] = 0;
   out_4013764754807942187[55] = 0;
   out_4013764754807942187[56] = 0;
   out_4013764754807942187[57] = 0;
   out_4013764754807942187[58] = 0;
   out_4013764754807942187[59] = 0;
   out_4013764754807942187[60] = 0;
   out_4013764754807942187[61] = 0;
   out_4013764754807942187[62] = 0;
   out_4013764754807942187[63] = 0;
   out_4013764754807942187[64] = 0;
   out_4013764754807942187[65] = 0;
   out_4013764754807942187[66] = -0.5*state[4];
   out_4013764754807942187[67] = -0.5*state[5];
   out_4013764754807942187[68] = -0.5*state[6];
   out_4013764754807942187[69] = 0;
   out_4013764754807942187[70] = 0;
   out_4013764754807942187[71] = 0;
   out_4013764754807942187[72] = 0;
   out_4013764754807942187[73] = 0;
   out_4013764754807942187[74] = 0;
   out_4013764754807942187[75] = 0;
   out_4013764754807942187[76] = 0;
   out_4013764754807942187[77] = 0;
   out_4013764754807942187[78] = 0;
   out_4013764754807942187[79] = 0;
   out_4013764754807942187[80] = 0;
   out_4013764754807942187[81] = 0;
   out_4013764754807942187[82] = 0;
   out_4013764754807942187[83] = 0;
   out_4013764754807942187[84] = 0;
   out_4013764754807942187[85] = 0;
   out_4013764754807942187[86] = 0;
   out_4013764754807942187[87] = 0.5*state[3];
   out_4013764754807942187[88] = 0.5*state[6];
   out_4013764754807942187[89] = -0.5*state[5];
   out_4013764754807942187[90] = 0;
   out_4013764754807942187[91] = 0;
   out_4013764754807942187[92] = 0;
   out_4013764754807942187[93] = 0;
   out_4013764754807942187[94] = 0;
   out_4013764754807942187[95] = 0;
   out_4013764754807942187[96] = 0;
   out_4013764754807942187[97] = 0;
   out_4013764754807942187[98] = 0;
   out_4013764754807942187[99] = 0;
   out_4013764754807942187[100] = 0;
   out_4013764754807942187[101] = 0;
   out_4013764754807942187[102] = 0;
   out_4013764754807942187[103] = 0;
   out_4013764754807942187[104] = 0;
   out_4013764754807942187[105] = 0;
   out_4013764754807942187[106] = 0;
   out_4013764754807942187[107] = 0;
   out_4013764754807942187[108] = -0.5*state[6];
   out_4013764754807942187[109] = 0.5*state[3];
   out_4013764754807942187[110] = 0.5*state[4];
   out_4013764754807942187[111] = 0;
   out_4013764754807942187[112] = 0;
   out_4013764754807942187[113] = 0;
   out_4013764754807942187[114] = 0;
   out_4013764754807942187[115] = 0;
   out_4013764754807942187[116] = 0;
   out_4013764754807942187[117] = 0;
   out_4013764754807942187[118] = 0;
   out_4013764754807942187[119] = 0;
   out_4013764754807942187[120] = 0;
   out_4013764754807942187[121] = 0;
   out_4013764754807942187[122] = 0;
   out_4013764754807942187[123] = 0;
   out_4013764754807942187[124] = 0;
   out_4013764754807942187[125] = 0;
   out_4013764754807942187[126] = 0;
   out_4013764754807942187[127] = 0;
   out_4013764754807942187[128] = 0;
   out_4013764754807942187[129] = 0.5*state[5];
   out_4013764754807942187[130] = -0.5*state[4];
   out_4013764754807942187[131] = 0.5*state[3];
   out_4013764754807942187[132] = 0;
   out_4013764754807942187[133] = 0;
   out_4013764754807942187[134] = 0;
   out_4013764754807942187[135] = 0;
   out_4013764754807942187[136] = 0;
   out_4013764754807942187[137] = 0;
   out_4013764754807942187[138] = 0;
   out_4013764754807942187[139] = 0;
   out_4013764754807942187[140] = 0;
   out_4013764754807942187[141] = 0;
   out_4013764754807942187[142] = 0;
   out_4013764754807942187[143] = 0;
   out_4013764754807942187[144] = 0;
   out_4013764754807942187[145] = 0;
   out_4013764754807942187[146] = 0;
   out_4013764754807942187[147] = 0;
   out_4013764754807942187[148] = 0;
   out_4013764754807942187[149] = 0;
   out_4013764754807942187[150] = 0;
   out_4013764754807942187[151] = 0;
   out_4013764754807942187[152] = 0;
   out_4013764754807942187[153] = 1.0;
   out_4013764754807942187[154] = 0;
   out_4013764754807942187[155] = 0;
   out_4013764754807942187[156] = 0;
   out_4013764754807942187[157] = 0;
   out_4013764754807942187[158] = 0;
   out_4013764754807942187[159] = 0;
   out_4013764754807942187[160] = 0;
   out_4013764754807942187[161] = 0;
   out_4013764754807942187[162] = 0;
   out_4013764754807942187[163] = 0;
   out_4013764754807942187[164] = 0;
   out_4013764754807942187[165] = 0;
   out_4013764754807942187[166] = 0;
   out_4013764754807942187[167] = 0;
   out_4013764754807942187[168] = 0;
   out_4013764754807942187[169] = 0;
   out_4013764754807942187[170] = 0;
   out_4013764754807942187[171] = 0;
   out_4013764754807942187[172] = 0;
   out_4013764754807942187[173] = 0;
   out_4013764754807942187[174] = 0;
   out_4013764754807942187[175] = 1.0;
   out_4013764754807942187[176] = 0;
   out_4013764754807942187[177] = 0;
   out_4013764754807942187[178] = 0;
   out_4013764754807942187[179] = 0;
   out_4013764754807942187[180] = 0;
   out_4013764754807942187[181] = 0;
   out_4013764754807942187[182] = 0;
   out_4013764754807942187[183] = 0;
   out_4013764754807942187[184] = 0;
   out_4013764754807942187[185] = 0;
   out_4013764754807942187[186] = 0;
   out_4013764754807942187[187] = 0;
   out_4013764754807942187[188] = 0;
   out_4013764754807942187[189] = 0;
   out_4013764754807942187[190] = 0;
   out_4013764754807942187[191] = 0;
   out_4013764754807942187[192] = 0;
   out_4013764754807942187[193] = 0;
   out_4013764754807942187[194] = 0;
   out_4013764754807942187[195] = 0;
   out_4013764754807942187[196] = 0;
   out_4013764754807942187[197] = 1.0;
   out_4013764754807942187[198] = 0;
   out_4013764754807942187[199] = 0;
   out_4013764754807942187[200] = 0;
   out_4013764754807942187[201] = 0;
   out_4013764754807942187[202] = 0;
   out_4013764754807942187[203] = 0;
   out_4013764754807942187[204] = 0;
   out_4013764754807942187[205] = 0;
   out_4013764754807942187[206] = 0;
   out_4013764754807942187[207] = 0;
   out_4013764754807942187[208] = 0;
   out_4013764754807942187[209] = 0;
   out_4013764754807942187[210] = 0;
   out_4013764754807942187[211] = 0;
   out_4013764754807942187[212] = 0;
   out_4013764754807942187[213] = 0;
   out_4013764754807942187[214] = 0;
   out_4013764754807942187[215] = 0;
   out_4013764754807942187[216] = 0;
   out_4013764754807942187[217] = 0;
   out_4013764754807942187[218] = 0;
   out_4013764754807942187[219] = 1.0;
   out_4013764754807942187[220] = 0;
   out_4013764754807942187[221] = 0;
   out_4013764754807942187[222] = 0;
   out_4013764754807942187[223] = 0;
   out_4013764754807942187[224] = 0;
   out_4013764754807942187[225] = 0;
   out_4013764754807942187[226] = 0;
   out_4013764754807942187[227] = 0;
   out_4013764754807942187[228] = 0;
   out_4013764754807942187[229] = 0;
   out_4013764754807942187[230] = 0;
   out_4013764754807942187[231] = 0;
   out_4013764754807942187[232] = 0;
   out_4013764754807942187[233] = 0;
   out_4013764754807942187[234] = 0;
   out_4013764754807942187[235] = 0;
   out_4013764754807942187[236] = 0;
   out_4013764754807942187[237] = 0;
   out_4013764754807942187[238] = 0;
   out_4013764754807942187[239] = 0;
   out_4013764754807942187[240] = 0;
   out_4013764754807942187[241] = 1.0;
   out_4013764754807942187[242] = 0;
   out_4013764754807942187[243] = 0;
   out_4013764754807942187[244] = 0;
   out_4013764754807942187[245] = 0;
   out_4013764754807942187[246] = 0;
   out_4013764754807942187[247] = 0;
   out_4013764754807942187[248] = 0;
   out_4013764754807942187[249] = 0;
   out_4013764754807942187[250] = 0;
   out_4013764754807942187[251] = 0;
   out_4013764754807942187[252] = 0;
   out_4013764754807942187[253] = 0;
   out_4013764754807942187[254] = 0;
   out_4013764754807942187[255] = 0;
   out_4013764754807942187[256] = 0;
   out_4013764754807942187[257] = 0;
   out_4013764754807942187[258] = 0;
   out_4013764754807942187[259] = 0;
   out_4013764754807942187[260] = 0;
   out_4013764754807942187[261] = 0;
   out_4013764754807942187[262] = 0;
   out_4013764754807942187[263] = 1.0;
   out_4013764754807942187[264] = 0;
   out_4013764754807942187[265] = 0;
   out_4013764754807942187[266] = 0;
   out_4013764754807942187[267] = 0;
   out_4013764754807942187[268] = 0;
   out_4013764754807942187[269] = 0;
   out_4013764754807942187[270] = 0;
   out_4013764754807942187[271] = 0;
   out_4013764754807942187[272] = 0;
   out_4013764754807942187[273] = 0;
   out_4013764754807942187[274] = 0;
   out_4013764754807942187[275] = 0;
   out_4013764754807942187[276] = 0;
   out_4013764754807942187[277] = 0;
   out_4013764754807942187[278] = 0;
   out_4013764754807942187[279] = 0;
   out_4013764754807942187[280] = 0;
   out_4013764754807942187[281] = 0;
   out_4013764754807942187[282] = 0;
   out_4013764754807942187[283] = 0;
   out_4013764754807942187[284] = 0;
   out_4013764754807942187[285] = 1.0;
   out_4013764754807942187[286] = 0;
   out_4013764754807942187[287] = 0;
   out_4013764754807942187[288] = 0;
   out_4013764754807942187[289] = 0;
   out_4013764754807942187[290] = 0;
   out_4013764754807942187[291] = 0;
   out_4013764754807942187[292] = 0;
   out_4013764754807942187[293] = 0;
   out_4013764754807942187[294] = 0;
   out_4013764754807942187[295] = 0;
   out_4013764754807942187[296] = 0;
   out_4013764754807942187[297] = 0;
   out_4013764754807942187[298] = 0;
   out_4013764754807942187[299] = 0;
   out_4013764754807942187[300] = 0;
   out_4013764754807942187[301] = 0;
   out_4013764754807942187[302] = 0;
   out_4013764754807942187[303] = 0;
   out_4013764754807942187[304] = 0;
   out_4013764754807942187[305] = 0;
   out_4013764754807942187[306] = 0;
   out_4013764754807942187[307] = 1.0;
   out_4013764754807942187[308] = 0;
   out_4013764754807942187[309] = 0;
   out_4013764754807942187[310] = 0;
   out_4013764754807942187[311] = 0;
   out_4013764754807942187[312] = 0;
   out_4013764754807942187[313] = 0;
   out_4013764754807942187[314] = 0;
   out_4013764754807942187[315] = 0;
   out_4013764754807942187[316] = 0;
   out_4013764754807942187[317] = 0;
   out_4013764754807942187[318] = 0;
   out_4013764754807942187[319] = 0;
   out_4013764754807942187[320] = 0;
   out_4013764754807942187[321] = 0;
   out_4013764754807942187[322] = 0;
   out_4013764754807942187[323] = 0;
   out_4013764754807942187[324] = 0;
   out_4013764754807942187[325] = 0;
   out_4013764754807942187[326] = 0;
   out_4013764754807942187[327] = 0;
   out_4013764754807942187[328] = 0;
   out_4013764754807942187[329] = 1.0;
   out_4013764754807942187[330] = 0;
   out_4013764754807942187[331] = 0;
   out_4013764754807942187[332] = 0;
   out_4013764754807942187[333] = 0;
   out_4013764754807942187[334] = 0;
   out_4013764754807942187[335] = 0;
   out_4013764754807942187[336] = 0;
   out_4013764754807942187[337] = 0;
   out_4013764754807942187[338] = 0;
   out_4013764754807942187[339] = 0;
   out_4013764754807942187[340] = 0;
   out_4013764754807942187[341] = 0;
   out_4013764754807942187[342] = 0;
   out_4013764754807942187[343] = 0;
   out_4013764754807942187[344] = 0;
   out_4013764754807942187[345] = 0;
   out_4013764754807942187[346] = 0;
   out_4013764754807942187[347] = 0;
   out_4013764754807942187[348] = 0;
   out_4013764754807942187[349] = 0;
   out_4013764754807942187[350] = 0;
   out_4013764754807942187[351] = 1.0;
   out_4013764754807942187[352] = 0;
   out_4013764754807942187[353] = 0;
   out_4013764754807942187[354] = 0;
   out_4013764754807942187[355] = 0;
   out_4013764754807942187[356] = 0;
   out_4013764754807942187[357] = 0;
   out_4013764754807942187[358] = 0;
   out_4013764754807942187[359] = 0;
   out_4013764754807942187[360] = 0;
   out_4013764754807942187[361] = 0;
   out_4013764754807942187[362] = 0;
   out_4013764754807942187[363] = 0;
   out_4013764754807942187[364] = 0;
   out_4013764754807942187[365] = 0;
   out_4013764754807942187[366] = 0;
   out_4013764754807942187[367] = 0;
   out_4013764754807942187[368] = 0;
   out_4013764754807942187[369] = 0;
   out_4013764754807942187[370] = 0;
   out_4013764754807942187[371] = 0;
   out_4013764754807942187[372] = 0;
   out_4013764754807942187[373] = 1.0;
   out_4013764754807942187[374] = 0;
   out_4013764754807942187[375] = 0;
   out_4013764754807942187[376] = 0;
   out_4013764754807942187[377] = 0;
   out_4013764754807942187[378] = 0;
   out_4013764754807942187[379] = 0;
   out_4013764754807942187[380] = 0;
   out_4013764754807942187[381] = 0;
   out_4013764754807942187[382] = 0;
   out_4013764754807942187[383] = 0;
   out_4013764754807942187[384] = 0;
   out_4013764754807942187[385] = 0;
   out_4013764754807942187[386] = 0;
   out_4013764754807942187[387] = 0;
   out_4013764754807942187[388] = 0;
   out_4013764754807942187[389] = 0;
   out_4013764754807942187[390] = 0;
   out_4013764754807942187[391] = 0;
   out_4013764754807942187[392] = 0;
   out_4013764754807942187[393] = 0;
   out_4013764754807942187[394] = 0;
   out_4013764754807942187[395] = 1.0;
   out_4013764754807942187[396] = 0;
   out_4013764754807942187[397] = 0;
   out_4013764754807942187[398] = 0;
   out_4013764754807942187[399] = 0;
   out_4013764754807942187[400] = 0;
   out_4013764754807942187[401] = 0;
   out_4013764754807942187[402] = 0;
   out_4013764754807942187[403] = 0;
   out_4013764754807942187[404] = 0;
   out_4013764754807942187[405] = 0;
   out_4013764754807942187[406] = 0;
   out_4013764754807942187[407] = 0;
   out_4013764754807942187[408] = 0;
   out_4013764754807942187[409] = 0;
   out_4013764754807942187[410] = 0;
   out_4013764754807942187[411] = 0;
   out_4013764754807942187[412] = 0;
   out_4013764754807942187[413] = 0;
   out_4013764754807942187[414] = 0;
   out_4013764754807942187[415] = 0;
   out_4013764754807942187[416] = 0;
   out_4013764754807942187[417] = 1.0;
   out_4013764754807942187[418] = 0;
   out_4013764754807942187[419] = 0;
   out_4013764754807942187[420] = 0;
   out_4013764754807942187[421] = 0;
   out_4013764754807942187[422] = 0;
   out_4013764754807942187[423] = 0;
   out_4013764754807942187[424] = 0;
   out_4013764754807942187[425] = 0;
   out_4013764754807942187[426] = 0;
   out_4013764754807942187[427] = 0;
   out_4013764754807942187[428] = 0;
   out_4013764754807942187[429] = 0;
   out_4013764754807942187[430] = 0;
   out_4013764754807942187[431] = 0;
   out_4013764754807942187[432] = 0;
   out_4013764754807942187[433] = 0;
   out_4013764754807942187[434] = 0;
   out_4013764754807942187[435] = 0;
   out_4013764754807942187[436] = 0;
   out_4013764754807942187[437] = 0;
   out_4013764754807942187[438] = 0;
   out_4013764754807942187[439] = 1.0;
   out_4013764754807942187[440] = 0;
   out_4013764754807942187[441] = 0;
   out_4013764754807942187[442] = 0;
   out_4013764754807942187[443] = 0;
   out_4013764754807942187[444] = 0;
   out_4013764754807942187[445] = 0;
   out_4013764754807942187[446] = 0;
   out_4013764754807942187[447] = 0;
   out_4013764754807942187[448] = 0;
   out_4013764754807942187[449] = 0;
   out_4013764754807942187[450] = 0;
   out_4013764754807942187[451] = 0;
   out_4013764754807942187[452] = 0;
   out_4013764754807942187[453] = 0;
   out_4013764754807942187[454] = 0;
   out_4013764754807942187[455] = 0;
   out_4013764754807942187[456] = 0;
   out_4013764754807942187[457] = 0;
   out_4013764754807942187[458] = 0;
   out_4013764754807942187[459] = 0;
   out_4013764754807942187[460] = 0;
   out_4013764754807942187[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6649622138097899585) {
   out_6649622138097899585[0] = dt*state[7] + state[0];
   out_6649622138097899585[1] = dt*state[8] + state[1];
   out_6649622138097899585[2] = dt*state[9] + state[2];
   out_6649622138097899585[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6649622138097899585[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6649622138097899585[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6649622138097899585[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6649622138097899585[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6649622138097899585[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6649622138097899585[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6649622138097899585[10] = state[10];
   out_6649622138097899585[11] = state[11];
   out_6649622138097899585[12] = state[12];
   out_6649622138097899585[13] = state[13];
   out_6649622138097899585[14] = state[14];
   out_6649622138097899585[15] = state[15];
   out_6649622138097899585[16] = state[16];
   out_6649622138097899585[17] = state[17];
   out_6649622138097899585[18] = state[18];
   out_6649622138097899585[19] = state[19];
   out_6649622138097899585[20] = state[20];
   out_6649622138097899585[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5292336351074770392) {
   out_5292336351074770392[0] = 1;
   out_5292336351074770392[1] = 0;
   out_5292336351074770392[2] = 0;
   out_5292336351074770392[3] = 0;
   out_5292336351074770392[4] = 0;
   out_5292336351074770392[5] = 0;
   out_5292336351074770392[6] = dt;
   out_5292336351074770392[7] = 0;
   out_5292336351074770392[8] = 0;
   out_5292336351074770392[9] = 0;
   out_5292336351074770392[10] = 0;
   out_5292336351074770392[11] = 0;
   out_5292336351074770392[12] = 0;
   out_5292336351074770392[13] = 0;
   out_5292336351074770392[14] = 0;
   out_5292336351074770392[15] = 0;
   out_5292336351074770392[16] = 0;
   out_5292336351074770392[17] = 0;
   out_5292336351074770392[18] = 0;
   out_5292336351074770392[19] = 0;
   out_5292336351074770392[20] = 0;
   out_5292336351074770392[21] = 0;
   out_5292336351074770392[22] = 1;
   out_5292336351074770392[23] = 0;
   out_5292336351074770392[24] = 0;
   out_5292336351074770392[25] = 0;
   out_5292336351074770392[26] = 0;
   out_5292336351074770392[27] = 0;
   out_5292336351074770392[28] = dt;
   out_5292336351074770392[29] = 0;
   out_5292336351074770392[30] = 0;
   out_5292336351074770392[31] = 0;
   out_5292336351074770392[32] = 0;
   out_5292336351074770392[33] = 0;
   out_5292336351074770392[34] = 0;
   out_5292336351074770392[35] = 0;
   out_5292336351074770392[36] = 0;
   out_5292336351074770392[37] = 0;
   out_5292336351074770392[38] = 0;
   out_5292336351074770392[39] = 0;
   out_5292336351074770392[40] = 0;
   out_5292336351074770392[41] = 0;
   out_5292336351074770392[42] = 0;
   out_5292336351074770392[43] = 0;
   out_5292336351074770392[44] = 1;
   out_5292336351074770392[45] = 0;
   out_5292336351074770392[46] = 0;
   out_5292336351074770392[47] = 0;
   out_5292336351074770392[48] = 0;
   out_5292336351074770392[49] = 0;
   out_5292336351074770392[50] = dt;
   out_5292336351074770392[51] = 0;
   out_5292336351074770392[52] = 0;
   out_5292336351074770392[53] = 0;
   out_5292336351074770392[54] = 0;
   out_5292336351074770392[55] = 0;
   out_5292336351074770392[56] = 0;
   out_5292336351074770392[57] = 0;
   out_5292336351074770392[58] = 0;
   out_5292336351074770392[59] = 0;
   out_5292336351074770392[60] = 0;
   out_5292336351074770392[61] = 0;
   out_5292336351074770392[62] = 0;
   out_5292336351074770392[63] = 0;
   out_5292336351074770392[64] = 0;
   out_5292336351074770392[65] = 0;
   out_5292336351074770392[66] = 1;
   out_5292336351074770392[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5292336351074770392[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5292336351074770392[69] = 0;
   out_5292336351074770392[70] = 0;
   out_5292336351074770392[71] = 0;
   out_5292336351074770392[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5292336351074770392[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5292336351074770392[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5292336351074770392[75] = 0;
   out_5292336351074770392[76] = 0;
   out_5292336351074770392[77] = 0;
   out_5292336351074770392[78] = 0;
   out_5292336351074770392[79] = 0;
   out_5292336351074770392[80] = 0;
   out_5292336351074770392[81] = 0;
   out_5292336351074770392[82] = 0;
   out_5292336351074770392[83] = 0;
   out_5292336351074770392[84] = 0;
   out_5292336351074770392[85] = 0;
   out_5292336351074770392[86] = 0;
   out_5292336351074770392[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5292336351074770392[88] = 1;
   out_5292336351074770392[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5292336351074770392[90] = 0;
   out_5292336351074770392[91] = 0;
   out_5292336351074770392[92] = 0;
   out_5292336351074770392[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5292336351074770392[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5292336351074770392[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5292336351074770392[96] = 0;
   out_5292336351074770392[97] = 0;
   out_5292336351074770392[98] = 0;
   out_5292336351074770392[99] = 0;
   out_5292336351074770392[100] = 0;
   out_5292336351074770392[101] = 0;
   out_5292336351074770392[102] = 0;
   out_5292336351074770392[103] = 0;
   out_5292336351074770392[104] = 0;
   out_5292336351074770392[105] = 0;
   out_5292336351074770392[106] = 0;
   out_5292336351074770392[107] = 0;
   out_5292336351074770392[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5292336351074770392[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5292336351074770392[110] = 1;
   out_5292336351074770392[111] = 0;
   out_5292336351074770392[112] = 0;
   out_5292336351074770392[113] = 0;
   out_5292336351074770392[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5292336351074770392[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5292336351074770392[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5292336351074770392[117] = 0;
   out_5292336351074770392[118] = 0;
   out_5292336351074770392[119] = 0;
   out_5292336351074770392[120] = 0;
   out_5292336351074770392[121] = 0;
   out_5292336351074770392[122] = 0;
   out_5292336351074770392[123] = 0;
   out_5292336351074770392[124] = 0;
   out_5292336351074770392[125] = 0;
   out_5292336351074770392[126] = 0;
   out_5292336351074770392[127] = 0;
   out_5292336351074770392[128] = 0;
   out_5292336351074770392[129] = 0;
   out_5292336351074770392[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5292336351074770392[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5292336351074770392[132] = 1;
   out_5292336351074770392[133] = 0;
   out_5292336351074770392[134] = 0;
   out_5292336351074770392[135] = 0;
   out_5292336351074770392[136] = 0;
   out_5292336351074770392[137] = 0;
   out_5292336351074770392[138] = 0;
   out_5292336351074770392[139] = 0;
   out_5292336351074770392[140] = 0;
   out_5292336351074770392[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5292336351074770392[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5292336351074770392[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5292336351074770392[144] = 0;
   out_5292336351074770392[145] = 0;
   out_5292336351074770392[146] = 0;
   out_5292336351074770392[147] = 0;
   out_5292336351074770392[148] = 0;
   out_5292336351074770392[149] = 0;
   out_5292336351074770392[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5292336351074770392[151] = 0;
   out_5292336351074770392[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5292336351074770392[153] = 0;
   out_5292336351074770392[154] = 1;
   out_5292336351074770392[155] = 0;
   out_5292336351074770392[156] = 0;
   out_5292336351074770392[157] = 0;
   out_5292336351074770392[158] = 0;
   out_5292336351074770392[159] = 0;
   out_5292336351074770392[160] = 0;
   out_5292336351074770392[161] = 0;
   out_5292336351074770392[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5292336351074770392[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5292336351074770392[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5292336351074770392[165] = 0;
   out_5292336351074770392[166] = 0;
   out_5292336351074770392[167] = 0;
   out_5292336351074770392[168] = 0;
   out_5292336351074770392[169] = 0;
   out_5292336351074770392[170] = 0;
   out_5292336351074770392[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5292336351074770392[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5292336351074770392[173] = 0;
   out_5292336351074770392[174] = 0;
   out_5292336351074770392[175] = 0;
   out_5292336351074770392[176] = 1;
   out_5292336351074770392[177] = 0;
   out_5292336351074770392[178] = 0;
   out_5292336351074770392[179] = 0;
   out_5292336351074770392[180] = 0;
   out_5292336351074770392[181] = 0;
   out_5292336351074770392[182] = 0;
   out_5292336351074770392[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5292336351074770392[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5292336351074770392[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5292336351074770392[186] = 0;
   out_5292336351074770392[187] = 0;
   out_5292336351074770392[188] = 0;
   out_5292336351074770392[189] = 0;
   out_5292336351074770392[190] = 0;
   out_5292336351074770392[191] = 0;
   out_5292336351074770392[192] = 0;
   out_5292336351074770392[193] = 0;
   out_5292336351074770392[194] = 0;
   out_5292336351074770392[195] = 0;
   out_5292336351074770392[196] = 0;
   out_5292336351074770392[197] = 0;
   out_5292336351074770392[198] = 1;
   out_5292336351074770392[199] = 0;
   out_5292336351074770392[200] = 0;
   out_5292336351074770392[201] = 0;
   out_5292336351074770392[202] = 0;
   out_5292336351074770392[203] = 0;
   out_5292336351074770392[204] = 0;
   out_5292336351074770392[205] = 0;
   out_5292336351074770392[206] = 0;
   out_5292336351074770392[207] = 0;
   out_5292336351074770392[208] = 0;
   out_5292336351074770392[209] = 0;
   out_5292336351074770392[210] = 0;
   out_5292336351074770392[211] = 0;
   out_5292336351074770392[212] = 0;
   out_5292336351074770392[213] = 0;
   out_5292336351074770392[214] = 0;
   out_5292336351074770392[215] = 0;
   out_5292336351074770392[216] = 0;
   out_5292336351074770392[217] = 0;
   out_5292336351074770392[218] = 0;
   out_5292336351074770392[219] = 0;
   out_5292336351074770392[220] = 1;
   out_5292336351074770392[221] = 0;
   out_5292336351074770392[222] = 0;
   out_5292336351074770392[223] = 0;
   out_5292336351074770392[224] = 0;
   out_5292336351074770392[225] = 0;
   out_5292336351074770392[226] = 0;
   out_5292336351074770392[227] = 0;
   out_5292336351074770392[228] = 0;
   out_5292336351074770392[229] = 0;
   out_5292336351074770392[230] = 0;
   out_5292336351074770392[231] = 0;
   out_5292336351074770392[232] = 0;
   out_5292336351074770392[233] = 0;
   out_5292336351074770392[234] = 0;
   out_5292336351074770392[235] = 0;
   out_5292336351074770392[236] = 0;
   out_5292336351074770392[237] = 0;
   out_5292336351074770392[238] = 0;
   out_5292336351074770392[239] = 0;
   out_5292336351074770392[240] = 0;
   out_5292336351074770392[241] = 0;
   out_5292336351074770392[242] = 1;
   out_5292336351074770392[243] = 0;
   out_5292336351074770392[244] = 0;
   out_5292336351074770392[245] = 0;
   out_5292336351074770392[246] = 0;
   out_5292336351074770392[247] = 0;
   out_5292336351074770392[248] = 0;
   out_5292336351074770392[249] = 0;
   out_5292336351074770392[250] = 0;
   out_5292336351074770392[251] = 0;
   out_5292336351074770392[252] = 0;
   out_5292336351074770392[253] = 0;
   out_5292336351074770392[254] = 0;
   out_5292336351074770392[255] = 0;
   out_5292336351074770392[256] = 0;
   out_5292336351074770392[257] = 0;
   out_5292336351074770392[258] = 0;
   out_5292336351074770392[259] = 0;
   out_5292336351074770392[260] = 0;
   out_5292336351074770392[261] = 0;
   out_5292336351074770392[262] = 0;
   out_5292336351074770392[263] = 0;
   out_5292336351074770392[264] = 1;
   out_5292336351074770392[265] = 0;
   out_5292336351074770392[266] = 0;
   out_5292336351074770392[267] = 0;
   out_5292336351074770392[268] = 0;
   out_5292336351074770392[269] = 0;
   out_5292336351074770392[270] = 0;
   out_5292336351074770392[271] = 0;
   out_5292336351074770392[272] = 0;
   out_5292336351074770392[273] = 0;
   out_5292336351074770392[274] = 0;
   out_5292336351074770392[275] = 0;
   out_5292336351074770392[276] = 0;
   out_5292336351074770392[277] = 0;
   out_5292336351074770392[278] = 0;
   out_5292336351074770392[279] = 0;
   out_5292336351074770392[280] = 0;
   out_5292336351074770392[281] = 0;
   out_5292336351074770392[282] = 0;
   out_5292336351074770392[283] = 0;
   out_5292336351074770392[284] = 0;
   out_5292336351074770392[285] = 0;
   out_5292336351074770392[286] = 1;
   out_5292336351074770392[287] = 0;
   out_5292336351074770392[288] = 0;
   out_5292336351074770392[289] = 0;
   out_5292336351074770392[290] = 0;
   out_5292336351074770392[291] = 0;
   out_5292336351074770392[292] = 0;
   out_5292336351074770392[293] = 0;
   out_5292336351074770392[294] = 0;
   out_5292336351074770392[295] = 0;
   out_5292336351074770392[296] = 0;
   out_5292336351074770392[297] = 0;
   out_5292336351074770392[298] = 0;
   out_5292336351074770392[299] = 0;
   out_5292336351074770392[300] = 0;
   out_5292336351074770392[301] = 0;
   out_5292336351074770392[302] = 0;
   out_5292336351074770392[303] = 0;
   out_5292336351074770392[304] = 0;
   out_5292336351074770392[305] = 0;
   out_5292336351074770392[306] = 0;
   out_5292336351074770392[307] = 0;
   out_5292336351074770392[308] = 1;
   out_5292336351074770392[309] = 0;
   out_5292336351074770392[310] = 0;
   out_5292336351074770392[311] = 0;
   out_5292336351074770392[312] = 0;
   out_5292336351074770392[313] = 0;
   out_5292336351074770392[314] = 0;
   out_5292336351074770392[315] = 0;
   out_5292336351074770392[316] = 0;
   out_5292336351074770392[317] = 0;
   out_5292336351074770392[318] = 0;
   out_5292336351074770392[319] = 0;
   out_5292336351074770392[320] = 0;
   out_5292336351074770392[321] = 0;
   out_5292336351074770392[322] = 0;
   out_5292336351074770392[323] = 0;
   out_5292336351074770392[324] = 0;
   out_5292336351074770392[325] = 0;
   out_5292336351074770392[326] = 0;
   out_5292336351074770392[327] = 0;
   out_5292336351074770392[328] = 0;
   out_5292336351074770392[329] = 0;
   out_5292336351074770392[330] = 1;
   out_5292336351074770392[331] = 0;
   out_5292336351074770392[332] = 0;
   out_5292336351074770392[333] = 0;
   out_5292336351074770392[334] = 0;
   out_5292336351074770392[335] = 0;
   out_5292336351074770392[336] = 0;
   out_5292336351074770392[337] = 0;
   out_5292336351074770392[338] = 0;
   out_5292336351074770392[339] = 0;
   out_5292336351074770392[340] = 0;
   out_5292336351074770392[341] = 0;
   out_5292336351074770392[342] = 0;
   out_5292336351074770392[343] = 0;
   out_5292336351074770392[344] = 0;
   out_5292336351074770392[345] = 0;
   out_5292336351074770392[346] = 0;
   out_5292336351074770392[347] = 0;
   out_5292336351074770392[348] = 0;
   out_5292336351074770392[349] = 0;
   out_5292336351074770392[350] = 0;
   out_5292336351074770392[351] = 0;
   out_5292336351074770392[352] = 1;
   out_5292336351074770392[353] = 0;
   out_5292336351074770392[354] = 0;
   out_5292336351074770392[355] = 0;
   out_5292336351074770392[356] = 0;
   out_5292336351074770392[357] = 0;
   out_5292336351074770392[358] = 0;
   out_5292336351074770392[359] = 0;
   out_5292336351074770392[360] = 0;
   out_5292336351074770392[361] = 0;
   out_5292336351074770392[362] = 0;
   out_5292336351074770392[363] = 0;
   out_5292336351074770392[364] = 0;
   out_5292336351074770392[365] = 0;
   out_5292336351074770392[366] = 0;
   out_5292336351074770392[367] = 0;
   out_5292336351074770392[368] = 0;
   out_5292336351074770392[369] = 0;
   out_5292336351074770392[370] = 0;
   out_5292336351074770392[371] = 0;
   out_5292336351074770392[372] = 0;
   out_5292336351074770392[373] = 0;
   out_5292336351074770392[374] = 1;
   out_5292336351074770392[375] = 0;
   out_5292336351074770392[376] = 0;
   out_5292336351074770392[377] = 0;
   out_5292336351074770392[378] = 0;
   out_5292336351074770392[379] = 0;
   out_5292336351074770392[380] = 0;
   out_5292336351074770392[381] = 0;
   out_5292336351074770392[382] = 0;
   out_5292336351074770392[383] = 0;
   out_5292336351074770392[384] = 0;
   out_5292336351074770392[385] = 0;
   out_5292336351074770392[386] = 0;
   out_5292336351074770392[387] = 0;
   out_5292336351074770392[388] = 0;
   out_5292336351074770392[389] = 0;
   out_5292336351074770392[390] = 0;
   out_5292336351074770392[391] = 0;
   out_5292336351074770392[392] = 0;
   out_5292336351074770392[393] = 0;
   out_5292336351074770392[394] = 0;
   out_5292336351074770392[395] = 0;
   out_5292336351074770392[396] = 1;
   out_5292336351074770392[397] = 0;
   out_5292336351074770392[398] = 0;
   out_5292336351074770392[399] = 0;
   out_5292336351074770392[400] = 0;
   out_5292336351074770392[401] = 0;
   out_5292336351074770392[402] = 0;
   out_5292336351074770392[403] = 0;
   out_5292336351074770392[404] = 0;
   out_5292336351074770392[405] = 0;
   out_5292336351074770392[406] = 0;
   out_5292336351074770392[407] = 0;
   out_5292336351074770392[408] = 0;
   out_5292336351074770392[409] = 0;
   out_5292336351074770392[410] = 0;
   out_5292336351074770392[411] = 0;
   out_5292336351074770392[412] = 0;
   out_5292336351074770392[413] = 0;
   out_5292336351074770392[414] = 0;
   out_5292336351074770392[415] = 0;
   out_5292336351074770392[416] = 0;
   out_5292336351074770392[417] = 0;
   out_5292336351074770392[418] = 1;
   out_5292336351074770392[419] = 0;
   out_5292336351074770392[420] = 0;
   out_5292336351074770392[421] = 0;
   out_5292336351074770392[422] = 0;
   out_5292336351074770392[423] = 0;
   out_5292336351074770392[424] = 0;
   out_5292336351074770392[425] = 0;
   out_5292336351074770392[426] = 0;
   out_5292336351074770392[427] = 0;
   out_5292336351074770392[428] = 0;
   out_5292336351074770392[429] = 0;
   out_5292336351074770392[430] = 0;
   out_5292336351074770392[431] = 0;
   out_5292336351074770392[432] = 0;
   out_5292336351074770392[433] = 0;
   out_5292336351074770392[434] = 0;
   out_5292336351074770392[435] = 0;
   out_5292336351074770392[436] = 0;
   out_5292336351074770392[437] = 0;
   out_5292336351074770392[438] = 0;
   out_5292336351074770392[439] = 0;
   out_5292336351074770392[440] = 1;
}
void h_4(double *state, double *unused, double *out_7730102872744429728) {
   out_7730102872744429728[0] = state[10] + state[13];
   out_7730102872744429728[1] = state[11] + state[14];
   out_7730102872744429728[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3258285380341575150) {
   out_3258285380341575150[0] = 0;
   out_3258285380341575150[1] = 0;
   out_3258285380341575150[2] = 0;
   out_3258285380341575150[3] = 0;
   out_3258285380341575150[4] = 0;
   out_3258285380341575150[5] = 0;
   out_3258285380341575150[6] = 0;
   out_3258285380341575150[7] = 0;
   out_3258285380341575150[8] = 0;
   out_3258285380341575150[9] = 0;
   out_3258285380341575150[10] = 1;
   out_3258285380341575150[11] = 0;
   out_3258285380341575150[12] = 0;
   out_3258285380341575150[13] = 1;
   out_3258285380341575150[14] = 0;
   out_3258285380341575150[15] = 0;
   out_3258285380341575150[16] = 0;
   out_3258285380341575150[17] = 0;
   out_3258285380341575150[18] = 0;
   out_3258285380341575150[19] = 0;
   out_3258285380341575150[20] = 0;
   out_3258285380341575150[21] = 0;
   out_3258285380341575150[22] = 0;
   out_3258285380341575150[23] = 0;
   out_3258285380341575150[24] = 0;
   out_3258285380341575150[25] = 0;
   out_3258285380341575150[26] = 0;
   out_3258285380341575150[27] = 0;
   out_3258285380341575150[28] = 0;
   out_3258285380341575150[29] = 0;
   out_3258285380341575150[30] = 0;
   out_3258285380341575150[31] = 0;
   out_3258285380341575150[32] = 0;
   out_3258285380341575150[33] = 1;
   out_3258285380341575150[34] = 0;
   out_3258285380341575150[35] = 0;
   out_3258285380341575150[36] = 1;
   out_3258285380341575150[37] = 0;
   out_3258285380341575150[38] = 0;
   out_3258285380341575150[39] = 0;
   out_3258285380341575150[40] = 0;
   out_3258285380341575150[41] = 0;
   out_3258285380341575150[42] = 0;
   out_3258285380341575150[43] = 0;
   out_3258285380341575150[44] = 0;
   out_3258285380341575150[45] = 0;
   out_3258285380341575150[46] = 0;
   out_3258285380341575150[47] = 0;
   out_3258285380341575150[48] = 0;
   out_3258285380341575150[49] = 0;
   out_3258285380341575150[50] = 0;
   out_3258285380341575150[51] = 0;
   out_3258285380341575150[52] = 0;
   out_3258285380341575150[53] = 0;
   out_3258285380341575150[54] = 0;
   out_3258285380341575150[55] = 0;
   out_3258285380341575150[56] = 1;
   out_3258285380341575150[57] = 0;
   out_3258285380341575150[58] = 0;
   out_3258285380341575150[59] = 1;
   out_3258285380341575150[60] = 0;
   out_3258285380341575150[61] = 0;
   out_3258285380341575150[62] = 0;
   out_3258285380341575150[63] = 0;
   out_3258285380341575150[64] = 0;
   out_3258285380341575150[65] = 0;
}
void h_9(double *state, double *unused, double *out_2507810790711750711) {
   out_2507810790711750711[0] = state[10];
   out_2507810790711750711[1] = state[11];
   out_2507810790711750711[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7901239758103528996) {
   out_7901239758103528996[0] = 0;
   out_7901239758103528996[1] = 0;
   out_7901239758103528996[2] = 0;
   out_7901239758103528996[3] = 0;
   out_7901239758103528996[4] = 0;
   out_7901239758103528996[5] = 0;
   out_7901239758103528996[6] = 0;
   out_7901239758103528996[7] = 0;
   out_7901239758103528996[8] = 0;
   out_7901239758103528996[9] = 0;
   out_7901239758103528996[10] = 1;
   out_7901239758103528996[11] = 0;
   out_7901239758103528996[12] = 0;
   out_7901239758103528996[13] = 0;
   out_7901239758103528996[14] = 0;
   out_7901239758103528996[15] = 0;
   out_7901239758103528996[16] = 0;
   out_7901239758103528996[17] = 0;
   out_7901239758103528996[18] = 0;
   out_7901239758103528996[19] = 0;
   out_7901239758103528996[20] = 0;
   out_7901239758103528996[21] = 0;
   out_7901239758103528996[22] = 0;
   out_7901239758103528996[23] = 0;
   out_7901239758103528996[24] = 0;
   out_7901239758103528996[25] = 0;
   out_7901239758103528996[26] = 0;
   out_7901239758103528996[27] = 0;
   out_7901239758103528996[28] = 0;
   out_7901239758103528996[29] = 0;
   out_7901239758103528996[30] = 0;
   out_7901239758103528996[31] = 0;
   out_7901239758103528996[32] = 0;
   out_7901239758103528996[33] = 1;
   out_7901239758103528996[34] = 0;
   out_7901239758103528996[35] = 0;
   out_7901239758103528996[36] = 0;
   out_7901239758103528996[37] = 0;
   out_7901239758103528996[38] = 0;
   out_7901239758103528996[39] = 0;
   out_7901239758103528996[40] = 0;
   out_7901239758103528996[41] = 0;
   out_7901239758103528996[42] = 0;
   out_7901239758103528996[43] = 0;
   out_7901239758103528996[44] = 0;
   out_7901239758103528996[45] = 0;
   out_7901239758103528996[46] = 0;
   out_7901239758103528996[47] = 0;
   out_7901239758103528996[48] = 0;
   out_7901239758103528996[49] = 0;
   out_7901239758103528996[50] = 0;
   out_7901239758103528996[51] = 0;
   out_7901239758103528996[52] = 0;
   out_7901239758103528996[53] = 0;
   out_7901239758103528996[54] = 0;
   out_7901239758103528996[55] = 0;
   out_7901239758103528996[56] = 1;
   out_7901239758103528996[57] = 0;
   out_7901239758103528996[58] = 0;
   out_7901239758103528996[59] = 0;
   out_7901239758103528996[60] = 0;
   out_7901239758103528996[61] = 0;
   out_7901239758103528996[62] = 0;
   out_7901239758103528996[63] = 0;
   out_7901239758103528996[64] = 0;
   out_7901239758103528996[65] = 0;
}
void h_10(double *state, double *unused, double *out_5427455976156256445) {
   out_5427455976156256445[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5427455976156256445[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5427455976156256445[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4292991088859467531) {
   out_4292991088859467531[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4292991088859467531[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4292991088859467531[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4292991088859467531[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4292991088859467531[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4292991088859467531[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4292991088859467531[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4292991088859467531[7] = 0;
   out_4292991088859467531[8] = 0;
   out_4292991088859467531[9] = 0;
   out_4292991088859467531[10] = 0;
   out_4292991088859467531[11] = 0;
   out_4292991088859467531[12] = 0;
   out_4292991088859467531[13] = 0;
   out_4292991088859467531[14] = 0;
   out_4292991088859467531[15] = 0;
   out_4292991088859467531[16] = 1;
   out_4292991088859467531[17] = 0;
   out_4292991088859467531[18] = 0;
   out_4292991088859467531[19] = 1;
   out_4292991088859467531[20] = 0;
   out_4292991088859467531[21] = 0;
   out_4292991088859467531[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4292991088859467531[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4292991088859467531[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4292991088859467531[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4292991088859467531[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4292991088859467531[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4292991088859467531[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4292991088859467531[29] = 0;
   out_4292991088859467531[30] = 0;
   out_4292991088859467531[31] = 0;
   out_4292991088859467531[32] = 0;
   out_4292991088859467531[33] = 0;
   out_4292991088859467531[34] = 0;
   out_4292991088859467531[35] = 0;
   out_4292991088859467531[36] = 0;
   out_4292991088859467531[37] = 0;
   out_4292991088859467531[38] = 0;
   out_4292991088859467531[39] = 1;
   out_4292991088859467531[40] = 0;
   out_4292991088859467531[41] = 0;
   out_4292991088859467531[42] = 1;
   out_4292991088859467531[43] = 0;
   out_4292991088859467531[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4292991088859467531[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4292991088859467531[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4292991088859467531[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4292991088859467531[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4292991088859467531[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4292991088859467531[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4292991088859467531[51] = 0;
   out_4292991088859467531[52] = 0;
   out_4292991088859467531[53] = 0;
   out_4292991088859467531[54] = 0;
   out_4292991088859467531[55] = 0;
   out_4292991088859467531[56] = 0;
   out_4292991088859467531[57] = 0;
   out_4292991088859467531[58] = 0;
   out_4292991088859467531[59] = 0;
   out_4292991088859467531[60] = 0;
   out_4292991088859467531[61] = 0;
   out_4292991088859467531[62] = 1;
   out_4292991088859467531[63] = 0;
   out_4292991088859467531[64] = 0;
   out_4292991088859467531[65] = 1;
}
void h_12(double *state, double *unused, double *out_2256952412241767232) {
   out_2256952412241767232[0] = state[0];
   out_2256952412241767232[1] = state[1];
   out_2256952412241767232[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7521330379685525974) {
   out_7521330379685525974[0] = 1;
   out_7521330379685525974[1] = 0;
   out_7521330379685525974[2] = 0;
   out_7521330379685525974[3] = 0;
   out_7521330379685525974[4] = 0;
   out_7521330379685525974[5] = 0;
   out_7521330379685525974[6] = 0;
   out_7521330379685525974[7] = 0;
   out_7521330379685525974[8] = 0;
   out_7521330379685525974[9] = 0;
   out_7521330379685525974[10] = 0;
   out_7521330379685525974[11] = 0;
   out_7521330379685525974[12] = 0;
   out_7521330379685525974[13] = 0;
   out_7521330379685525974[14] = 0;
   out_7521330379685525974[15] = 0;
   out_7521330379685525974[16] = 0;
   out_7521330379685525974[17] = 0;
   out_7521330379685525974[18] = 0;
   out_7521330379685525974[19] = 0;
   out_7521330379685525974[20] = 0;
   out_7521330379685525974[21] = 0;
   out_7521330379685525974[22] = 0;
   out_7521330379685525974[23] = 1;
   out_7521330379685525974[24] = 0;
   out_7521330379685525974[25] = 0;
   out_7521330379685525974[26] = 0;
   out_7521330379685525974[27] = 0;
   out_7521330379685525974[28] = 0;
   out_7521330379685525974[29] = 0;
   out_7521330379685525974[30] = 0;
   out_7521330379685525974[31] = 0;
   out_7521330379685525974[32] = 0;
   out_7521330379685525974[33] = 0;
   out_7521330379685525974[34] = 0;
   out_7521330379685525974[35] = 0;
   out_7521330379685525974[36] = 0;
   out_7521330379685525974[37] = 0;
   out_7521330379685525974[38] = 0;
   out_7521330379685525974[39] = 0;
   out_7521330379685525974[40] = 0;
   out_7521330379685525974[41] = 0;
   out_7521330379685525974[42] = 0;
   out_7521330379685525974[43] = 0;
   out_7521330379685525974[44] = 0;
   out_7521330379685525974[45] = 0;
   out_7521330379685525974[46] = 1;
   out_7521330379685525974[47] = 0;
   out_7521330379685525974[48] = 0;
   out_7521330379685525974[49] = 0;
   out_7521330379685525974[50] = 0;
   out_7521330379685525974[51] = 0;
   out_7521330379685525974[52] = 0;
   out_7521330379685525974[53] = 0;
   out_7521330379685525974[54] = 0;
   out_7521330379685525974[55] = 0;
   out_7521330379685525974[56] = 0;
   out_7521330379685525974[57] = 0;
   out_7521330379685525974[58] = 0;
   out_7521330379685525974[59] = 0;
   out_7521330379685525974[60] = 0;
   out_7521330379685525974[61] = 0;
   out_7521330379685525974[62] = 0;
   out_7521330379685525974[63] = 0;
   out_7521330379685525974[64] = 0;
   out_7521330379685525974[65] = 0;
}
void h_31(double *state, double *unused, double *out_216992504528642618) {
   out_216992504528642618[0] = state[7];
   out_216992504528642618[1] = state[8];
   out_216992504528642618[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4775767347360512265) {
   out_4775767347360512265[0] = 0;
   out_4775767347360512265[1] = 0;
   out_4775767347360512265[2] = 0;
   out_4775767347360512265[3] = 0;
   out_4775767347360512265[4] = 0;
   out_4775767347360512265[5] = 0;
   out_4775767347360512265[6] = 0;
   out_4775767347360512265[7] = 1;
   out_4775767347360512265[8] = 0;
   out_4775767347360512265[9] = 0;
   out_4775767347360512265[10] = 0;
   out_4775767347360512265[11] = 0;
   out_4775767347360512265[12] = 0;
   out_4775767347360512265[13] = 0;
   out_4775767347360512265[14] = 0;
   out_4775767347360512265[15] = 0;
   out_4775767347360512265[16] = 0;
   out_4775767347360512265[17] = 0;
   out_4775767347360512265[18] = 0;
   out_4775767347360512265[19] = 0;
   out_4775767347360512265[20] = 0;
   out_4775767347360512265[21] = 0;
   out_4775767347360512265[22] = 0;
   out_4775767347360512265[23] = 0;
   out_4775767347360512265[24] = 0;
   out_4775767347360512265[25] = 0;
   out_4775767347360512265[26] = 0;
   out_4775767347360512265[27] = 0;
   out_4775767347360512265[28] = 0;
   out_4775767347360512265[29] = 0;
   out_4775767347360512265[30] = 1;
   out_4775767347360512265[31] = 0;
   out_4775767347360512265[32] = 0;
   out_4775767347360512265[33] = 0;
   out_4775767347360512265[34] = 0;
   out_4775767347360512265[35] = 0;
   out_4775767347360512265[36] = 0;
   out_4775767347360512265[37] = 0;
   out_4775767347360512265[38] = 0;
   out_4775767347360512265[39] = 0;
   out_4775767347360512265[40] = 0;
   out_4775767347360512265[41] = 0;
   out_4775767347360512265[42] = 0;
   out_4775767347360512265[43] = 0;
   out_4775767347360512265[44] = 0;
   out_4775767347360512265[45] = 0;
   out_4775767347360512265[46] = 0;
   out_4775767347360512265[47] = 0;
   out_4775767347360512265[48] = 0;
   out_4775767347360512265[49] = 0;
   out_4775767347360512265[50] = 0;
   out_4775767347360512265[51] = 0;
   out_4775767347360512265[52] = 0;
   out_4775767347360512265[53] = 1;
   out_4775767347360512265[54] = 0;
   out_4775767347360512265[55] = 0;
   out_4775767347360512265[56] = 0;
   out_4775767347360512265[57] = 0;
   out_4775767347360512265[58] = 0;
   out_4775767347360512265[59] = 0;
   out_4775767347360512265[60] = 0;
   out_4775767347360512265[61] = 0;
   out_4775767347360512265[62] = 0;
   out_4775767347360512265[63] = 0;
   out_4775767347360512265[64] = 0;
   out_4775767347360512265[65] = 0;
}
void h_32(double *state, double *unused, double *out_6575289537096574912) {
   out_6575289537096574912[0] = state[3];
   out_6575289537096574912[1] = state[4];
   out_6575289537096574912[2] = state[5];
   out_6575289537096574912[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5088389042247957293) {
   out_5088389042247957293[0] = 0;
   out_5088389042247957293[1] = 0;
   out_5088389042247957293[2] = 0;
   out_5088389042247957293[3] = 1;
   out_5088389042247957293[4] = 0;
   out_5088389042247957293[5] = 0;
   out_5088389042247957293[6] = 0;
   out_5088389042247957293[7] = 0;
   out_5088389042247957293[8] = 0;
   out_5088389042247957293[9] = 0;
   out_5088389042247957293[10] = 0;
   out_5088389042247957293[11] = 0;
   out_5088389042247957293[12] = 0;
   out_5088389042247957293[13] = 0;
   out_5088389042247957293[14] = 0;
   out_5088389042247957293[15] = 0;
   out_5088389042247957293[16] = 0;
   out_5088389042247957293[17] = 0;
   out_5088389042247957293[18] = 0;
   out_5088389042247957293[19] = 0;
   out_5088389042247957293[20] = 0;
   out_5088389042247957293[21] = 0;
   out_5088389042247957293[22] = 0;
   out_5088389042247957293[23] = 0;
   out_5088389042247957293[24] = 0;
   out_5088389042247957293[25] = 0;
   out_5088389042247957293[26] = 1;
   out_5088389042247957293[27] = 0;
   out_5088389042247957293[28] = 0;
   out_5088389042247957293[29] = 0;
   out_5088389042247957293[30] = 0;
   out_5088389042247957293[31] = 0;
   out_5088389042247957293[32] = 0;
   out_5088389042247957293[33] = 0;
   out_5088389042247957293[34] = 0;
   out_5088389042247957293[35] = 0;
   out_5088389042247957293[36] = 0;
   out_5088389042247957293[37] = 0;
   out_5088389042247957293[38] = 0;
   out_5088389042247957293[39] = 0;
   out_5088389042247957293[40] = 0;
   out_5088389042247957293[41] = 0;
   out_5088389042247957293[42] = 0;
   out_5088389042247957293[43] = 0;
   out_5088389042247957293[44] = 0;
   out_5088389042247957293[45] = 0;
   out_5088389042247957293[46] = 0;
   out_5088389042247957293[47] = 0;
   out_5088389042247957293[48] = 0;
   out_5088389042247957293[49] = 1;
   out_5088389042247957293[50] = 0;
   out_5088389042247957293[51] = 0;
   out_5088389042247957293[52] = 0;
   out_5088389042247957293[53] = 0;
   out_5088389042247957293[54] = 0;
   out_5088389042247957293[55] = 0;
   out_5088389042247957293[56] = 0;
   out_5088389042247957293[57] = 0;
   out_5088389042247957293[58] = 0;
   out_5088389042247957293[59] = 0;
   out_5088389042247957293[60] = 0;
   out_5088389042247957293[61] = 0;
   out_5088389042247957293[62] = 0;
   out_5088389042247957293[63] = 0;
   out_5088389042247957293[64] = 0;
   out_5088389042247957293[65] = 0;
   out_5088389042247957293[66] = 0;
   out_5088389042247957293[67] = 0;
   out_5088389042247957293[68] = 0;
   out_5088389042247957293[69] = 0;
   out_5088389042247957293[70] = 0;
   out_5088389042247957293[71] = 0;
   out_5088389042247957293[72] = 1;
   out_5088389042247957293[73] = 0;
   out_5088389042247957293[74] = 0;
   out_5088389042247957293[75] = 0;
   out_5088389042247957293[76] = 0;
   out_5088389042247957293[77] = 0;
   out_5088389042247957293[78] = 0;
   out_5088389042247957293[79] = 0;
   out_5088389042247957293[80] = 0;
   out_5088389042247957293[81] = 0;
   out_5088389042247957293[82] = 0;
   out_5088389042247957293[83] = 0;
   out_5088389042247957293[84] = 0;
   out_5088389042247957293[85] = 0;
   out_5088389042247957293[86] = 0;
   out_5088389042247957293[87] = 0;
}
void h_13(double *state, double *unused, double *out_3557615268607894996) {
   out_3557615268607894996[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3557615268607894996[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3557615268607894996[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7345515301927333450) {
   out_7345515301927333450[0] = 0;
   out_7345515301927333450[1] = 0;
   out_7345515301927333450[2] = 0;
   out_7345515301927333450[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7345515301927333450[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7345515301927333450[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7345515301927333450[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7345515301927333450[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7345515301927333450[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7345515301927333450[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7345515301927333450[10] = 0;
   out_7345515301927333450[11] = 0;
   out_7345515301927333450[12] = 0;
   out_7345515301927333450[13] = 0;
   out_7345515301927333450[14] = 0;
   out_7345515301927333450[15] = 0;
   out_7345515301927333450[16] = 0;
   out_7345515301927333450[17] = 0;
   out_7345515301927333450[18] = 0;
   out_7345515301927333450[19] = 0;
   out_7345515301927333450[20] = 0;
   out_7345515301927333450[21] = 0;
   out_7345515301927333450[22] = 0;
   out_7345515301927333450[23] = 0;
   out_7345515301927333450[24] = 0;
   out_7345515301927333450[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7345515301927333450[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7345515301927333450[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7345515301927333450[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7345515301927333450[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7345515301927333450[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7345515301927333450[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7345515301927333450[32] = 0;
   out_7345515301927333450[33] = 0;
   out_7345515301927333450[34] = 0;
   out_7345515301927333450[35] = 0;
   out_7345515301927333450[36] = 0;
   out_7345515301927333450[37] = 0;
   out_7345515301927333450[38] = 0;
   out_7345515301927333450[39] = 0;
   out_7345515301927333450[40] = 0;
   out_7345515301927333450[41] = 0;
   out_7345515301927333450[42] = 0;
   out_7345515301927333450[43] = 0;
   out_7345515301927333450[44] = 0;
   out_7345515301927333450[45] = 0;
   out_7345515301927333450[46] = 0;
   out_7345515301927333450[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7345515301927333450[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7345515301927333450[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7345515301927333450[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7345515301927333450[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7345515301927333450[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7345515301927333450[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7345515301927333450[54] = 0;
   out_7345515301927333450[55] = 0;
   out_7345515301927333450[56] = 0;
   out_7345515301927333450[57] = 0;
   out_7345515301927333450[58] = 0;
   out_7345515301927333450[59] = 0;
   out_7345515301927333450[60] = 0;
   out_7345515301927333450[61] = 0;
   out_7345515301927333450[62] = 0;
   out_7345515301927333450[63] = 0;
   out_7345515301927333450[64] = 0;
   out_7345515301927333450[65] = 0;
}
void h_14(double *state, double *unused, double *out_2507810790711750711) {
   out_2507810790711750711[0] = state[10];
   out_2507810790711750711[1] = state[11];
   out_2507810790711750711[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7901239758103528996) {
   out_7901239758103528996[0] = 0;
   out_7901239758103528996[1] = 0;
   out_7901239758103528996[2] = 0;
   out_7901239758103528996[3] = 0;
   out_7901239758103528996[4] = 0;
   out_7901239758103528996[5] = 0;
   out_7901239758103528996[6] = 0;
   out_7901239758103528996[7] = 0;
   out_7901239758103528996[8] = 0;
   out_7901239758103528996[9] = 0;
   out_7901239758103528996[10] = 1;
   out_7901239758103528996[11] = 0;
   out_7901239758103528996[12] = 0;
   out_7901239758103528996[13] = 0;
   out_7901239758103528996[14] = 0;
   out_7901239758103528996[15] = 0;
   out_7901239758103528996[16] = 0;
   out_7901239758103528996[17] = 0;
   out_7901239758103528996[18] = 0;
   out_7901239758103528996[19] = 0;
   out_7901239758103528996[20] = 0;
   out_7901239758103528996[21] = 0;
   out_7901239758103528996[22] = 0;
   out_7901239758103528996[23] = 0;
   out_7901239758103528996[24] = 0;
   out_7901239758103528996[25] = 0;
   out_7901239758103528996[26] = 0;
   out_7901239758103528996[27] = 0;
   out_7901239758103528996[28] = 0;
   out_7901239758103528996[29] = 0;
   out_7901239758103528996[30] = 0;
   out_7901239758103528996[31] = 0;
   out_7901239758103528996[32] = 0;
   out_7901239758103528996[33] = 1;
   out_7901239758103528996[34] = 0;
   out_7901239758103528996[35] = 0;
   out_7901239758103528996[36] = 0;
   out_7901239758103528996[37] = 0;
   out_7901239758103528996[38] = 0;
   out_7901239758103528996[39] = 0;
   out_7901239758103528996[40] = 0;
   out_7901239758103528996[41] = 0;
   out_7901239758103528996[42] = 0;
   out_7901239758103528996[43] = 0;
   out_7901239758103528996[44] = 0;
   out_7901239758103528996[45] = 0;
   out_7901239758103528996[46] = 0;
   out_7901239758103528996[47] = 0;
   out_7901239758103528996[48] = 0;
   out_7901239758103528996[49] = 0;
   out_7901239758103528996[50] = 0;
   out_7901239758103528996[51] = 0;
   out_7901239758103528996[52] = 0;
   out_7901239758103528996[53] = 0;
   out_7901239758103528996[54] = 0;
   out_7901239758103528996[55] = 0;
   out_7901239758103528996[56] = 1;
   out_7901239758103528996[57] = 0;
   out_7901239758103528996[58] = 0;
   out_7901239758103528996[59] = 0;
   out_7901239758103528996[60] = 0;
   out_7901239758103528996[61] = 0;
   out_7901239758103528996[62] = 0;
   out_7901239758103528996[63] = 0;
   out_7901239758103528996[64] = 0;
   out_7901239758103528996[65] = 0;
}
void h_33(double *state, double *unused, double *out_3788603540548372441) {
   out_3788603540548372441[0] = state[16];
   out_3788603540548372441[1] = state[17];
   out_3788603540548372441[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1625210342721654661) {
   out_1625210342721654661[0] = 0;
   out_1625210342721654661[1] = 0;
   out_1625210342721654661[2] = 0;
   out_1625210342721654661[3] = 0;
   out_1625210342721654661[4] = 0;
   out_1625210342721654661[5] = 0;
   out_1625210342721654661[6] = 0;
   out_1625210342721654661[7] = 0;
   out_1625210342721654661[8] = 0;
   out_1625210342721654661[9] = 0;
   out_1625210342721654661[10] = 0;
   out_1625210342721654661[11] = 0;
   out_1625210342721654661[12] = 0;
   out_1625210342721654661[13] = 0;
   out_1625210342721654661[14] = 0;
   out_1625210342721654661[15] = 0;
   out_1625210342721654661[16] = 1;
   out_1625210342721654661[17] = 0;
   out_1625210342721654661[18] = 0;
   out_1625210342721654661[19] = 0;
   out_1625210342721654661[20] = 0;
   out_1625210342721654661[21] = 0;
   out_1625210342721654661[22] = 0;
   out_1625210342721654661[23] = 0;
   out_1625210342721654661[24] = 0;
   out_1625210342721654661[25] = 0;
   out_1625210342721654661[26] = 0;
   out_1625210342721654661[27] = 0;
   out_1625210342721654661[28] = 0;
   out_1625210342721654661[29] = 0;
   out_1625210342721654661[30] = 0;
   out_1625210342721654661[31] = 0;
   out_1625210342721654661[32] = 0;
   out_1625210342721654661[33] = 0;
   out_1625210342721654661[34] = 0;
   out_1625210342721654661[35] = 0;
   out_1625210342721654661[36] = 0;
   out_1625210342721654661[37] = 0;
   out_1625210342721654661[38] = 0;
   out_1625210342721654661[39] = 1;
   out_1625210342721654661[40] = 0;
   out_1625210342721654661[41] = 0;
   out_1625210342721654661[42] = 0;
   out_1625210342721654661[43] = 0;
   out_1625210342721654661[44] = 0;
   out_1625210342721654661[45] = 0;
   out_1625210342721654661[46] = 0;
   out_1625210342721654661[47] = 0;
   out_1625210342721654661[48] = 0;
   out_1625210342721654661[49] = 0;
   out_1625210342721654661[50] = 0;
   out_1625210342721654661[51] = 0;
   out_1625210342721654661[52] = 0;
   out_1625210342721654661[53] = 0;
   out_1625210342721654661[54] = 0;
   out_1625210342721654661[55] = 0;
   out_1625210342721654661[56] = 0;
   out_1625210342721654661[57] = 0;
   out_1625210342721654661[58] = 0;
   out_1625210342721654661[59] = 0;
   out_1625210342721654661[60] = 0;
   out_1625210342721654661[61] = 0;
   out_1625210342721654661[62] = 1;
   out_1625210342721654661[63] = 0;
   out_1625210342721654661[64] = 0;
   out_1625210342721654661[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1967997356340866583) {
  H(in_vec, out_1967997356340866583);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5319645388126622084) {
  err_fun(nom_x, delta_x, out_5319645388126622084);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4147357239501958364) {
  inv_err_fun(nom_x, true_x, out_4147357239501958364);
}
void live_H_mod_fun(double *state, double *out_4013764754807942187) {
  H_mod_fun(state, out_4013764754807942187);
}
void live_f_fun(double *state, double dt, double *out_6649622138097899585) {
  f_fun(state,  dt, out_6649622138097899585);
}
void live_F_fun(double *state, double dt, double *out_5292336351074770392) {
  F_fun(state,  dt, out_5292336351074770392);
}
void live_h_4(double *state, double *unused, double *out_7730102872744429728) {
  h_4(state, unused, out_7730102872744429728);
}
void live_H_4(double *state, double *unused, double *out_3258285380341575150) {
  H_4(state, unused, out_3258285380341575150);
}
void live_h_9(double *state, double *unused, double *out_2507810790711750711) {
  h_9(state, unused, out_2507810790711750711);
}
void live_H_9(double *state, double *unused, double *out_7901239758103528996) {
  H_9(state, unused, out_7901239758103528996);
}
void live_h_10(double *state, double *unused, double *out_5427455976156256445) {
  h_10(state, unused, out_5427455976156256445);
}
void live_H_10(double *state, double *unused, double *out_4292991088859467531) {
  H_10(state, unused, out_4292991088859467531);
}
void live_h_12(double *state, double *unused, double *out_2256952412241767232) {
  h_12(state, unused, out_2256952412241767232);
}
void live_H_12(double *state, double *unused, double *out_7521330379685525974) {
  H_12(state, unused, out_7521330379685525974);
}
void live_h_31(double *state, double *unused, double *out_216992504528642618) {
  h_31(state, unused, out_216992504528642618);
}
void live_H_31(double *state, double *unused, double *out_4775767347360512265) {
  H_31(state, unused, out_4775767347360512265);
}
void live_h_32(double *state, double *unused, double *out_6575289537096574912) {
  h_32(state, unused, out_6575289537096574912);
}
void live_H_32(double *state, double *unused, double *out_5088389042247957293) {
  H_32(state, unused, out_5088389042247957293);
}
void live_h_13(double *state, double *unused, double *out_3557615268607894996) {
  h_13(state, unused, out_3557615268607894996);
}
void live_H_13(double *state, double *unused, double *out_7345515301927333450) {
  H_13(state, unused, out_7345515301927333450);
}
void live_h_14(double *state, double *unused, double *out_2507810790711750711) {
  h_14(state, unused, out_2507810790711750711);
}
void live_H_14(double *state, double *unused, double *out_7901239758103528996) {
  H_14(state, unused, out_7901239758103528996);
}
void live_h_33(double *state, double *unused, double *out_3788603540548372441) {
  h_33(state, unused, out_3788603540548372441);
}
void live_H_33(double *state, double *unused, double *out_1625210342721654661) {
  H_33(state, unused, out_1625210342721654661);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
